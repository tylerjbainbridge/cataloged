### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


input _CollectionToItem_AB_uniqueCompoundUniqueInput {
  A: String!
  B: String!
}

input _ItemToLabel_AB_uniqueCompoundUniqueInput {
  A: String!
  B: String!
}

input BooleanFilter {
  equals: Boolean
  not: Boolean
}

type Collection {
  createdAt: DateTime!
  description: String
  id: String!
  name: String!
  updatedAt: DateTime!
}

type CollectionBlock {
<<<<<<< HEAD
=======
  collection: Collection
>>>>>>> prisma-beta
  content: String!
  createdAt: DateTime!
  id: String!
  type: String!
  updatedAt: DateTime!
}

<<<<<<< HEAD
input CollectionCreateOneWithoutCollectionToItemInput {
  connect: CollectionWhereUniqueInput
  create: CollectionCreateWithoutCollectionToItemInput
=======
input CollectionBlockCreateManyWithoutCollectionInput {
  connect: [CollectionBlockWhereUniqueInput!]
  create: [CollectionBlockCreateWithoutCollectionInput!]
}

input CollectionBlockCreateManyWithoutUserInput {
  connect: [CollectionBlockWhereUniqueInput!]
  create: [CollectionBlockCreateWithoutUserInput!]
}

input CollectionBlockCreateOneWithoutCollectionEntryInput {
  connect: CollectionBlockWhereUniqueInput
  create: CollectionBlockCreateWithoutCollectionEntryInput
}

input CollectionBlockCreateWithoutCollectionEntryInput {
  collection: CollectionCreateOneWithoutCollectionBlockInput
  content: String!
  createdAt: DateTime
  id: String
  type: String!
  updatedAt: DateTime
  user: UserCreateOneWithoutCollectionBlocksInput
}

input CollectionBlockCreateWithoutCollectionInput {
  collectionEntry: CollectionEntryCreateManyWithoutBlockInput
  content: String!
  createdAt: DateTime
  id: String
  type: String!
  updatedAt: DateTime
  user: UserCreateOneWithoutCollectionBlocksInput
}

input CollectionBlockCreateWithoutUserInput {
  collection: CollectionCreateOneWithoutCollectionBlockInput
  collectionEntry: CollectionEntryCreateManyWithoutBlockInput
  content: String!
  createdAt: DateTime
  id: String
  type: String!
  updatedAt: DateTime
}

input CollectionBlockFilter {
  every: CollectionBlockWhereInput
  none: CollectionBlockWhereInput
  some: CollectionBlockWhereInput
}

input CollectionBlockWhereInput {
  AND: [CollectionBlockWhereInput!]
  collection: CollectionWhereInput
  collectionEntry: CollectionEntryFilter
  collectionId: NullableStringFilter
  content: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [CollectionBlockWhereInput!]
  OR: [CollectionBlockWhereInput!]
  type: StringFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: NullableStringFilter
}

input CollectionBlockWhereUniqueInput {
  id: String
}

input CollectionCreateManyWithoutItemsInput {
  connect: [CollectionWhereUniqueInput!]
  create: [CollectionCreateWithoutItemsInput!]
}

input CollectionCreateManyWithoutUserInput {
  connect: [CollectionWhereUniqueInput!]
  create: [CollectionCreateWithoutUserInput!]
}

input CollectionCreateOneWithoutCollectionBlockInput {
  connect: CollectionWhereUniqueInput
  create: CollectionCreateWithoutCollectionBlockInput
>>>>>>> prisma-beta
}

input CollectionCreateOneWithoutShareLinkInput {
  connect: CollectionWhereUniqueInput
  create: CollectionCreateWithoutShareLinkInput
}

<<<<<<< HEAD
input CollectionCreateWithoutCollectionToItemInput {
  createdAt: DateTime
  description: String
  id: String!
=======
input CollectionCreateWithoutCollectionBlockInput {
  createdAt: DateTime
  description: String
  entries: CollectionEntryCreateManyWithoutCollectionInput
  id: String
  items: ItemCreateManyWithoutCollectionsInput
  name: String!
  updatedAt: DateTime
  user: UserCreateOneWithoutCollectionsInput
}

input CollectionCreateWithoutEntriesInput {
  collectionBlock: CollectionBlockCreateManyWithoutCollectionInput
  createdAt: DateTime
  description: String
  id: String
  items: ItemCreateManyWithoutCollectionsInput
  name: String!
  updatedAt: DateTime
  user: UserCreateOneWithoutCollectionsInput
}

input CollectionCreateWithoutItemsInput {
  collectionBlock: CollectionBlockCreateManyWithoutCollectionInput
  createdAt: DateTime
  description: String
  entries: CollectionEntryCreateManyWithoutCollectionInput
  id: String
>>>>>>> prisma-beta
  name: String!
  ShareLink: ShareLinkCreateManyWithoutCollectionInput
  updatedAt: DateTime
  user: Int
}

<<<<<<< HEAD
input CollectionCreateWithoutShareLinkInput {
  CollectionToItem: CollectionToItemCreateManyWithoutCollectionInput
=======
input CollectionCreateWithoutUserInput {
  collectionBlock: CollectionBlockCreateManyWithoutCollectionInput
>>>>>>> prisma-beta
  createdAt: DateTime
  description: String
  id: String!
  name: String!
  updatedAt: DateTime
  user: Int
}

type CollectionEntry {
<<<<<<< HEAD
=======
  block: CollectionBlock
  collection: Collection
>>>>>>> prisma-beta
  createdAt: DateTime!
  id: String!
  item: Int
  position: Int
  updatedAt: DateTime!
}

<<<<<<< HEAD
input CollectionEntryPositionInput {
  id: String
=======
input CollectionEntryCreateManyWithoutBlockInput {
  connect: [CollectionEntryWhereUniqueInput!]
  create: [CollectionEntryCreateWithoutBlockInput!]
}

input CollectionEntryCreateManyWithoutCollectionInput {
  connect: [CollectionEntryWhereUniqueInput!]
  create: [CollectionEntryCreateWithoutCollectionInput!]
}

input CollectionEntryCreateManyWithoutItemInput {
  connect: [CollectionEntryWhereUniqueInput!]
  create: [CollectionEntryCreateWithoutItemInput!]
}

input CollectionEntryCreateManyWithoutUserInput {
  connect: [CollectionEntryWhereUniqueInput!]
  create: [CollectionEntryCreateWithoutUserInput!]
}

input CollectionEntryCreateWithoutBlockInput {
  collection: CollectionCreateOneWithoutEntriesInput
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutCollectionEntryInput
  position: Int
  updatedAt: DateTime
  user: UserCreateOneWithoutCollectionEntriesInput
}

input CollectionEntryCreateWithoutCollectionInput {
  block: CollectionBlockCreateOneWithoutCollectionEntryInput
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutCollectionEntryInput
>>>>>>> prisma-beta
  position: Int
}

<<<<<<< HEAD
input CollectionOrderByInput {
  createdAt: OrderByArg
  description: OrderByArg
  id: OrderByArg
  name: OrderByArg
  updatedAt: OrderByArg
  user: OrderByArg
}

input CollectionToItemCreateManyWithoutCollectionInput {
  connect: [CollectionToItemWhereUniqueInput!]
  create: [CollectionToItemCreateWithoutCollectionInput!]
=======
input CollectionEntryCreateWithoutItemInput {
  block: CollectionBlockCreateOneWithoutCollectionEntryInput
  collection: CollectionCreateOneWithoutEntriesInput
  createdAt: DateTime
  id: String
  position: Int
  updatedAt: DateTime
  user: UserCreateOneWithoutCollectionEntriesInput
}

input CollectionEntryCreateWithoutUserInput {
  block: CollectionBlockCreateOneWithoutCollectionEntryInput
  collection: CollectionCreateOneWithoutEntriesInput
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutCollectionEntryInput
  position: Int
  updatedAt: DateTime
>>>>>>> prisma-beta
}

input CollectionToItemCreateManyWithoutItemInput {
  connect: [CollectionToItemWhereUniqueInput!]
  create: [CollectionToItemCreateWithoutItemInput!]
}

input CollectionToItemCreateWithoutCollectionInput {
  Item: ItemCreateOneWithoutCollectionToItemInput!
}

<<<<<<< HEAD
input CollectionToItemCreateWithoutItemInput {
  Collection: CollectionCreateOneWithoutCollectionToItemInput!
=======
input CollectionEntryWhereInput {
  AND: [CollectionEntryWhereInput!]
  block: CollectionBlockWhereInput
  blockId: NullableStringFilter
  collection: CollectionWhereInput
  collectionId: NullableStringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  item: ItemWhereInput
  itemId: NullableStringFilter
  NOT: [CollectionEntryWhereInput!]
  OR: [CollectionEntryWhereInput!]
  position: NullableIntFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: NullableStringFilter
>>>>>>> prisma-beta
}

input CollectionToItemFilter {
  every: CollectionToItemWhereInput
  none: CollectionToItemWhereInput
  some: CollectionToItemWhereInput
}

input CollectionToItemWhereInput {
  A: StringFilter
  AND: [CollectionToItemWhereInput!]
  B: StringFilter
  Collection: CollectionWhereInput
  Item: ItemWhereInput
  NOT: [CollectionToItemWhereInput!]
  OR: [CollectionToItemWhereInput!]
}

<<<<<<< HEAD
input CollectionToItemWhereUniqueInput {
  _CollectionToItem_AB_unique: _CollectionToItem_AB_uniqueCompoundUniqueInput
=======
input CollectionOrderByInput {
  createdAt: OrderByArg
  description: OrderByArg
  id: OrderByArg
  name: OrderByArg
  updatedAt: OrderByArg
  user: OrderByArg
  userId: OrderByArg
>>>>>>> prisma-beta
}

input CollectionWhereInput {
  AND: [CollectionWhereInput!]
<<<<<<< HEAD
  CollectionToItem: CollectionToItemFilter
=======
  collectionBlock: CollectionBlockFilter
>>>>>>> prisma-beta
  createdAt: DateTimeFilter
  description: NullableStringFilter
  id: StringFilter
  name: StringFilter
  NOT: [CollectionWhereInput!]
  OR: [CollectionWhereInput!]
<<<<<<< HEAD
  ShareLink: ShareLinkFilter
  updatedAt: DateTimeFilter
  user: NullableIntFilter
=======
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: NullableStringFilter
>>>>>>> prisma-beta
}

input CollectionWhereUniqueInput {
  id: String
}

scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: DateTime
  notIn: [DateTime!]
}

type File {
  contentType: String
  createdAt: DateTime!
  description: String!
  extension: String!
  fullUrl: String!
  height: Int
  id: String!
  isUploaded: Boolean
<<<<<<< HEAD
  item: String!
=======
  item: Item
>>>>>>> prisma-beta
  name: String!
  originalName: String!
  originalUrl: String!
  size: Int
  squareUrl: String!
  title: String!
  updatedAt: DateTime!
<<<<<<< HEAD
  uploadGroup: String!
=======
  uploadGroup: UploadGroup
>>>>>>> prisma-beta
  width: Int
}

input FileCreateInput {
  contentType: String
  createdAt: DateTime
  description: String
  extension: String
  hasStartedUploading: Boolean
  height: Int
  id: String!
  isFailed: Boolean
  isUploaded: Boolean
<<<<<<< HEAD
  Item: ItemCreateOneWithoutFileInput!
=======
  item: ItemCreateOneWithoutFileInput
>>>>>>> prisma-beta
  name: String
  size: Int
  title: String
  updatedAt: DateTime
<<<<<<< HEAD
  UploadGroup: UploadGroupCreateOneWithoutFileInput!
  User: UserCreateOneWithoutFileInput!
=======
  uploadGroup: UploadGroupCreateOneWithoutFilesInput
  user: UserCreateOneWithoutFilesInput
>>>>>>> prisma-beta
  width: Int
}

input FileCreateManyWithoutItemInput {
  connect: [FileWhereUniqueInput!]
  create: [FileCreateWithoutItemInput!]
}

input FileCreateManyWithoutUploadGroupInput {
  connect: [FileWhereUniqueInput!]
  create: [FileCreateWithoutUploadGroupInput!]
}

input FileCreateManyWithoutUserInput {
  connect: [FileWhereUniqueInput!]
  create: [FileCreateWithoutUserInput!]
}

input FileCreateWithoutItemInput {
  contentType: String
  createdAt: DateTime
  description: String
  extension: String
  hasStartedUploading: Boolean
  height: Int
  id: String!
  isFailed: Boolean
  isUploaded: Boolean
  name: String
  size: Int
  title: String
  updatedAt: DateTime
<<<<<<< HEAD
  UploadGroup: UploadGroupCreateOneWithoutFileInput!
  User: UserCreateOneWithoutFileInput!
=======
  uploadGroup: UploadGroupCreateOneWithoutFilesInput
  user: UserCreateOneWithoutFilesInput
>>>>>>> prisma-beta
  width: Int
}

input FileCreateWithoutUploadGroupInput {
  contentType: String
  createdAt: DateTime
  description: String
  extension: String
  hasStartedUploading: Boolean
  height: Int
  id: String!
  isFailed: Boolean
  isUploaded: Boolean
<<<<<<< HEAD
  Item: ItemCreateOneWithoutFileInput!
=======
  item: ItemCreateOneWithoutFileInput
>>>>>>> prisma-beta
  name: String
  size: Int
  title: String
  updatedAt: DateTime
<<<<<<< HEAD
  User: UserCreateOneWithoutFileInput!
=======
  user: UserCreateOneWithoutFilesInput
>>>>>>> prisma-beta
  width: Int
}

input FileCreateWithoutUserInput {
  contentType: String
  createdAt: DateTime
  description: String
  extension: String
  hasStartedUploading: Boolean
  height: Int
  id: String!
  isFailed: Boolean
  isUploaded: Boolean
<<<<<<< HEAD
  Item: ItemCreateOneWithoutFileInput!
=======
  item: ItemCreateOneWithoutFileInput
>>>>>>> prisma-beta
  name: String
  size: Int
  title: String
  updatedAt: DateTime
<<<<<<< HEAD
  UploadGroup: UploadGroupCreateOneWithoutFileInput!
=======
  uploadGroup: UploadGroupCreateOneWithoutFilesInput
>>>>>>> prisma-beta
  width: Int
}

input FileFilter {
  every: FileWhereInput
  none: FileWhereInput
  some: FileWhereInput
}

input FileOrderByInput {
  contentType: OrderByArg
  createdAt: OrderByArg
  description: OrderByArg
  extension: OrderByArg
  hasStartedUploading: OrderByArg
  height: OrderByArg
  id: OrderByArg
  isFailed: OrderByArg
  isUploaded: OrderByArg
<<<<<<< HEAD
  item: OrderByArg
  Item: OrderByArg
=======
>>>>>>> prisma-beta
  name: OrderByArg
  size: OrderByArg
  title: OrderByArg
  updatedAt: OrderByArg
  uploadGroup: OrderByArg
<<<<<<< HEAD
  UploadGroup: OrderByArg
  user: OrderByArg
  User: OrderByArg
=======
  uploadGroupId: OrderByArg
  user: OrderByArg
  userId: OrderByArg
>>>>>>> prisma-beta
  width: OrderByArg
}

input FileWhereInput {
  AND: [FileWhereInput!]
  contentType: NullableStringFilter
  createdAt: DateTimeFilter
  description: StringFilter
  extension: StringFilter
  hasStartedUploading: NullableBooleanFilter
  height: NullableIntFilter
  id: StringFilter
  isFailed: NullableBooleanFilter
  isUploaded: NullableBooleanFilter
  item: StringFilter
  Item: ItemWhereInput
  name: StringFilter
  NOT: [FileWhereInput!]
  OR: [FileWhereInput!]
  size: NullableIntFilter
  title: StringFilter
  updatedAt: DateTimeFilter
<<<<<<< HEAD
  uploadGroup: StringFilter
  UploadGroup: UploadGroupWhereInput
  user: StringFilter
  User: UserWhereInput
=======
  uploadGroup: UploadGroupWhereInput
  uploadGroupId: NullableStringFilter
  user: UserWhereInput
  userId: NullableStringFilter
>>>>>>> prisma-beta
  width: NullableIntFilter
}

input FileWhereUniqueInput {
  id: String
}

type Filter {
  display: String!
  name: String!
  value: FilterValue
  values: [FilterValue!]
}

input FilterInput {
  display: String
  name: String!
  value: FilterValue
  values: [FilterValue!]
}

"""String or Boolean"""
scalar FilterValue

type GoogleAccount {
  createdAt: DateTime!
  email: String
  id: String!
  updatedAt: DateTime!
}

input GoogleAccountCreateManyWithoutUserInput {
  connect: [GoogleAccountWhereUniqueInput!]
  create: [GoogleAccountCreateWithoutUserInput!]
}

input GoogleAccountCreateOneWithoutGoogleContactInput {
  connect: GoogleAccountWhereUniqueInput
  create: GoogleAccountCreateWithoutGoogleContactInput
}

input GoogleAccountCreateWithoutGoogleContactInput {
  accessToken: String
  accountId: String
  createdAt: DateTime
  email: String
  expiresAt: DateTime
  firstName: String
  id: String!
  isAuthMethod: Boolean
  lastName: String
  metadata: String
  picture: String
  refreshToken: String
  updatedAt: DateTime
<<<<<<< HEAD
  User: UserCreateOneWithoutGoogleAccountInput!
=======
  user: UserCreateOneWithoutGoogleAccountsInput
>>>>>>> prisma-beta
}

input GoogleAccountCreateWithoutUserInput {
  accessToken: String
  accountId: String
  createdAt: DateTime
  email: String
  expiresAt: DateTime
  firstName: String
  GoogleContact: GoogleContactCreateManyWithoutGoogleAccountInput
  id: String!
  isAuthMethod: Boolean
  lastName: String
  metadata: String
  picture: String
  refreshToken: String
  updatedAt: DateTime
}

input GoogleAccountFilter {
  every: GoogleAccountWhereInput
  none: GoogleAccountWhereInput
  some: GoogleAccountWhereInput
}

input GoogleAccountWhereInput {
  accessToken: NullableStringFilter
  accountId: NullableStringFilter
  AND: [GoogleAccountWhereInput!]
  createdAt: DateTimeFilter
  email: NullableStringFilter
  expiresAt: DateTimeFilter
  firstName: NullableStringFilter
  GoogleContact: GoogleContactFilter
  id: StringFilter
  isAuthMethod: NullableBooleanFilter
  lastName: NullableStringFilter
  metadata: NullableStringFilter
  NOT: [GoogleAccountWhereInput!]
  OR: [GoogleAccountWhereInput!]
  picture: NullableStringFilter
  refreshToken: NullableStringFilter
  updatedAt: DateTimeFilter
<<<<<<< HEAD
  user: StringFilter
  User: UserWhereInput
=======
  user: UserWhereInput
  userId: NullableStringFilter
>>>>>>> prisma-beta
}

input GoogleAccountWhereUniqueInput {
  accountId: String
  id: String
}

type GoogleContact {
  companyName: String
  companyTitle: String
  createdAt: DateTime!
  email: String
<<<<<<< HEAD
  googleAccount: String!
=======
  googleAccount: GoogleAccount
>>>>>>> prisma-beta
  id: String!
  item: String!
  name: String
  otherEmails: [String!]!
  otherPhoneNumbers: [String!]!
  phoneNumber: String
  photoUrl: String
  resourceName: String!
  updatedAt: DateTime!
}

input GoogleContactCreateManyWithoutGoogleAccountInput {
  connect: [GoogleContactWhereUniqueInput!]
  create: [GoogleContactCreateWithoutGoogleAccountInput!]
}

input GoogleContactCreateManyWithoutItemInput {
  connect: [GoogleContactWhereUniqueInput!]
  create: [GoogleContactCreateWithoutItemInput!]
}

input GoogleContactCreateManyWithoutUserInput {
  connect: [GoogleContactWhereUniqueInput!]
  create: [GoogleContactCreateWithoutUserInput!]
}

input GoogleContactCreateotherEmailsInput {
  set: [String!]
}

input GoogleContactCreateotherPhoneNumbersInput {
  set: [String!]
}

input GoogleContactCreateWithoutGoogleAccountInput {
  companyName: String
  companyTitle: String
  createdAt: DateTime
  email: String
  id: String!
  Item: ItemCreateOneWithoutGoogleContactInput!
  name: String
  otherEmails: GoogleContactCreateotherEmailsInput
  otherPhoneNumbers: GoogleContactCreateotherPhoneNumbersInput
  phoneNumber: String
  photoUrl: String
  resourceName: String
  updatedAt: DateTime
<<<<<<< HEAD
  User: UserCreateOneWithoutGoogleContactInput!
=======
  user: UserCreateOneWithoutGoogleContactsInput
>>>>>>> prisma-beta
}

input GoogleContactCreateWithoutItemInput {
  companyName: String
  companyTitle: String
  createdAt: DateTime
  email: String
<<<<<<< HEAD
  GoogleAccount: GoogleAccountCreateOneWithoutGoogleContactInput!
  id: String!
=======
  googleAccount: GoogleAccountCreateOneWithoutGoogleContactsInput
  id: String
>>>>>>> prisma-beta
  name: String
  otherEmails: GoogleContactCreateotherEmailsInput
  otherPhoneNumbers: GoogleContactCreateotherPhoneNumbersInput
  phoneNumber: String
  photoUrl: String
  resourceName: String
  updatedAt: DateTime
<<<<<<< HEAD
  User: UserCreateOneWithoutGoogleContactInput!
=======
  user: UserCreateOneWithoutGoogleContactsInput
>>>>>>> prisma-beta
}

input GoogleContactCreateWithoutUserInput {
  companyName: String
  companyTitle: String
  createdAt: DateTime
  email: String
<<<<<<< HEAD
  GoogleAccount: GoogleAccountCreateOneWithoutGoogleContactInput!
  id: String!
  Item: ItemCreateOneWithoutGoogleContactInput!
=======
  googleAccount: GoogleAccountCreateOneWithoutGoogleContactsInput
  id: String
  item: ItemCreateOneWithoutGoogleContactInput!
>>>>>>> prisma-beta
  name: String
  otherEmails: GoogleContactCreateotherEmailsInput
  otherPhoneNumbers: GoogleContactCreateotherPhoneNumbersInput
  phoneNumber: String
  photoUrl: String
  resourceName: String
  updatedAt: DateTime
}

input GoogleContactFilter {
  every: GoogleContactWhereInput
  none: GoogleContactWhereInput
  some: GoogleContactWhereInput
}

input GoogleContactWhereInput {
  AND: [GoogleContactWhereInput!]
  companyName: NullableStringFilter
  companyTitle: NullableStringFilter
  createdAt: DateTimeFilter
  email: NullableStringFilter
<<<<<<< HEAD
  googleAccount: StringFilter
  GoogleAccount: GoogleAccountWhereInput
=======
  googleAccount: GoogleAccountWhereInput
  googleAccountId: NullableStringFilter
>>>>>>> prisma-beta
  id: StringFilter
  item: StringFilter
  Item: ItemWhereInput
  name: NullableStringFilter
  NOT: [GoogleContactWhereInput!]
  OR: [GoogleContactWhereInput!]
  phoneNumber: NullableStringFilter
  photoUrl: NullableStringFilter
  resourceName: StringFilter
  updatedAt: DateTimeFilter
<<<<<<< HEAD
  user: StringFilter
  User: UserWhereInput
=======
  user: UserWhereInput
  userId: NullableStringFilter
>>>>>>> prisma-beta
}

input GoogleContactWhereUniqueInput {
  id: String
}

type InProgressUpload {
  signedUrls: [String!]!
  uploadGroup: UploadGroup
}

type InterestedUser {
  createdAt: DateTime!
  email: String!
  id: String!
  updatedAt: DateTime!
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: Int
  notIn: [Int!]
}

type InviteCode {
  code: String!
  createdAt: DateTime!
  id: String!
  updatedAt: DateTime!
}

input InviteCodeCreateOneWithoutUserInput {
  connect: InviteCodeWhereUniqueInput
  create: InviteCodeCreateWithoutUserInput
}

input InviteCodeCreateWithoutUserInput {
  code: String
  createdAt: DateTime
  id: String!
  updatedAt: DateTime
}

input InviteCodeOrderByInput {
  code: OrderByArg
  createdAt: OrderByArg
  id: OrderByArg
  updatedAt: OrderByArg
}

input InviteCodeWhereInput {
  AND: [InviteCodeWhereInput!]
  code: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [InviteCodeWhereInput!]
  OR: [InviteCodeWhereInput!]
  updatedAt: DateTimeFilter
  User: UserFilter
}

input InviteCodeWhereUniqueInput {
  id: String
}

type Item {
  createdAt: DateTime!
  date: DateTime!
  id: String!
  isFavorited: Boolean!
  link: String
  note: String
  status: ItemStatus!
  type: String!
  updatedAt: DateTime!
}

type ItemConnection {
  edges: [ItemEdge!]!
  pageInfo: PageInfo!
}

input ItemCreateManyWithoutItemInput {
  connect: [ItemWhereUniqueInput!]
  create: [ItemCreateWithoutItemInput!]
}

<<<<<<< HEAD
input ItemCreateManyWithoutLinkInput {
  connect: [ItemWhereUniqueInput!]
  create: [ItemCreateWithoutLinkInput!]
=======
input ItemCreateManyWithoutItemsInput {
  connect: [ItemWhereUniqueInput!]
  create: [ItemCreateWithoutItemsInput!]
>>>>>>> prisma-beta
}

input ItemCreateManyWithoutNoteInput {
  connect: [ItemWhereUniqueInput!]
  create: [ItemCreateWithoutNoteInput!]
}

input ItemCreateManyWithoutOwnedByInput {
  connect: [ItemWhereUniqueInput!]
  create: [ItemCreateWithoutOwnedByInput!]
}

input ItemCreateManyWithoutUserInput {
  connect: [ItemWhereUniqueInput!]
  create: [ItemCreateWithoutUserInput!]
}

<<<<<<< HEAD
input ItemCreateOneWithoutCollectionToItemInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutCollectionToItemInput
=======
input ItemCreateOneWithoutCollectionEntryInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutCollectionEntryInput
>>>>>>> prisma-beta
}

input ItemCreateOneWithoutFileInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutFileInput
}

input ItemCreateOneWithoutGoogleContactInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutGoogleContactInput
}

<<<<<<< HEAD
input ItemCreateOneWithoutItemToLabelInput {
=======
input ItemCreateOneWithoutLinkInput {
>>>>>>> prisma-beta
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutItemToLabelInput
}

input ItemCreateOneWithoutOther_ItemInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutOther_ItemInput
}

<<<<<<< HEAD
input ItemCreateWithoutCollectionToItemInput {
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  File: FileCreateManyWithoutItemInput
  GoogleContact: GoogleContactCreateManyWithoutItemInput
  id: String!
  isFavorited: Boolean
  Item: ItemCreateOneWithoutOther_ItemInput
  ItemToLabel: ItemToLabelCreateManyWithoutItemInput
  Link: LinkCreateOneWithoutItemInput
  Note: NoteCreateOneWithoutItemInput
  other_Item: ItemCreateManyWithoutItemInput
  ShareLink: ShareLinkCreateOneWithoutItemInput
=======
input ItemCreateWithoutCollectionEntryInput {
  collections: CollectionCreateManyWithoutItemsInput
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  file: FileCreateOneWithoutItemInput
  googleContact: GoogleContactCreateOneWithoutItemInput
  id: String
  isFavorited: Boolean
  items: ItemCreateManyWithoutOwnedByInput
  labels: LabelCreateManyWithoutItemsInput
  link: LinkCreateOneWithoutItemInput
  note: NoteCreateOneWithoutItemInput
  ownedBy: ItemCreateManyWithoutItemsInput
  status: String
  type: String
  updatedAt: DateTime
  user: UserCreateOneWithoutItemsInput
}

input ItemCreateWithoutCollectionsInput {
  collectionEntry: CollectionEntryCreateManyWithoutItemInput
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  file: FileCreateOneWithoutItemInput
  googleContact: GoogleContactCreateOneWithoutItemInput
  id: String
  isFavorited: Boolean
  items: ItemCreateManyWithoutOwnedByInput
  labels: LabelCreateManyWithoutItemsInput
  link: LinkCreateOneWithoutItemInput
  note: NoteCreateOneWithoutItemInput
  ownedBy: ItemCreateManyWithoutItemsInput
>>>>>>> prisma-beta
  status: String
  type: String
  updatedAt: DateTime
  User: UserCreateOneWithoutItemInput
}

input ItemCreateWithoutFileInput {
<<<<<<< HEAD
  CollectionToItem: CollectionToItemCreateManyWithoutItemInput
=======
  collectionEntry: CollectionEntryCreateManyWithoutItemInput
  collections: CollectionCreateManyWithoutItemsInput
>>>>>>> prisma-beta
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  GoogleContact: GoogleContactCreateManyWithoutItemInput
  id: String!
  isFavorited: Boolean
<<<<<<< HEAD
  Item: ItemCreateOneWithoutOther_ItemInput
  ItemToLabel: ItemToLabelCreateManyWithoutItemInput
  Link: LinkCreateOneWithoutItemInput
  Note: NoteCreateOneWithoutItemInput
  other_Item: ItemCreateManyWithoutItemInput
  ShareLink: ShareLinkCreateOneWithoutItemInput
=======
  items: ItemCreateManyWithoutOwnedByInput
  labels: LabelCreateManyWithoutItemsInput
  link: LinkCreateOneWithoutItemInput
  note: NoteCreateOneWithoutItemInput
  ownedBy: ItemCreateManyWithoutItemsInput
>>>>>>> prisma-beta
  status: String
  type: String
  updatedAt: DateTime
  User: UserCreateOneWithoutItemInput
}

input ItemCreateWithoutGoogleContactInput {
<<<<<<< HEAD
  CollectionToItem: CollectionToItemCreateManyWithoutItemInput
=======
  collectionEntry: CollectionEntryCreateManyWithoutItemInput
  collections: CollectionCreateManyWithoutItemsInput
>>>>>>> prisma-beta
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  File: FileCreateManyWithoutItemInput
  id: String!
  isFavorited: Boolean
<<<<<<< HEAD
  Item: ItemCreateOneWithoutOther_ItemInput
  ItemToLabel: ItemToLabelCreateManyWithoutItemInput
  Link: LinkCreateOneWithoutItemInput
  Note: NoteCreateOneWithoutItemInput
  other_Item: ItemCreateManyWithoutItemInput
  ShareLink: ShareLinkCreateOneWithoutItemInput
  status: String
  type: String
  updatedAt: DateTime
  User: UserCreateOneWithoutItemInput
}

input ItemCreateWithoutItemInput {
  CollectionToItem: CollectionToItemCreateManyWithoutItemInput
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  File: FileCreateManyWithoutItemInput
  GoogleContact: GoogleContactCreateManyWithoutItemInput
  id: String!
  isFavorited: Boolean
  ItemToLabel: ItemToLabelCreateManyWithoutItemInput
  Link: LinkCreateOneWithoutItemInput
  Note: NoteCreateOneWithoutItemInput
  other_Item: ItemCreateManyWithoutItemInput
  ShareLink: ShareLinkCreateOneWithoutItemInput
=======
  items: ItemCreateManyWithoutOwnedByInput
  labels: LabelCreateManyWithoutItemsInput
  link: LinkCreateOneWithoutItemInput
  note: NoteCreateOneWithoutItemInput
  ownedBy: ItemCreateManyWithoutItemsInput
>>>>>>> prisma-beta
  status: String
  type: String
  updatedAt: DateTime
  User: UserCreateOneWithoutItemInput
}

<<<<<<< HEAD
input ItemCreateWithoutItemToLabelInput {
  CollectionToItem: CollectionToItemCreateManyWithoutItemInput
=======
input ItemCreateWithoutItemsInput {
  collectionEntry: CollectionEntryCreateManyWithoutItemInput
  collections: CollectionCreateManyWithoutItemsInput
>>>>>>> prisma-beta
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  File: FileCreateManyWithoutItemInput
  GoogleContact: GoogleContactCreateManyWithoutItemInput
  id: String!
  isFavorited: Boolean
<<<<<<< HEAD
  Item: ItemCreateOneWithoutOther_ItemInput
  Link: LinkCreateOneWithoutItemInput
  Note: NoteCreateOneWithoutItemInput
  other_Item: ItemCreateManyWithoutItemInput
  ShareLink: ShareLinkCreateOneWithoutItemInput
=======
  labels: LabelCreateManyWithoutItemsInput
  link: LinkCreateOneWithoutItemInput
  note: NoteCreateOneWithoutItemInput
  ownedBy: ItemCreateManyWithoutItemsInput
>>>>>>> prisma-beta
  status: String
  type: String
  updatedAt: DateTime
  User: UserCreateOneWithoutItemInput
}

<<<<<<< HEAD
input ItemCreateWithoutLinkInput {
  CollectionToItem: CollectionToItemCreateManyWithoutItemInput
=======
input ItemCreateWithoutLabelsInput {
  collectionEntry: CollectionEntryCreateManyWithoutItemInput
  collections: CollectionCreateManyWithoutItemsInput
>>>>>>> prisma-beta
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  File: FileCreateManyWithoutItemInput
  GoogleContact: GoogleContactCreateManyWithoutItemInput
  id: String!
  isFavorited: Boolean
<<<<<<< HEAD
  Item: ItemCreateOneWithoutOther_ItemInput
  ItemToLabel: ItemToLabelCreateManyWithoutItemInput
  Note: NoteCreateOneWithoutItemInput
  other_Item: ItemCreateManyWithoutItemInput
  ShareLink: ShareLinkCreateOneWithoutItemInput
=======
  items: ItemCreateManyWithoutOwnedByInput
  link: LinkCreateOneWithoutItemInput
  note: NoteCreateOneWithoutItemInput
  ownedBy: ItemCreateManyWithoutItemsInput
>>>>>>> prisma-beta
  status: String
  type: String
  updatedAt: DateTime
  User: UserCreateOneWithoutItemInput
}

<<<<<<< HEAD
input ItemCreateWithoutNoteInput {
  CollectionToItem: CollectionToItemCreateManyWithoutItemInput
=======
input ItemCreateWithoutLinkInput {
  collectionEntry: CollectionEntryCreateManyWithoutItemInput
  collections: CollectionCreateManyWithoutItemsInput
>>>>>>> prisma-beta
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  File: FileCreateManyWithoutItemInput
  GoogleContact: GoogleContactCreateManyWithoutItemInput
  id: String!
  isFavorited: Boolean
<<<<<<< HEAD
  Item: ItemCreateOneWithoutOther_ItemInput
  ItemToLabel: ItemToLabelCreateManyWithoutItemInput
  Link: LinkCreateOneWithoutItemInput
  other_Item: ItemCreateManyWithoutItemInput
  ShareLink: ShareLinkCreateOneWithoutItemInput
=======
  items: ItemCreateManyWithoutOwnedByInput
  labels: LabelCreateManyWithoutItemsInput
  note: NoteCreateOneWithoutItemInput
  ownedBy: ItemCreateManyWithoutItemsInput
>>>>>>> prisma-beta
  status: String
  type: String
  updatedAt: DateTime
  User: UserCreateOneWithoutItemInput
}

<<<<<<< HEAD
input ItemCreateWithoutOther_ItemInput {
  CollectionToItem: CollectionToItemCreateManyWithoutItemInput
=======
input ItemCreateWithoutNoteInput {
  collectionEntry: CollectionEntryCreateManyWithoutItemInput
  collections: CollectionCreateManyWithoutItemsInput
>>>>>>> prisma-beta
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  File: FileCreateManyWithoutItemInput
  GoogleContact: GoogleContactCreateManyWithoutItemInput
  id: String!
  isFavorited: Boolean
<<<<<<< HEAD
  Item: ItemCreateOneWithoutOther_ItemInput
  ItemToLabel: ItemToLabelCreateManyWithoutItemInput
  Link: LinkCreateOneWithoutItemInput
  Note: NoteCreateOneWithoutItemInput
  ShareLink: ShareLinkCreateOneWithoutItemInput
=======
  items: ItemCreateManyWithoutOwnedByInput
  labels: LabelCreateManyWithoutItemsInput
  link: LinkCreateOneWithoutItemInput
  ownedBy: ItemCreateManyWithoutItemsInput
>>>>>>> prisma-beta
  status: String
  type: String
  updatedAt: DateTime
  User: UserCreateOneWithoutItemInput
}

<<<<<<< HEAD
input ItemCreateWithoutShareLinkInput {
  CollectionToItem: CollectionToItemCreateManyWithoutItemInput
=======
input ItemCreateWithoutOwnedByInput {
  collectionEntry: CollectionEntryCreateManyWithoutItemInput
  collections: CollectionCreateManyWithoutItemsInput
>>>>>>> prisma-beta
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  File: FileCreateManyWithoutItemInput
  GoogleContact: GoogleContactCreateManyWithoutItemInput
  id: String!
  isFavorited: Boolean
<<<<<<< HEAD
  Item: ItemCreateOneWithoutOther_ItemInput
  ItemToLabel: ItemToLabelCreateManyWithoutItemInput
  Link: LinkCreateOneWithoutItemInput
  Note: NoteCreateOneWithoutItemInput
  other_Item: ItemCreateManyWithoutItemInput
=======
  items: ItemCreateManyWithoutOwnedByInput
  labels: LabelCreateManyWithoutItemsInput
  link: LinkCreateOneWithoutItemInput
  note: NoteCreateOneWithoutItemInput
>>>>>>> prisma-beta
  status: String
  type: String
  updatedAt: DateTime
  User: UserCreateOneWithoutItemInput
}

input ItemCreateWithoutUserInput {
<<<<<<< HEAD
  CollectionToItem: CollectionToItemCreateManyWithoutItemInput
=======
  collectionEntry: CollectionEntryCreateManyWithoutItemInput
  collections: CollectionCreateManyWithoutItemsInput
>>>>>>> prisma-beta
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  File: FileCreateManyWithoutItemInput
  GoogleContact: GoogleContactCreateManyWithoutItemInput
  id: String!
  isFavorited: Boolean
<<<<<<< HEAD
  Item: ItemCreateOneWithoutOther_ItemInput
  ItemToLabel: ItemToLabelCreateManyWithoutItemInput
  Link: LinkCreateOneWithoutItemInput
  Note: NoteCreateOneWithoutItemInput
  other_Item: ItemCreateManyWithoutItemInput
  ShareLink: ShareLinkCreateOneWithoutItemInput
=======
  items: ItemCreateManyWithoutOwnedByInput
  labels: LabelCreateManyWithoutItemsInput
  link: LinkCreateOneWithoutItemInput
  note: NoteCreateOneWithoutItemInput
  ownedBy: ItemCreateManyWithoutItemsInput
>>>>>>> prisma-beta
  status: String
  type: String
  updatedAt: DateTime
}

type ItemEdge {
  cursor: String!
  node: Item!
}

input ItemFilter {
  every: ItemWhereInput
  none: ItemWhereInput
  some: ItemWhereInput
}

input ItemOrderByInput {
  createdAt: OrderByArg
  date: OrderByArg
  deletedAt: OrderByArg
  file: OrderByArg
  fileId: OrderByArg
  googleContact: OrderByArg
  googleContactId: OrderByArg
  id: OrderByArg
  isFavorited: OrderByArg
<<<<<<< HEAD
  item: OrderByArg
  Item: OrderByArg
  link: OrderByArg
  Link: OrderByArg
  note: OrderByArg
  Note: OrderByArg
  shareLink: OrderByArg
  ShareLink: OrderByArg
=======
  link: OrderByArg
  linkId: OrderByArg
  note: OrderByArg
  noteId: OrderByArg
>>>>>>> prisma-beta
  status: OrderByArg
  type: OrderByArg
  updatedAt: OrderByArg
  user: OrderByArg
<<<<<<< HEAD
  User: OrderByArg
=======
  userId: OrderByArg
>>>>>>> prisma-beta
}

enum ItemStatus {
  DONE
  IN_PROGRESS
  NOT_STARTED
}

input ItemToLabelCreateManyWithoutItemInput {
  connect: [ItemToLabelWhereUniqueInput!]
  create: [ItemToLabelCreateWithoutItemInput!]
}

input ItemToLabelCreateManyWithoutLabelInput {
  connect: [ItemToLabelWhereUniqueInput!]
  create: [ItemToLabelCreateWithoutLabelInput!]
}

input ItemToLabelCreateWithoutItemInput {
  Label: LabelCreateOneWithoutItemToLabelInput!
}

input ItemToLabelCreateWithoutLabelInput {
  Item: ItemCreateOneWithoutItemToLabelInput!
}

input ItemToLabelFilter {
  every: ItemToLabelWhereInput
  none: ItemToLabelWhereInput
  some: ItemToLabelWhereInput
}

input ItemToLabelWhereInput {
  A: StringFilter
  AND: [ItemToLabelWhereInput!]
  B: StringFilter
  Item: ItemWhereInput
  Label: LabelWhereInput
  NOT: [ItemToLabelWhereInput!]
  OR: [ItemToLabelWhereInput!]
}

input ItemToLabelWhereUniqueInput {
  _ItemToLabel_AB_unique: _ItemToLabel_AB_uniqueCompoundUniqueInput
}

enum ItemType {
  file
  googleContact
  link
  note
}

input ItemWhereInput {
  AND: [ItemWhereInput!]
<<<<<<< HEAD
  CollectionToItem: CollectionToItemFilter
  createdAt: DateTimeFilter
  date: DateTimeFilter
  deletedAt: NullableDateTimeFilter
  File: FileFilter
  GoogleContact: GoogleContactFilter
  id: StringFilter
  isFavorited: BooleanFilter
  item: NullableStringFilter
  Item: ItemWhereInput
  ItemToLabel: ItemToLabelFilter
  link: NullableStringFilter
  Link: LinkWhereInput
  NOT: [ItemWhereInput!]
  note: NullableStringFilter
  Note: NoteWhereInput
  OR: [ItemWhereInput!]
  other_Item: ItemFilter
  shareLink: NullableStringFilter
  ShareLink: ShareLinkWhereInput
  status: NullableStringFilter
  type: StringFilter
  updatedAt: DateTimeFilter
  user: NullableStringFilter
  User: UserWhereInput
=======
  collectionEntry: CollectionEntryFilter
  collections: CollectionFilter
  createdAt: DateTimeFilter
  date: DateTimeFilter
  deletedAt: NullableDateTimeFilter
  file: FileWhereInput
  fileId: NullableStringFilter
  googleContact: GoogleContactWhereInput
  googleContactId: NullableStringFilter
  id: StringFilter
  isFavorited: BooleanFilter
  items: ItemFilter
  labels: LabelFilter
  link: LinkWhereInput
  linkId: NullableStringFilter
  NOT: [ItemWhereInput!]
  note: NoteWhereInput
  noteId: NullableStringFilter
  OR: [ItemWhereInput!]
  ownedBy: ItemFilter
  status: NullableStringFilter
  type: StringFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: NullableStringFilter
>>>>>>> prisma-beta
}

input ItemWhereUniqueInput {
  id: String
}

type JWT {
  token: String!
}

type Label {
  createdAt: DateTime!
  id: String!
  name: String!
  updatedAt: DateTime!
}

input LabelCreateManyWithoutUserInput {
  connect: [LabelWhereUniqueInput!]
  create: [LabelCreateWithoutUserInput!]
}

input LabelCreateOneWithoutItemToLabelInput {
  connect: LabelWhereUniqueInput
  create: LabelCreateWithoutItemToLabelInput
}

input LabelCreateWithoutItemToLabelInput {
  createdAt: DateTime
  id: String!
  name: String
  updatedAt: DateTime
<<<<<<< HEAD
  User: UserCreateOneWithoutLabelInput!
=======
  user: UserCreateOneWithoutLabelsInput
>>>>>>> prisma-beta
}

input LabelCreateWithoutUserInput {
  createdAt: DateTime
  id: String!
  ItemToLabel: ItemToLabelCreateManyWithoutLabelInput
  name: String
  updatedAt: DateTime
}

input LabelFilter {
  every: LabelWhereInput
  none: LabelWhereInput
  some: LabelWhereInput
}

<<<<<<< HEAD
=======
input LabelOrderByInput {
  createdAt: OrderByArg
  id: OrderByArg
  name: OrderByArg
  updatedAt: OrderByArg
  user: OrderByArg
  userId: OrderByArg
}

>>>>>>> prisma-beta
input LabelWhereInput {
  AND: [LabelWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  ItemToLabel: ItemToLabelFilter
  name: StringFilter
  NOT: [LabelWhereInput!]
  OR: [LabelWhereInput!]
  updatedAt: DateTimeFilter
<<<<<<< HEAD
  user: StringFilter
  User: UserWhereInput
=======
  user: UserWhereInput
  userId: NullableStringFilter
>>>>>>> prisma-beta
}

input LabelWhereUniqueInput {
  id: String
}

type Link {
  createdAt: DateTime!
  description: String
  favicon: String
  host: String
  href: String!
  id: String!
  image: String
  notes: String!
  title: String
  updatedAt: DateTime!
}

input LinkCreateManyWithoutUserInput {
  connect: [LinkWhereUniqueInput!]
  create: [LinkCreateWithoutUserInput!]
}

input LinkCreateOneWithoutItemInput {
  connect: LinkWhereUniqueInput
  create: LinkCreateWithoutItemInput
}

input LinkCreateWithoutItemInput {
  createdAt: DateTime
  description: String
  favicon: String
  host: String
  href: String
  id: String!
  image: String
  notes: String
  title: String
  updatedAt: DateTime
<<<<<<< HEAD
  User: UserCreateOneWithoutLinkInput!
=======
  user: UserCreateOneWithoutLinksInput
>>>>>>> prisma-beta
}

input LinkCreateWithoutUserInput {
  createdAt: DateTime
  description: String
  favicon: String
  host: String
  href: String
  id: String!
  image: String
  Item: ItemCreateManyWithoutLinkInput
  notes: String
  title: String
  updatedAt: DateTime
}

input LinkFilter {
  every: LinkWhereInput
  none: LinkWhereInput
  some: LinkWhereInput
}

input LinkWhereInput {
  AND: [LinkWhereInput!]
  createdAt: DateTimeFilter
  description: NullableStringFilter
  favicon: NullableStringFilter
  host: NullableStringFilter
  href: StringFilter
  id: StringFilter
  image: NullableStringFilter
  Item: ItemFilter
  NOT: [LinkWhereInput!]
  notes: StringFilter
  OR: [LinkWhereInput!]
  title: NullableStringFilter
  updatedAt: DateTimeFilter
<<<<<<< HEAD
  user: StringFilter
  User: UserWhereInput
=======
  user: UserWhereInput
  userId: NullableStringFilter
>>>>>>> prisma-beta
}

input LinkWhereUniqueInput {
  id: String
}

type Mutation {
  addCollection(collectionId: String!, description: String, name: String!): Collection!
  addEntryToCollection(collectionId: String!, entryInput: NewCollectionEntryInput!): Collection!
  addInviteCode(code: String!): InviteCode!
  addOrUpdateSavedSearch(filters: [FilterInput!]!, name: String!, savedSearchId: String): SavedSearch!
  addToWaitlist(email: String!): InterestedUser!
  batchUpdateItemCollections(collectionIdsToAdd: [String!]!, collectionIdsToRemove: [String!]!, itemIds: [String!]!): [Item!]!
  batchUpdateItemLabels(itemIds: [String!]!, labelIdsToAdd: [String!]!, labelIdsToRemove: [String!]!): [Item!]!
  connectItemToItem(itemOneId: String!, itemTwoId: String!): [Item!]!
  connectLabelToItem(itemId: String!, name: String!): Item!
  createLabel(itemId: String, labelId: String, name: String!): User!
  createLink(href: String!): Link!
  createNote(raw: String!, text: String!): Note!
  createOneFile(data: FileCreateInput!): File!
  createOneUser(data: UserCreateInput!): User!
  deleteCollection(collectionId: String!): Collection!
  deleteItem(itemId: String!): Item!
  deleteLabel(labelId: String!): User!
  deleteManyItems(itemIds: [String!]!): [Item!]!
  deleteOneFile(where: FileWhereUniqueInput!): File
  deleteSavedSearch(id: String): SavedSearch!
  disconnectItemFromItem(itemOneId: String!, itemTwoId: String!): [Item!]!
  disconnectLabelFromItem(itemId: String!, labelId: String!): Item!
  enterInviteCode(code: String!): User!
  generateSignedUrls(signedURLArgs: [SignedURLArgs!]): InProgressUpload!
  googleAuth(code: String!, isAuthMethod: Boolean): JWT!
  moveEntryToCollectionPosition(collectionId: String!, entryId: String, position: Int!): Collection!
  processFiles(uploadGroupId: String): [File!]!
  refreshLinkMeta(href: String!, linkId: String!): Link!
  removeEntryFromCollection(collectionId: String!, entryId: String!): Collection!
  syncGoogleContacts(googleAccountId: String!): Int!
  syncGoogleDrive(googleAccountId: String!): String!
  taskAddFileMeta: String!
  taskFixItemDates: String!
  taskFixLinks: String!
  testSendEmail: String!
  updateBlockContent(blockId: String!, collectionId: String!, content: String): CollectionBlock!
  updateCollection(collectionId: String!, description: String, name: String!): Collection!
  updateEntryPositions(collectionId: String!, entries: [CollectionEntryPositionInput!]): Collection!
  updateFavoriteManyItems(isFavorited: Boolean!, itemIds: [String!]!): [Item!]!
  updateFile(description: String, fileId: String!, title: String): File!
  updateLink(description: String, href: String!, linkId: String!, title: String!): Link!
  updateNote(noteId: String!, raw: String!, text: String!, title: String): Note!
  updateStatusManyItems(itemIds: [String!]!, status: ItemStatus!): [Item!]!
}

input NewCollectionEntryInput {
  blockContent: String
  blockId: String
  blockType: String
  entryId: String
  itemId: String
  position: Int
}

type Note {
  createdAt: DateTime!
  id: String!
  raw: String!
  text: String!
  title: String
  updatedAt: DateTime!
}

input NoteCreateManyWithoutUserInput {
  connect: [NoteWhereUniqueInput!]
  create: [NoteCreateWithoutUserInput!]
}

input NoteCreateOneWithoutItemInput {
  connect: NoteWhereUniqueInput
  create: NoteCreateWithoutItemInput
}

input NoteCreateWithoutItemInput {
  createdAt: DateTime
  id: String!
  raw: String
  text: String
  title: String
  updatedAt: DateTime
<<<<<<< HEAD
  User: UserCreateOneWithoutNoteInput!
=======
  user: UserCreateOneWithoutNotesInput
>>>>>>> prisma-beta
}

input NoteCreateWithoutUserInput {
  createdAt: DateTime
  id: String!
  Item: ItemCreateManyWithoutNoteInput
  raw: String
  text: String
  title: String
  updatedAt: DateTime
}

input NoteFilter {
  every: NoteWhereInput
  none: NoteWhereInput
  some: NoteWhereInput
}

input NoteWhereInput {
  AND: [NoteWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  Item: ItemFilter
  NOT: [NoteWhereInput!]
  OR: [NoteWhereInput!]
  raw: StringFilter
  text: StringFilter
  title: NullableStringFilter
  updatedAt: DateTimeFilter
<<<<<<< HEAD
  user: StringFilter
  User: UserWhereInput
=======
  user: UserWhereInput
  userId: NullableStringFilter
>>>>>>> prisma-beta
}

input NoteWhereUniqueInput {
  id: String
}

input NullableBooleanFilter {
  equals: Boolean
  not: Boolean
}

input NullableDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: DateTime
  notIn: [DateTime!]
}

input NullableIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: Int
  notIn: [Int!]
}

input NullableStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

enum OrderByArg {
  asc
  desc
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  _collections(after: CollectionWhereUniqueInput, before: CollectionWhereUniqueInput, first: Int, last: Int, orderBy: CollectionOrderByInput, skip: Int, where: CollectionWhereInput): [Collection!]!
  _files(after: FileWhereUniqueInput, before: FileWhereUniqueInput, first: Int, last: Int, orderBy: FileOrderByInput, skip: Int, where: FileWhereInput): [File!]!
  _inviteCodes(after: InviteCodeWhereUniqueInput, before: InviteCodeWhereUniqueInput, first: Int, last: Int, orderBy: InviteCodeOrderByInput, skip: Int, where: InviteCodeWhereInput): [InviteCode!]!
  _items(after: ItemWhereUniqueInput, before: ItemWhereUniqueInput, first: Int, last: Int, orderBy: ItemOrderByInput, skip: Int, where: ItemWhereInput): [Item!]!
  _uploadgroups(after: UploadGroupWhereUniqueInput, before: UploadGroupWhereUniqueInput, first: Int, last: Int, orderBy: UploadGroupOrderByInput, skip: Int, where: UploadGroupWhereInput): [UploadGroup!]!
  _users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]!
  collection(id: String!): Collection!
  collections: [Collection!]!
  file(where: FileWhereUniqueInput!): File
  googleURL(googleAccountId: String, isAuthMethod: Boolean, origin: String, scopes: [String!], syncContent: String): String!
  item(id: String!): Item!
  itemsConnection(after: String, before: String, filters: [FilterInput!], first: Int, last: Int, orderBy: ItemOrderByInput, type: ItemType): ItemConnection!
  me: User
  mostRecentItem(type: String): Item
  savedSearches: [SavedSearch!]!
  test: String!
  uploadGroups(after: String, before: String, first: Int, last: Int, orderBy: UploadGroupOrderByInput, where: UploadGroupWhereInput): [UploadGroup!]!
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, skip: Int): [User!]!
}

type SavedSearch {
  createdAt: DateTime!
  filters: [Filter!]!
  id: String!
  name: String!
  updatedAt: DateTime!
  version: Int!
}

input SavedSearchCreateManyWithoutUserInput {
  connect: [SavedSearchWhereUniqueInput!]
  create: [SavedSearchCreateWithoutUserInput!]
}

input SavedSearchCreateOneWithoutSavedSearchFilterInput {
  connect: SavedSearchWhereUniqueInput
  create: SavedSearchCreateWithoutSavedSearchFilterInput
}

input SavedSearchCreateWithoutSavedSearchFilterInput {
  createdAt: DateTime
  id: String!
  name: String
  updatedAt: DateTime
  User: UserCreateOneWithoutSavedSearchInput
  version: Int
}

input SavedSearchCreateWithoutUserInput {
  createdAt: DateTime
  id: String!
  name: String
  SavedSearchFilter: SavedSearchFilterCreateManyWithoutSavedSearchInput
  updatedAt: DateTime
  version: Int
}

input SavedSearchFilter {
  every: SavedSearchWhereInput
  none: SavedSearchWhereInput
  some: SavedSearchWhereInput
}

input SavedSearchFilterCreateManyWithoutSavedSearchInput {
  connect: [SavedSearchFilterWhereUniqueInput!]
  create: [SavedSearchFilterCreateWithoutSavedSearchInput!]
}

input SavedSearchFilterCreateManyWithoutUserInput {
  connect: [SavedSearchFilterWhereUniqueInput!]
  create: [SavedSearchFilterCreateWithoutUserInput!]
}

input SavedSearchFilterCreateWithoutSavedSearchInput {
  createdAt: DateTime
  id: String!
  name: String
  operator: String
  updatedAt: DateTime
  User: UserCreateOneWithoutSavedSearchFilterInput
  value: String
  values: String
}

input SavedSearchFilterCreateWithoutUserInput {
  createdAt: DateTime
  id: String!
  name: String
  operator: String
  SavedSearch: SavedSearchCreateOneWithoutSavedSearchFilterInput
  updatedAt: DateTime
  value: String
  values: String
}

input SavedSearchFilterFilter {
  every: SavedSearchFilterWhereInput
  none: SavedSearchFilterWhereInput
  some: SavedSearchFilterWhereInput
}

input SavedSearchFilterWhereInput {
  AND: [SavedSearchFilterWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  name: StringFilter
  NOT: [SavedSearchFilterWhereInput!]
  operator: NullableStringFilter
  OR: [SavedSearchFilterWhereInput!]
<<<<<<< HEAD
  savedSearch: NullableStringFilter
  SavedSearch: SavedSearchWhereInput
  updatedAt: DateTimeFilter
  user: NullableStringFilter
  User: UserWhereInput
=======
  savedSearch: SavedSearchWhereInput
  savedSearchId: NullableStringFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: NullableStringFilter
>>>>>>> prisma-beta
  value: NullableStringFilter
  values: NullableStringFilter
}

input SavedSearchFilterWhereUniqueInput {
  id: String
}

input SavedSearchWhereInput {
  AND: [SavedSearchWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  name: StringFilter
  NOT: [SavedSearchWhereInput!]
  OR: [SavedSearchWhereInput!]
  SavedSearchFilter: SavedSearchFilterFilter
  updatedAt: DateTimeFilter
<<<<<<< HEAD
  user: NullableStringFilter
  User: UserWhereInput
=======
  user: UserWhereInput
  userId: NullableStringFilter
>>>>>>> prisma-beta
  version: IntFilter
}

input SavedSearchWhereUniqueInput {
  id: String
}

<<<<<<< HEAD
input ShareLinkCreateManyWithoutCollectionInput {
  connect: [ShareLinkWhereUniqueInput!]
  create: [ShareLinkCreateWithoutCollectionInput!]
}

input ShareLinkCreateManyWithoutUserInput {
  connect: [ShareLinkWhereUniqueInput!]
  create: [ShareLinkCreateWithoutUserInput!]
}

input ShareLinkCreateOneWithoutItemInput {
  connect: ShareLinkWhereUniqueInput
  create: ShareLinkCreateWithoutItemInput
}

input ShareLinkCreateWithoutCollectionInput {
  createdAt: DateTime
  id: String!
  isEnabled: Boolean
  Item: ItemCreateManyWithoutShareLinkInput
  updatedAt: DateTime
  User: UserCreateOneWithoutShareLinkInput!
}

input ShareLinkCreateWithoutItemInput {
  Collection: CollectionCreateOneWithoutShareLinkInput
  createdAt: DateTime
  id: String!
  isEnabled: Boolean
  updatedAt: DateTime
  User: UserCreateOneWithoutShareLinkInput!
}

input ShareLinkCreateWithoutUserInput {
  Collection: CollectionCreateOneWithoutShareLinkInput
  createdAt: DateTime
  id: String!
  isEnabled: Boolean
  Item: ItemCreateManyWithoutShareLinkInput
  updatedAt: DateTime
}

input ShareLinkFilter {
  every: ShareLinkWhereInput
  none: ShareLinkWhereInput
  some: ShareLinkWhereInput
}

input ShareLinkWhereInput {
  AND: [ShareLinkWhereInput!]
  collection: NullableStringFilter
  Collection: CollectionWhereInput
  createdAt: DateTimeFilter
  id: StringFilter
  isEnabled: BooleanFilter
  Item: ItemFilter
  NOT: [ShareLinkWhereInput!]
  OR: [ShareLinkWhereInput!]
  updatedAt: DateTimeFilter
  user: StringFilter
  User: UserWhereInput
}

input ShareLinkWhereUniqueInput {
  id: String
}

=======
>>>>>>> prisma-beta
input SignedURLArgs {
  name: String!
  size: Int!
  type: String!
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UploadGroup {
  createdAt: DateTime!
  id: String!
  isComplete: Boolean
  updatedAt: DateTime!
}

input UploadGroupCreateManyWithoutUserInput {
  connect: [UploadGroupWhereUniqueInput!]
  create: [UploadGroupCreateWithoutUserInput!]
}

input UploadGroupCreateOneWithoutFileInput {
  connect: UploadGroupWhereUniqueInput
  create: UploadGroupCreateWithoutFileInput
}

input UploadGroupCreateWithoutFileInput {
  createdAt: DateTime
  id: String!
  isComplete: Boolean
  isFailed: Boolean
  updatedAt: DateTime
<<<<<<< HEAD
  User: UserCreateOneWithoutUploadGroupInput!
=======
  user: UserCreateOneWithoutUploadGroupsInput
>>>>>>> prisma-beta
}

input UploadGroupCreateWithoutUserInput {
  createdAt: DateTime
  File: FileCreateManyWithoutUploadGroupInput
  id: String!
  isComplete: Boolean
  isFailed: Boolean
  updatedAt: DateTime
}

input UploadGroupFilter {
  every: UploadGroupWhereInput
  none: UploadGroupWhereInput
  some: UploadGroupWhereInput
}

input UploadGroupOrderByInput {
  createdAt: OrderByArg
  id: OrderByArg
  isComplete: OrderByArg
  isFailed: OrderByArg
  updatedAt: OrderByArg
  user: OrderByArg
<<<<<<< HEAD
  User: OrderByArg
=======
  userId: OrderByArg
>>>>>>> prisma-beta
}

input UploadGroupWhereInput {
  AND: [UploadGroupWhereInput!]
  createdAt: DateTimeFilter
  File: FileFilter
  id: StringFilter
  isComplete: NullableBooleanFilter
  isFailed: NullableBooleanFilter
  NOT: [UploadGroupWhereInput!]
  OR: [UploadGroupWhereInput!]
  updatedAt: DateTimeFilter
<<<<<<< HEAD
  user: StringFilter
  User: UserWhereInput
=======
  user: UserWhereInput
  userId: NullableStringFilter
>>>>>>> prisma-beta
}

input UploadGroupWhereUniqueInput {
  id: String
}

type User {
  email: String!
  firstName: String
  fullName: String!
  id: String!
  inviteCode: String
  isActive: Boolean!
  lastName: String
  role: String!
}

input UserCreateInput {
  createdAt: DateTime
  email: String
  File: FileCreateManyWithoutUserInput
  firstName: String
  GoogleAccount: GoogleAccountCreateManyWithoutUserInput
  GoogleContact: GoogleContactCreateManyWithoutUserInput
  id: String!
  InviteCode: InviteCodeCreateOneWithoutUserInput
  isActive: Boolean
  Item: ItemCreateManyWithoutUserInput
  Label: LabelCreateManyWithoutUserInput
  lastName: String
  Link: LinkCreateManyWithoutUserInput
  Note: NoteCreateManyWithoutUserInput
  role: String
<<<<<<< HEAD
  SavedSearch: SavedSearchCreateManyWithoutUserInput
  SavedSearchFilter: SavedSearchFilterCreateManyWithoutUserInput
  ShareLink: ShareLinkCreateManyWithoutUserInput
=======
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
>>>>>>> prisma-beta
  updatedAt: DateTime
  UploadGroup: UploadGroupCreateManyWithoutUserInput
}

input UserCreateOneWithoutFileInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutFileInput
}

input UserCreateOneWithoutGoogleAccountInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutGoogleAccountInput
}

input UserCreateOneWithoutGoogleContactInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutGoogleContactInput
}

input UserCreateOneWithoutItemInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutItemInput
}

input UserCreateOneWithoutLabelInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutLabelInput
}

input UserCreateOneWithoutLinkInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutLinkInput
}

input UserCreateOneWithoutNoteInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutNoteInput
}

input UserCreateOneWithoutSavedSearchFilterInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutSavedSearchFilterInput
}

input UserCreateOneWithoutSavedSearchInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutSavedSearchInput
}

input UserCreateOneWithoutShareLinkInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutShareLinkInput
}

input UserCreateOneWithoutUploadGroupInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutUploadGroupInput
}

<<<<<<< HEAD
input UserCreateWithoutFileInput {
=======
input UserCreateOneWithoutSavedSearchFiltersInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutSavedSearchFiltersInput
}

input UserCreateOneWithoutUploadGroupsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutUploadGroupsInput
}

input UserCreateWithoutCollectionBlocksInput {
  collectionEntries: CollectionEntryCreateManyWithoutUserInput
  collections: CollectionCreateManyWithoutUserInput
  createdAt: DateTime
  email: String
  files: FileCreateManyWithoutUserInput
  firstName: String
  googleAccounts: GoogleAccountCreateManyWithoutUserInput
  googleContacts: GoogleContactCreateManyWithoutUserInput
  id: String
  inviteCode: InviteCodeCreateOneWithoutUsersInput
  isActive: Boolean
  items: ItemCreateManyWithoutUserInput
  labels: LabelCreateManyWithoutUserInput
  lastName: String
  lastVisitedAt: DateTime
  links: LinkCreateManyWithoutUserInput
  notes: NoteCreateManyWithoutUserInput
  role: String
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
  updatedAt: DateTime
  uploadGroups: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutCollectionEntriesInput {
  collectionBlocks: CollectionBlockCreateManyWithoutUserInput
  collections: CollectionCreateManyWithoutUserInput
>>>>>>> prisma-beta
  createdAt: DateTime
  email: String
  firstName: String
<<<<<<< HEAD
  GoogleAccount: GoogleAccountCreateManyWithoutUserInput
  GoogleContact: GoogleContactCreateManyWithoutUserInput
  id: String!
  InviteCode: InviteCodeCreateOneWithoutUserInput
=======
  googleAccounts: GoogleAccountCreateManyWithoutUserInput
  googleContacts: GoogleContactCreateManyWithoutUserInput
  id: String
  inviteCode: InviteCodeCreateOneWithoutUsersInput
  isActive: Boolean
  items: ItemCreateManyWithoutUserInput
  labels: LabelCreateManyWithoutUserInput
  lastName: String
  lastVisitedAt: DateTime
  links: LinkCreateManyWithoutUserInput
  notes: NoteCreateManyWithoutUserInput
  role: String
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
  updatedAt: DateTime
  uploadGroups: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutCollectionsInput {
  collectionBlocks: CollectionBlockCreateManyWithoutUserInput
  collectionEntries: CollectionEntryCreateManyWithoutUserInput
  createdAt: DateTime
  email: String
  files: FileCreateManyWithoutUserInput
  firstName: String
  googleAccounts: GoogleAccountCreateManyWithoutUserInput
  googleContacts: GoogleContactCreateManyWithoutUserInput
  id: String
  inviteCode: InviteCodeCreateOneWithoutUsersInput
  isActive: Boolean
  items: ItemCreateManyWithoutUserInput
  labels: LabelCreateManyWithoutUserInput
  lastName: String
  lastVisitedAt: DateTime
  links: LinkCreateManyWithoutUserInput
  notes: NoteCreateManyWithoutUserInput
  role: String
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
  updatedAt: DateTime
  uploadGroups: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutFilesInput {
  collectionBlocks: CollectionBlockCreateManyWithoutUserInput
  collectionEntries: CollectionEntryCreateManyWithoutUserInput
  collections: CollectionCreateManyWithoutUserInput
  createdAt: DateTime
  email: String
  firstName: String
  googleAccounts: GoogleAccountCreateManyWithoutUserInput
  googleContacts: GoogleContactCreateManyWithoutUserInput
  id: String
  inviteCode: InviteCodeCreateOneWithoutUsersInput
>>>>>>> prisma-beta
  isActive: Boolean
  Item: ItemCreateManyWithoutUserInput
  Label: LabelCreateManyWithoutUserInput
  lastName: String
  Link: LinkCreateManyWithoutUserInput
  Note: NoteCreateManyWithoutUserInput
  role: String
<<<<<<< HEAD
  SavedSearch: SavedSearchCreateManyWithoutUserInput
  SavedSearchFilter: SavedSearchFilterCreateManyWithoutUserInput
  ShareLink: ShareLinkCreateManyWithoutUserInput
=======
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
>>>>>>> prisma-beta
  updatedAt: DateTime
  UploadGroup: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutGoogleAccountInput {
  createdAt: DateTime
  email: String
  File: FileCreateManyWithoutUserInput
  firstName: String
  GoogleContact: GoogleContactCreateManyWithoutUserInput
  id: String!
  InviteCode: InviteCodeCreateOneWithoutUserInput
  isActive: Boolean
  Item: ItemCreateManyWithoutUserInput
  Label: LabelCreateManyWithoutUserInput
  lastName: String
  Link: LinkCreateManyWithoutUserInput
  Note: NoteCreateManyWithoutUserInput
  role: String
<<<<<<< HEAD
  SavedSearch: SavedSearchCreateManyWithoutUserInput
  SavedSearchFilter: SavedSearchFilterCreateManyWithoutUserInput
  ShareLink: ShareLinkCreateManyWithoutUserInput
=======
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
>>>>>>> prisma-beta
  updatedAt: DateTime
  UploadGroup: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutGoogleContactInput {
  createdAt: DateTime
  email: String
  File: FileCreateManyWithoutUserInput
  firstName: String
  GoogleAccount: GoogleAccountCreateManyWithoutUserInput
  id: String!
  InviteCode: InviteCodeCreateOneWithoutUserInput
  isActive: Boolean
  Item: ItemCreateManyWithoutUserInput
  Label: LabelCreateManyWithoutUserInput
  lastName: String
  Link: LinkCreateManyWithoutUserInput
  Note: NoteCreateManyWithoutUserInput
  role: String
<<<<<<< HEAD
  SavedSearch: SavedSearchCreateManyWithoutUserInput
  SavedSearchFilter: SavedSearchFilterCreateManyWithoutUserInput
  ShareLink: ShareLinkCreateManyWithoutUserInput
=======
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
>>>>>>> prisma-beta
  updatedAt: DateTime
  UploadGroup: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutItemInput {
  createdAt: DateTime
  email: String
  File: FileCreateManyWithoutUserInput
  firstName: String
  GoogleAccount: GoogleAccountCreateManyWithoutUserInput
  GoogleContact: GoogleContactCreateManyWithoutUserInput
  id: String!
  InviteCode: InviteCodeCreateOneWithoutUserInput
  isActive: Boolean
  Label: LabelCreateManyWithoutUserInput
  lastName: String
  Link: LinkCreateManyWithoutUserInput
  Note: NoteCreateManyWithoutUserInput
  role: String
<<<<<<< HEAD
  SavedSearch: SavedSearchCreateManyWithoutUserInput
  SavedSearchFilter: SavedSearchFilterCreateManyWithoutUserInput
  ShareLink: ShareLinkCreateManyWithoutUserInput
=======
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
>>>>>>> prisma-beta
  updatedAt: DateTime
  UploadGroup: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutLabelInput {
  createdAt: DateTime
  email: String
  File: FileCreateManyWithoutUserInput
  firstName: String
  GoogleAccount: GoogleAccountCreateManyWithoutUserInput
  GoogleContact: GoogleContactCreateManyWithoutUserInput
  id: String!
  InviteCode: InviteCodeCreateOneWithoutUserInput
  isActive: Boolean
  Item: ItemCreateManyWithoutUserInput
  lastName: String
  Link: LinkCreateManyWithoutUserInput
  Note: NoteCreateManyWithoutUserInput
  role: String
<<<<<<< HEAD
  SavedSearch: SavedSearchCreateManyWithoutUserInput
  SavedSearchFilter: SavedSearchFilterCreateManyWithoutUserInput
  ShareLink: ShareLinkCreateManyWithoutUserInput
=======
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
>>>>>>> prisma-beta
  updatedAt: DateTime
  UploadGroup: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutLinkInput {
  createdAt: DateTime
  email: String
  File: FileCreateManyWithoutUserInput
  firstName: String
  GoogleAccount: GoogleAccountCreateManyWithoutUserInput
  GoogleContact: GoogleContactCreateManyWithoutUserInput
  id: String!
  InviteCode: InviteCodeCreateOneWithoutUserInput
  isActive: Boolean
  Item: ItemCreateManyWithoutUserInput
  Label: LabelCreateManyWithoutUserInput
  lastName: String
  Note: NoteCreateManyWithoutUserInput
  role: String
<<<<<<< HEAD
  SavedSearch: SavedSearchCreateManyWithoutUserInput
  SavedSearchFilter: SavedSearchFilterCreateManyWithoutUserInput
  ShareLink: ShareLinkCreateManyWithoutUserInput
=======
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
>>>>>>> prisma-beta
  updatedAt: DateTime
  UploadGroup: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutNoteInput {
  createdAt: DateTime
  email: String
  File: FileCreateManyWithoutUserInput
  firstName: String
  GoogleAccount: GoogleAccountCreateManyWithoutUserInput
  GoogleContact: GoogleContactCreateManyWithoutUserInput
  id: String!
  InviteCode: InviteCodeCreateOneWithoutUserInput
  isActive: Boolean
  Item: ItemCreateManyWithoutUserInput
  Label: LabelCreateManyWithoutUserInput
  lastName: String
  Link: LinkCreateManyWithoutUserInput
  role: String
<<<<<<< HEAD
  SavedSearch: SavedSearchCreateManyWithoutUserInput
  SavedSearchFilter: SavedSearchFilterCreateManyWithoutUserInput
  ShareLink: ShareLinkCreateManyWithoutUserInput
=======
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
>>>>>>> prisma-beta
  updatedAt: DateTime
  UploadGroup: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutSavedSearchFilterInput {
  createdAt: DateTime
  email: String
  File: FileCreateManyWithoutUserInput
  firstName: String
  GoogleAccount: GoogleAccountCreateManyWithoutUserInput
  GoogleContact: GoogleContactCreateManyWithoutUserInput
  id: String!
  InviteCode: InviteCodeCreateOneWithoutUserInput
  isActive: Boolean
  Item: ItemCreateManyWithoutUserInput
  Label: LabelCreateManyWithoutUserInput
  lastName: String
  Link: LinkCreateManyWithoutUserInput
  Note: NoteCreateManyWithoutUserInput
  role: String
<<<<<<< HEAD
  SavedSearch: SavedSearchCreateManyWithoutUserInput
  ShareLink: ShareLinkCreateManyWithoutUserInput
=======
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
>>>>>>> prisma-beta
  updatedAt: DateTime
  UploadGroup: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutSavedSearchInput {
  createdAt: DateTime
  email: String
  File: FileCreateManyWithoutUserInput
  firstName: String
  GoogleAccount: GoogleAccountCreateManyWithoutUserInput
  GoogleContact: GoogleContactCreateManyWithoutUserInput
  id: String!
  InviteCode: InviteCodeCreateOneWithoutUserInput
  isActive: Boolean
  Item: ItemCreateManyWithoutUserInput
  Label: LabelCreateManyWithoutUserInput
  lastName: String
  Link: LinkCreateManyWithoutUserInput
  Note: NoteCreateManyWithoutUserInput
  role: String
<<<<<<< HEAD
  SavedSearchFilter: SavedSearchFilterCreateManyWithoutUserInput
  ShareLink: ShareLinkCreateManyWithoutUserInput
  updatedAt: DateTime
  UploadGroup: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutShareLinkInput {
  createdAt: DateTime
  email: String
  File: FileCreateManyWithoutUserInput
  firstName: String
  GoogleAccount: GoogleAccountCreateManyWithoutUserInput
  GoogleContact: GoogleContactCreateManyWithoutUserInput
  id: String!
  InviteCode: InviteCodeCreateOneWithoutUserInput
  isActive: Boolean
  Item: ItemCreateManyWithoutUserInput
  Label: LabelCreateManyWithoutUserInput
  lastName: String
  Link: LinkCreateManyWithoutUserInput
  Note: NoteCreateManyWithoutUserInput
  role: String
  SavedSearch: SavedSearchCreateManyWithoutUserInput
  SavedSearchFilter: SavedSearchFilterCreateManyWithoutUserInput
=======
  savedSearches: SavedSearchCreateManyWithoutUserInput
>>>>>>> prisma-beta
  updatedAt: DateTime
  UploadGroup: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutUploadGroupInput {
  createdAt: DateTime
  email: String
  File: FileCreateManyWithoutUserInput
  firstName: String
  GoogleAccount: GoogleAccountCreateManyWithoutUserInput
  GoogleContact: GoogleContactCreateManyWithoutUserInput
  id: String!
  InviteCode: InviteCodeCreateOneWithoutUserInput
  isActive: Boolean
  Item: ItemCreateManyWithoutUserInput
  Label: LabelCreateManyWithoutUserInput
  lastName: String
  Link: LinkCreateManyWithoutUserInput
  Note: NoteCreateManyWithoutUserInput
  role: String
<<<<<<< HEAD
  SavedSearch: SavedSearchCreateManyWithoutUserInput
  SavedSearchFilter: SavedSearchFilterCreateManyWithoutUserInput
  ShareLink: ShareLinkCreateManyWithoutUserInput
=======
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
>>>>>>> prisma-beta
  updatedAt: DateTime
}

input UserFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

input UserOrderByInput {
  createdAt: OrderByArg
  email: OrderByArg
  firstName: OrderByArg
  id: OrderByArg
  inviteCode: OrderByArg
<<<<<<< HEAD
  InviteCode: OrderByArg
=======
  inviteCodeId: OrderByArg
>>>>>>> prisma-beta
  isActive: OrderByArg
  lastName: OrderByArg
  role: OrderByArg
  updatedAt: OrderByArg
}

input UserWhereInput {
  AND: [UserWhereInput!]
  createdAt: DateTimeFilter
  email: StringFilter
  File: FileFilter
  firstName: NullableStringFilter
  GoogleAccount: GoogleAccountFilter
  GoogleContact: GoogleContactFilter
  id: StringFilter
<<<<<<< HEAD
  inviteCode: NullableStringFilter
  InviteCode: InviteCodeWhereInput
=======
  inviteCode: InviteCodeWhereInput
  inviteCodeId: NullableStringFilter
>>>>>>> prisma-beta
  isActive: BooleanFilter
  Item: ItemFilter
  Label: LabelFilter
  lastName: NullableStringFilter
  Link: LinkFilter
  NOT: [UserWhereInput!]
  Note: NoteFilter
  OR: [UserWhereInput!]
  role: StringFilter
<<<<<<< HEAD
  SavedSearch: SavedSearchFilter
  SavedSearchFilter: SavedSearchFilterFilter
  ShareLink: ShareLinkFilter
=======
  savedSearches: SavedSearchFilter
  savedSearchFilters: SavedSearchFilterFilter
>>>>>>> prisma-beta
  updatedAt: DateTimeFilter
  UploadGroup: UploadGroupFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
}
