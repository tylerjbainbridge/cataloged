generator prisma {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

model InviteCode {
  id String @id @default(cuid())

  code String

  users User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model InterestedUser {
  id String @id @default(cuid())

  email String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model File {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  extension           String   @default("")
  hasStartedUploading Boolean?
  height              Int?

  isFailed   Boolean?
  isUploaded Boolean?
  item       Item
  name       String   @default("")

  size        Int?
  contentType String?

  title       String @default("")
  description String @default("")

  uploadGroup UploadGroup
  user        User
  width       Int?

  @@index([name, title, description, extension, isUploaded, isFailed])
}

model GoogleAccount {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accountId String? @unique
  email     String?
  firstName String?
  lastName  String?
  picture   String?

  refreshToken String?
  accessToken  String?

  expiresAt DateTime

  isAuthMethod Boolean?

  metadata String?

  user           User
  googleContacts GoogleContact[]
}

model GoogleContact {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  resourceName String
  name         String?

  email       String?
  otherEmails String[]

  phoneNumber       String?
  otherPhoneNumbers String[]

  companyTitle String?
  companyName  String?

  photoUrl String?

  user          User
  item          Item
  googleAccount GoogleAccount

  @@index([name, email, companyName, companyTitle])
}

model ShareLink {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User

  isEnabled Boolean @default(true)

  // Types of data you can share
  collection Collection?
  item       Item[]
}

model SavedSearch {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name    String
  version Int

  user User?

  filters SavedSearchFilter[]
}

model SavedSearchFilter {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name     String
  operator String?
  value    String?
  values   String?

  user User?

  savedSearch SavedSearch?
}

model Collection {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String
  description String?

  entries CollectionEntry[]
  items   Item[]

  user User?
}

model CollectionBlock {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  type    String
  content String

  collection Collection

  user User?
}

model CollectionEntry {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  item  Item?
  block CollectionBlock?

  collection Collection

  position Int?

  user User?
}


model Item {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  deletedAt DateTime?

  isFavorited Boolean @default(false)
  status      String? @default("NOT_STARTED")
  type        String  @default("")

  date DateTime @default(now())

  link          Link?
  note          Note?
  file          File?
  googleContact GoogleContact?

  user User?

  items Item[]

  labels      Label[]
  collections Collection[]

  @@index([type, status, isFavorited, deletedAt])
}

model Label {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @default("")

  user  User
  items Item[]

  @@index([name])
}

model Link {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  description String?
  favicon     String?
  logo        String?
  href        String  @default("")
  host        String? @default("")
  image       String?
  notes       String  @default("")
  title       String?

  isIframeDisabled Boolean @default(false)

  user User
  item Item?

  @@index([href, title, description])
}

model Note {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title String? @default("")

  raw  String @default("")
  text String @default("")

  user User
  item Item?

  @@index([title, text])
}

model UploadGroup {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  isComplete Boolean?
  isFailed   Boolean?
  user       User
  files      File[]
}


model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  lastVisitedAt DateTime @default(now())

  email          String          @default("") @unique
  firstName      String?
  lastName       String?
  files          File[]
  googleAccounts GoogleAccount[]
  items          Item[]
  labels         Label[]
  links          Link[]
  notes          Note[]
  uploadGroups   UploadGroup[]

  role     String  @default("")
  isActive Boolean @default(false)

  inviteCode InviteCode?


}