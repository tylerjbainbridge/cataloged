### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


input BooleanFilter {
  equals: Boolean
  not: Boolean
}

scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: DateTime
  notIn: [DateTime!]
}

type File {
  createdAt: DateTime!
  description: String!
  extension: String!
  fullUrl: String!
  height: Int
  id: String!
  isUploaded: Boolean
  item: Item!
  name: String!
  originalName: String!
  size: String
  squareUrl: String!
  title: String!
  updatedAt: DateTime!
  uploadGroup: UploadGroup!
  width: Int
}

input FileCreateInput {
  createdAt: DateTime
  description: String
  extension: String
  hasStartedUploading: Boolean
  height: Int
  id: String
  isFailed: Boolean
  isUploaded: Boolean
  item: ItemCreateOneWithoutFileInput!
  name: String
  size: String
  title: String
  updatedAt: DateTime
  uploadGroup: UploadGroupCreateOneWithoutFilesInput!
  user: UserCreateOneWithoutFilesInput!
  width: Int
}

input FileCreateManyWithoutUploadGroupInput {
  connect: [FileWhereUniqueInput!]
  create: [FileCreateWithoutUploadGroupInput!]
}

input FileCreateManyWithoutUserInput {
  connect: [FileWhereUniqueInput!]
  create: [FileCreateWithoutUserInput!]
}

input FileCreateOneWithoutItemInput {
  connect: FileWhereUniqueInput
  create: FileCreateWithoutItemInput
}

input FileCreateWithoutItemInput {
  createdAt: DateTime
  description: String
  extension: String
  hasStartedUploading: Boolean
  height: Int
  id: String
  isFailed: Boolean
  isUploaded: Boolean
  name: String
  size: String
  title: String
  updatedAt: DateTime
  uploadGroup: UploadGroupCreateOneWithoutFilesInput!
  user: UserCreateOneWithoutFilesInput!
  width: Int
}

input FileCreateWithoutUploadGroupInput {
  createdAt: DateTime
  description: String
  extension: String
  hasStartedUploading: Boolean
  height: Int
  id: String
  isFailed: Boolean
  isUploaded: Boolean
  item: ItemCreateOneWithoutFileInput!
  name: String
  size: String
  title: String
  updatedAt: DateTime
  user: UserCreateOneWithoutFilesInput!
  width: Int
}

input FileCreateWithoutUserInput {
  createdAt: DateTime
  description: String
  extension: String
  hasStartedUploading: Boolean
  height: Int
  id: String
  isFailed: Boolean
  isUploaded: Boolean
  item: ItemCreateOneWithoutFileInput!
  name: String
  size: String
  title: String
  updatedAt: DateTime
  uploadGroup: UploadGroupCreateOneWithoutFilesInput!
  width: Int
}

input FileFilter {
  every: FileWhereInput
  none: FileWhereInput
  some: FileWhereInput
}

input FileOrderByInput {
  createdAt: OrderByArg
  description: OrderByArg
  extension: OrderByArg
  hasStartedUploading: OrderByArg
  height: OrderByArg
  id: OrderByArg
  isFailed: OrderByArg
  isUploaded: OrderByArg
  name: OrderByArg
  size: OrderByArg
  title: OrderByArg
  updatedAt: OrderByArg
  width: OrderByArg
}

input FileWhereInput {
  AND: [FileWhereInput!]
  createdAt: DateTimeFilter
  description: StringFilter
  extension: StringFilter
  hasStartedUploading: NullableBooleanFilter
  height: NullableIntFilter
  id: StringFilter
  isFailed: NullableBooleanFilter
  isUploaded: NullableBooleanFilter
  item: ItemWhereInput
  name: StringFilter
  NOT: [FileWhereInput!]
  OR: [FileWhereInput!]
  size: NullableStringFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  uploadGroup: UploadGroupWhereInput
  user: UserWhereInput
  width: NullableIntFilter
}

input FileWhereUniqueInput {
  id: String
}

type Filter {
  name: String!
  value: FilterValue
  values: [FilterValue!]
}

input FilterInput {
  name: String!
  value: FilterValue
  values: [FilterValue!]
}

"""String or Boolean"""
scalar FilterValue

type GoogleAccount {
  createdAt: DateTime!
  email: String
  id: String!
  updatedAt: DateTime!
}

input GoogleAccountCreateManyWithoutUserInput {
  connect: [GoogleAccountWhereUniqueInput!]
  create: [GoogleAccountCreateWithoutUserInput!]
}

input GoogleAccountCreateOneWithoutGoogleContactsInput {
  connect: GoogleAccountWhereUniqueInput
  create: GoogleAccountCreateWithoutGoogleContactsInput
}

input GoogleAccountCreateWithoutGoogleContactsInput {
  accessToken: String
  accountId: String
  createdAt: DateTime
  email: String
  expiresAt: DateTime!
  firstName: String
  id: String
  isAuthMethod: Boolean
  lastName: String
  metadata: String
  picture: String
  refreshToken: String
  updatedAt: DateTime
  user: UserCreateOneWithoutGoogleAccountsInput!
}

input GoogleAccountCreateWithoutUserInput {
  accessToken: String
  accountId: String
  createdAt: DateTime
  email: String
  expiresAt: DateTime!
  firstName: String
  googleContacts: GoogleContactCreateManyWithoutGoogleAccountInput
  id: String
  isAuthMethod: Boolean
  lastName: String
  metadata: String
  picture: String
  refreshToken: String
  updatedAt: DateTime
}

input GoogleAccountFilter {
  every: GoogleAccountWhereInput
  none: GoogleAccountWhereInput
  some: GoogleAccountWhereInput
}

input GoogleAccountWhereInput {
  accessToken: NullableStringFilter
  accountId: NullableStringFilter
  AND: [GoogleAccountWhereInput!]
  createdAt: DateTimeFilter
  email: NullableStringFilter
  expiresAt: DateTimeFilter
  firstName: NullableStringFilter
  googleContacts: GoogleContactFilter
  id: StringFilter
  isAuthMethod: NullableBooleanFilter
  lastName: NullableStringFilter
  metadata: NullableStringFilter
  NOT: [GoogleAccountWhereInput!]
  OR: [GoogleAccountWhereInput!]
  picture: NullableStringFilter
  refreshToken: NullableStringFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
}

input GoogleAccountWhereUniqueInput {
  accountId: String
  id: String
}

type GoogleContact {
  companyName: String
  companyTitle: String
  createdAt: DateTime!
  email: String
  googleAccount: GoogleAccount!
  id: String!
  item: Item!
  name: String
  otherEmails: [String!]!
  otherPhoneNumbers: [String!]!
  phoneNumber: String
  photoUrl: String
  resourceName: String!
  updatedAt: DateTime!
}

input GoogleContactCreateManyWithoutGoogleAccountInput {
  connect: [GoogleContactWhereUniqueInput!]
  create: [GoogleContactCreateWithoutGoogleAccountInput!]
}

input GoogleContactCreateManyWithoutUserInput {
  connect: [GoogleContactWhereUniqueInput!]
  create: [GoogleContactCreateWithoutUserInput!]
}

input GoogleContactCreateOneWithoutItemInput {
  connect: GoogleContactWhereUniqueInput
  create: GoogleContactCreateWithoutItemInput
}

input GoogleContactCreateotherEmailsInput {
  set: [String!]
}

input GoogleContactCreateotherPhoneNumbersInput {
  set: [String!]
}

input GoogleContactCreateWithoutGoogleAccountInput {
  companyName: String
  companyTitle: String
  createdAt: DateTime
  email: String
  id: String
  item: ItemCreateOneWithoutGoogleContactInput!
  name: String
  otherEmails: GoogleContactCreateotherEmailsInput
  otherPhoneNumbers: GoogleContactCreateotherPhoneNumbersInput
  phoneNumber: String
  photoUrl: String
  resourceName: String!
  updatedAt: DateTime
  user: UserCreateOneWithoutGoogleContactsInput!
}

input GoogleContactCreateWithoutItemInput {
  companyName: String
  companyTitle: String
  createdAt: DateTime
  email: String
  googleAccount: GoogleAccountCreateOneWithoutGoogleContactsInput!
  id: String
  name: String
  otherEmails: GoogleContactCreateotherEmailsInput
  otherPhoneNumbers: GoogleContactCreateotherPhoneNumbersInput
  phoneNumber: String
  photoUrl: String
  resourceName: String!
  updatedAt: DateTime
  user: UserCreateOneWithoutGoogleContactsInput!
}

input GoogleContactCreateWithoutUserInput {
  companyName: String
  companyTitle: String
  createdAt: DateTime
  email: String
  googleAccount: GoogleAccountCreateOneWithoutGoogleContactsInput!
  id: String
  item: ItemCreateOneWithoutGoogleContactInput!
  name: String
  otherEmails: GoogleContactCreateotherEmailsInput
  otherPhoneNumbers: GoogleContactCreateotherPhoneNumbersInput
  phoneNumber: String
  photoUrl: String
  resourceName: String!
  updatedAt: DateTime
}

input GoogleContactFilter {
  every: GoogleContactWhereInput
  none: GoogleContactWhereInput
  some: GoogleContactWhereInput
}

input GoogleContactWhereInput {
  AND: [GoogleContactWhereInput!]
  companyName: NullableStringFilter
  companyTitle: NullableStringFilter
  createdAt: DateTimeFilter
  email: NullableStringFilter
  googleAccount: GoogleAccountWhereInput
  id: StringFilter
  item: ItemWhereInput
  name: NullableStringFilter
  NOT: [GoogleContactWhereInput!]
  OR: [GoogleContactWhereInput!]
  phoneNumber: NullableStringFilter
  photoUrl: NullableStringFilter
  resourceName: StringFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
}

input GoogleContactWhereUniqueInput {
  id: String
}

type InProgressUpload {
  signedUrls: [String!]!
  uploadGroup: UploadGroup
}

type InterestedUser {
  createdAt: DateTime!
  email: String!
  id: String!
  updatedAt: DateTime!
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: Int
  notIn: [Int!]
}

type InviteCode {
  code: String!
  createdAt: DateTime!
  id: String!
  updatedAt: DateTime!
}

input InviteCodeCreateOneWithoutUsersInput {
  connect: InviteCodeWhereUniqueInput
  create: InviteCodeCreateWithoutUsersInput
}

input InviteCodeCreateWithoutUsersInput {
  code: String!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input InviteCodeOrderByInput {
  code: OrderByArg
  createdAt: OrderByArg
  id: OrderByArg
  updatedAt: OrderByArg
}

input InviteCodeWhereInput {
  AND: [InviteCodeWhereInput!]
  code: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [InviteCodeWhereInput!]
  OR: [InviteCodeWhereInput!]
  updatedAt: DateTimeFilter
  users: UserFilter
}

input InviteCodeWhereUniqueInput {
  id: String
}

type Item {
  createdAt: DateTime!
  date: DateTime!
  file: File
  googleContact: GoogleContact
  id: String!
  isFavorited: Boolean!
  labels(after: String, before: String, first: Int, last: Int, orderBy: LabelOrderByInput, skip: Int): [Label!]!
  link: Link
  note: Note
  status: ItemStatus!
  type: String!
  updatedAt: DateTime!
}

type ItemConnection {
  edges: [ItemEdge!]!
  pageInfo: PageInfo!
}

input ItemCreateManyWithoutLabelsInput {
  connect: [ItemWhereUniqueInput!]
  create: [ItemCreateWithoutLabelsInput!]
}

input ItemCreateManyWithoutUserInput {
  connect: [ItemWhereUniqueInput!]
  create: [ItemCreateWithoutUserInput!]
}

input ItemCreateOneWithoutFileInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutFileInput
}

input ItemCreateOneWithoutGoogleContactInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutGoogleContactInput
}

input ItemCreateOneWithoutLinkInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutLinkInput
}

input ItemCreateOneWithoutNoteInput {
  connect: ItemWhereUniqueInput
  create: ItemCreateWithoutNoteInput
}

input ItemCreateWithoutFileInput {
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  googleContact: GoogleContactCreateOneWithoutItemInput
  id: String
  isFavorited: Boolean
  labels: LabelCreateManyWithoutItemsInput
  link: LinkCreateOneWithoutItemInput
  note: NoteCreateOneWithoutItemInput
  status: String
  type: String
  updatedAt: DateTime
  user: UserCreateOneWithoutItemsInput
}

input ItemCreateWithoutGoogleContactInput {
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  file: FileCreateOneWithoutItemInput
  id: String
  isFavorited: Boolean
  labels: LabelCreateManyWithoutItemsInput
  link: LinkCreateOneWithoutItemInput
  note: NoteCreateOneWithoutItemInput
  status: String
  type: String
  updatedAt: DateTime
  user: UserCreateOneWithoutItemsInput
}

input ItemCreateWithoutLabelsInput {
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  file: FileCreateOneWithoutItemInput
  googleContact: GoogleContactCreateOneWithoutItemInput
  id: String
  isFavorited: Boolean
  link: LinkCreateOneWithoutItemInput
  note: NoteCreateOneWithoutItemInput
  status: String
  type: String
  updatedAt: DateTime
  user: UserCreateOneWithoutItemsInput
}

input ItemCreateWithoutLinkInput {
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  file: FileCreateOneWithoutItemInput
  googleContact: GoogleContactCreateOneWithoutItemInput
  id: String
  isFavorited: Boolean
  labels: LabelCreateManyWithoutItemsInput
  note: NoteCreateOneWithoutItemInput
  status: String
  type: String
  updatedAt: DateTime
  user: UserCreateOneWithoutItemsInput
}

input ItemCreateWithoutNoteInput {
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  file: FileCreateOneWithoutItemInput
  googleContact: GoogleContactCreateOneWithoutItemInput
  id: String
  isFavorited: Boolean
  labels: LabelCreateManyWithoutItemsInput
  link: LinkCreateOneWithoutItemInput
  status: String
  type: String
  updatedAt: DateTime
  user: UserCreateOneWithoutItemsInput
}

input ItemCreateWithoutUserInput {
  createdAt: DateTime
  date: DateTime
  deletedAt: DateTime
  file: FileCreateOneWithoutItemInput
  googleContact: GoogleContactCreateOneWithoutItemInput
  id: String
  isFavorited: Boolean
  labels: LabelCreateManyWithoutItemsInput
  link: LinkCreateOneWithoutItemInput
  note: NoteCreateOneWithoutItemInput
  status: String
  type: String
  updatedAt: DateTime
}

type ItemEdge {
  cursor: String!
  node: Item!
}

input ItemFilter {
  every: ItemWhereInput
  none: ItemWhereInput
  some: ItemWhereInput
}

input ItemOrderByInput {
  createdAt: OrderByArg
  date: OrderByArg
  deletedAt: OrderByArg
  id: OrderByArg
  isFavorited: OrderByArg
  status: OrderByArg
  type: OrderByArg
  updatedAt: OrderByArg
}

enum ItemStatus {
  DONE
  IN_PROGRESS
  NOT_STARTED
}

enum ItemType {
  file
  googleContact
  link
  note
}

input ItemWhereInput {
  AND: [ItemWhereInput!]
  createdAt: DateTimeFilter
  date: DateTimeFilter
  deletedAt: NullableDateTimeFilter
  file: FileWhereInput
  googleContact: GoogleContactWhereInput
  id: StringFilter
  isFavorited: BooleanFilter
  labels: LabelFilter
  link: LinkWhereInput
  NOT: [ItemWhereInput!]
  note: NoteWhereInput
  OR: [ItemWhereInput!]
  status: NullableStringFilter
  type: StringFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
}

input ItemWhereUniqueInput {
  id: String
}

type JWT {
  token: String!
}

type Label {
  createdAt: DateTime!
  id: String!
  items(after: String, before: String, first: Int, last: Int, skip: Int): [Item!]!
  name: String!
  updatedAt: DateTime!
}

input LabelCreateManyWithoutItemsInput {
  connect: [LabelWhereUniqueInput!]
  create: [LabelCreateWithoutItemsInput!]
}

input LabelCreateManyWithoutUserInput {
  connect: [LabelWhereUniqueInput!]
  create: [LabelCreateWithoutUserInput!]
}

input LabelCreateWithoutItemsInput {
  createdAt: DateTime
  id: String
  name: String
  updatedAt: DateTime
  user: UserCreateOneWithoutLabelsInput!
}

input LabelCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  items: ItemCreateManyWithoutLabelsInput
  name: String
  updatedAt: DateTime
}

input LabelFilter {
  every: LabelWhereInput
  none: LabelWhereInput
  some: LabelWhereInput
}

input LabelOrderByInput {
  createdAt: OrderByArg
  id: OrderByArg
  name: OrderByArg
  updatedAt: OrderByArg
}

input LabelWhereInput {
  AND: [LabelWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  items: ItemFilter
  name: StringFilter
  NOT: [LabelWhereInput!]
  OR: [LabelWhereInput!]
  updatedAt: DateTimeFilter
  user: UserWhereInput
}

input LabelWhereUniqueInput {
  id: String
}

type Link {
  createdAt: DateTime!
  description: String
  favicon: String
  href: String!
  id: String!
  image: String
  item: Item
  notes: String!
  title: String
  updatedAt: DateTime!
}

input LinkCreateManyWithoutUserInput {
  connect: [LinkWhereUniqueInput!]
  create: [LinkCreateWithoutUserInput!]
}

input LinkCreateOneWithoutItemInput {
  connect: LinkWhereUniqueInput
  create: LinkCreateWithoutItemInput
}

input LinkCreateWithoutItemInput {
  createdAt: DateTime
  description: String
  favicon: String
  host: String
  href: String
  id: String
  image: String
  notes: String
  title: String
  updatedAt: DateTime
  user: UserCreateOneWithoutLinksInput!
}

input LinkCreateWithoutUserInput {
  createdAt: DateTime
  description: String
  favicon: String
  host: String
  href: String
  id: String
  image: String
  item: ItemCreateOneWithoutLinkInput
  notes: String
  title: String
  updatedAt: DateTime
}

input LinkFilter {
  every: LinkWhereInput
  none: LinkWhereInput
  some: LinkWhereInput
}

input LinkWhereInput {
  AND: [LinkWhereInput!]
  createdAt: DateTimeFilter
  description: NullableStringFilter
  favicon: NullableStringFilter
  host: NullableStringFilter
  href: StringFilter
  id: StringFilter
  image: NullableStringFilter
  item: ItemWhereInput
  NOT: [LinkWhereInput!]
  notes: StringFilter
  OR: [LinkWhereInput!]
  title: NullableStringFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
}

input LinkWhereUniqueInput {
  id: String
}

type Mutation {
  addInviteCode(code: String!): InviteCode!
  addOrUpdateSavedSearch(filters: [FilterInput!]!, name: String!, savedSearchId: String): SavedSearch!
  addToWaitlist(email: String!): InterestedUser!
  batchUpdateItemLabels(itemIds: [String!]!, labelIdsToAdd: [String!]!, labelIdsToRemove: [String!]!): [Item!]!
  connectLabelToItem(itemId: String!, name: String!): Item!
  createLabel(itemId: String, name: String!): User!
  createLink(href: String!): Link!
  createNote(raw: String!, text: String!): Note!
  createOneFile(data: FileCreateInput!): File!
  createOneUser(data: UserCreateInput!): User!
  deleteItem(itemId: String!): Item!
  deleteLabel(labelId: String!): User!
  deleteManyItems(itemIds: [String!]!): [Item!]!
  deleteOneFile(where: FileWhereUniqueInput!): File
  deleteSavedSearch(id: String): SavedSearch!
  disconnectLabelFromItem(itemId: String!, labelId: String!): Item!
  enterInviteCode(code: String!): User!
  generateSignedUrls(signedURLArgs: [SignedURLArgs!]): InProgressUpload!
  googleAuth(code: String!, isAuthMethod: Boolean): JWT!
  processFiles(uploadGroupId: String): [File!]!
  refreshLinkMeta(href: String!, linkId: String!): Link!
  syncGoogleContacts(googleAccountId: String!): Int!
  syncGoogleDrive(googleAccountId: String!): String!
  taskFixItemDates: String!
  taskFixLinks: String!
  updateFavoriteManyItems(isFavorited: Boolean!, itemIds: [String!]!): [Item!]!
  updateFile(description: String, fileId: String!, title: String): File!
  updateLink(description: String, href: String!, linkId: String!, title: String!): Link!
  updateNote(noteId: String!, raw: String!, text: String!, title: String): Note!
  updateStatusManyItems(itemIds: [String!]!, status: ItemStatus!): [Item!]!
}

type Note {
  createdAt: DateTime!
  id: String!
  item: Item
  raw: String!
  text: String!
  title: String
  updatedAt: DateTime!
}

input NoteCreateManyWithoutUserInput {
  connect: [NoteWhereUniqueInput!]
  create: [NoteCreateWithoutUserInput!]
}

input NoteCreateOneWithoutItemInput {
  connect: NoteWhereUniqueInput
  create: NoteCreateWithoutItemInput
}

input NoteCreateWithoutItemInput {
  createdAt: DateTime
  id: String
  raw: String
  text: String
  title: String
  updatedAt: DateTime
  user: UserCreateOneWithoutNotesInput!
}

input NoteCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  item: ItemCreateOneWithoutNoteInput
  raw: String
  text: String
  title: String
  updatedAt: DateTime
}

input NoteFilter {
  every: NoteWhereInput
  none: NoteWhereInput
  some: NoteWhereInput
}

input NoteWhereInput {
  AND: [NoteWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  item: ItemWhereInput
  NOT: [NoteWhereInput!]
  OR: [NoteWhereInput!]
  raw: StringFilter
  text: StringFilter
  title: NullableStringFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
}

input NoteWhereUniqueInput {
  id: String
}

input NullableBooleanFilter {
  equals: Boolean
  not: Boolean
}

input NullableDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: DateTime
  notIn: [DateTime!]
}

input NullableIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: Int
  notIn: [Int!]
}

input NullableStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

enum OrderByArg {
  asc
  desc
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  _files(after: String, before: String, first: Int, last: Int, orderBy: FileOrderByInput, skip: Int, where: FileWhereInput): [File!]!
  _inviteCodes(after: String, before: String, first: Int, last: Int, orderBy: InviteCodeOrderByInput, skip: Int, where: InviteCodeWhereInput): [InviteCode!]!
  _items(after: String, before: String, first: Int, last: Int, orderBy: ItemOrderByInput, skip: Int, where: ItemWhereInput): [Item!]!
  _uploadgroups(after: String, before: String, first: Int, last: Int, orderBy: UploadGroupOrderByInput, skip: Int, where: UploadGroupWhereInput): [UploadGroup!]!
  _users(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]!
  file(where: FileWhereUniqueInput!): File
  googleURL(googleAccountId: String, isAuthMethod: Boolean, origin: String, scopes: [String!], syncContent: String): String!
  item(id: String!): Item!
  itemsConnection(after: String, before: String, filters: [FilterInput!], first: Int, last: Int, orderBy: ItemOrderByInput, type: ItemType): ItemConnection!
  me: User
  mostRecentItem(type: String): Item
  savedSearches: [SavedSearch!]!
  test: String!
  uploadGroups(after: String, before: String, first: Int, last: Int, orderBy: UploadGroupOrderByInput, where: UploadGroupWhereInput): [UploadGroup!]!
  users(after: String, before: String, first: Int, last: Int, skip: Int): [User!]!
}

type SavedSearch {
  createdAt: DateTime!
  filters: [Filter!]!
  id: String!
  name: String!
  updatedAt: DateTime!
  version: Int!
}

input SavedSearchCreateManyWithoutUserInput {
  connect: [SavedSearchWhereUniqueInput!]
  create: [SavedSearchCreateWithoutUserInput!]
}

input SavedSearchCreateOneWithoutFiltersInput {
  connect: SavedSearchWhereUniqueInput
  create: SavedSearchCreateWithoutFiltersInput
}

input SavedSearchCreateWithoutFiltersInput {
  createdAt: DateTime
  id: String
  name: String!
  updatedAt: DateTime
  user: UserCreateOneWithoutSavedSearchesInput
  version: Int!
}

input SavedSearchCreateWithoutUserInput {
  createdAt: DateTime
  filters: SavedSearchFilterCreateManyWithoutSavedSearchInput
  id: String
  name: String!
  updatedAt: DateTime
  version: Int!
}

input SavedSearchFilter {
  every: SavedSearchWhereInput
  none: SavedSearchWhereInput
  some: SavedSearchWhereInput
}

input SavedSearchFilterCreateManyWithoutSavedSearchInput {
  connect: [SavedSearchFilterWhereUniqueInput!]
  create: [SavedSearchFilterCreateWithoutSavedSearchInput!]
}

input SavedSearchFilterCreateManyWithoutUserInput {
  connect: [SavedSearchFilterWhereUniqueInput!]
  create: [SavedSearchFilterCreateWithoutUserInput!]
}

input SavedSearchFilterCreateWithoutSavedSearchInput {
  createdAt: DateTime
  id: String
  name: String!
  operator: String
  updatedAt: DateTime
  user: UserCreateOneWithoutSavedSearchFiltersInput
  value: String
  values: String
}

input SavedSearchFilterCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  name: String!
  operator: String
  savedSearch: SavedSearchCreateOneWithoutFiltersInput
  updatedAt: DateTime
  value: String
  values: String
}

input SavedSearchFilterFilter {
  every: SavedSearchFilterWhereInput
  none: SavedSearchFilterWhereInput
  some: SavedSearchFilterWhereInput
}

input SavedSearchFilterWhereInput {
  AND: [SavedSearchFilterWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  name: StringFilter
  NOT: [SavedSearchFilterWhereInput!]
  operator: NullableStringFilter
  OR: [SavedSearchFilterWhereInput!]
  savedSearch: SavedSearchWhereInput
  updatedAt: DateTimeFilter
  user: UserWhereInput
  value: NullableStringFilter
  values: NullableStringFilter
}

input SavedSearchFilterWhereUniqueInput {
  id: String
}

input SavedSearchWhereInput {
  AND: [SavedSearchWhereInput!]
  createdAt: DateTimeFilter
  filters: SavedSearchFilterFilter
  id: StringFilter
  name: StringFilter
  NOT: [SavedSearchWhereInput!]
  OR: [SavedSearchWhereInput!]
  updatedAt: DateTimeFilter
  user: UserWhereInput
  version: IntFilter
}

input SavedSearchWhereUniqueInput {
  id: String
}

input SignedURLArgs {
  key: String!
  name: String!
  type: String!
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type UploadGroup {
  createdAt: DateTime!
  files(after: String, before: String, first: Int, last: Int, skip: Int): [File!]!
  id: String!
  isComplete: Boolean
  updatedAt: DateTime!
}

input UploadGroupCreateManyWithoutUserInput {
  connect: [UploadGroupWhereUniqueInput!]
  create: [UploadGroupCreateWithoutUserInput!]
}

input UploadGroupCreateOneWithoutFilesInput {
  connect: UploadGroupWhereUniqueInput
  create: UploadGroupCreateWithoutFilesInput
}

input UploadGroupCreateWithoutFilesInput {
  createdAt: DateTime
  id: String
  isComplete: Boolean
  isFailed: Boolean
  updatedAt: DateTime
  user: UserCreateOneWithoutUploadGroupsInput!
}

input UploadGroupCreateWithoutUserInput {
  createdAt: DateTime
  files: FileCreateManyWithoutUploadGroupInput
  id: String
  isComplete: Boolean
  isFailed: Boolean
  updatedAt: DateTime
}

input UploadGroupFilter {
  every: UploadGroupWhereInput
  none: UploadGroupWhereInput
  some: UploadGroupWhereInput
}

input UploadGroupOrderByInput {
  createdAt: OrderByArg
  id: OrderByArg
  isComplete: OrderByArg
  isFailed: OrderByArg
  updatedAt: OrderByArg
}

input UploadGroupWhereInput {
  AND: [UploadGroupWhereInput!]
  createdAt: DateTimeFilter
  files: FileFilter
  id: StringFilter
  isComplete: NullableBooleanFilter
  isFailed: NullableBooleanFilter
  NOT: [UploadGroupWhereInput!]
  OR: [UploadGroupWhereInput!]
  updatedAt: DateTimeFilter
  user: UserWhereInput
}

input UploadGroupWhereUniqueInput {
  id: String
}

type User {
  email: String!
  files(after: String, before: String, first: Int, last: Int, skip: Int): [File!]!
  firstName: String
  fullName: String!
  googleAccounts: [GoogleAccount!]!
  id: String!
  inviteCode: InviteCode
  isActive: Boolean!
  items(after: String, before: String, first: Int, last: Int, skip: Int): [Item!]!
  labels(after: String, before: String, first: Int, last: Int, orderBy: LabelOrderByInput, skip: Int): [Label!]!
  lastName: String
  role: String!
}

input UserCreateInput {
  createdAt: DateTime
  email: String
  files: FileCreateManyWithoutUserInput
  firstName: String
  googleAccounts: GoogleAccountCreateManyWithoutUserInput
  googleContacts: GoogleContactCreateManyWithoutUserInput
  id: String
  inviteCode: InviteCodeCreateOneWithoutUsersInput
  isActive: Boolean
  items: ItemCreateManyWithoutUserInput
  labels: LabelCreateManyWithoutUserInput
  lastName: String
  links: LinkCreateManyWithoutUserInput
  notes: NoteCreateManyWithoutUserInput
  role: String
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
  updatedAt: DateTime
  uploadGroups: UploadGroupCreateManyWithoutUserInput
}

input UserCreateOneWithoutFilesInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutFilesInput
}

input UserCreateOneWithoutGoogleAccountsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutGoogleAccountsInput
}

input UserCreateOneWithoutGoogleContactsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutGoogleContactsInput
}

input UserCreateOneWithoutItemsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutItemsInput
}

input UserCreateOneWithoutLabelsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutLabelsInput
}

input UserCreateOneWithoutLinksInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutLinksInput
}

input UserCreateOneWithoutNotesInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutNotesInput
}

input UserCreateOneWithoutSavedSearchesInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutSavedSearchesInput
}

input UserCreateOneWithoutSavedSearchFiltersInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutSavedSearchFiltersInput
}

input UserCreateOneWithoutUploadGroupsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutUploadGroupsInput
}

input UserCreateWithoutFilesInput {
  createdAt: DateTime
  email: String
  firstName: String
  googleAccounts: GoogleAccountCreateManyWithoutUserInput
  googleContacts: GoogleContactCreateManyWithoutUserInput
  id: String
  inviteCode: InviteCodeCreateOneWithoutUsersInput
  isActive: Boolean
  items: ItemCreateManyWithoutUserInput
  labels: LabelCreateManyWithoutUserInput
  lastName: String
  links: LinkCreateManyWithoutUserInput
  notes: NoteCreateManyWithoutUserInput
  role: String
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
  updatedAt: DateTime
  uploadGroups: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutGoogleAccountsInput {
  createdAt: DateTime
  email: String
  files: FileCreateManyWithoutUserInput
  firstName: String
  googleContacts: GoogleContactCreateManyWithoutUserInput
  id: String
  inviteCode: InviteCodeCreateOneWithoutUsersInput
  isActive: Boolean
  items: ItemCreateManyWithoutUserInput
  labels: LabelCreateManyWithoutUserInput
  lastName: String
  links: LinkCreateManyWithoutUserInput
  notes: NoteCreateManyWithoutUserInput
  role: String
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
  updatedAt: DateTime
  uploadGroups: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutGoogleContactsInput {
  createdAt: DateTime
  email: String
  files: FileCreateManyWithoutUserInput
  firstName: String
  googleAccounts: GoogleAccountCreateManyWithoutUserInput
  id: String
  inviteCode: InviteCodeCreateOneWithoutUsersInput
  isActive: Boolean
  items: ItemCreateManyWithoutUserInput
  labels: LabelCreateManyWithoutUserInput
  lastName: String
  links: LinkCreateManyWithoutUserInput
  notes: NoteCreateManyWithoutUserInput
  role: String
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
  updatedAt: DateTime
  uploadGroups: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutItemsInput {
  createdAt: DateTime
  email: String
  files: FileCreateManyWithoutUserInput
  firstName: String
  googleAccounts: GoogleAccountCreateManyWithoutUserInput
  googleContacts: GoogleContactCreateManyWithoutUserInput
  id: String
  inviteCode: InviteCodeCreateOneWithoutUsersInput
  isActive: Boolean
  labels: LabelCreateManyWithoutUserInput
  lastName: String
  links: LinkCreateManyWithoutUserInput
  notes: NoteCreateManyWithoutUserInput
  role: String
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
  updatedAt: DateTime
  uploadGroups: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutLabelsInput {
  createdAt: DateTime
  email: String
  files: FileCreateManyWithoutUserInput
  firstName: String
  googleAccounts: GoogleAccountCreateManyWithoutUserInput
  googleContacts: GoogleContactCreateManyWithoutUserInput
  id: String
  inviteCode: InviteCodeCreateOneWithoutUsersInput
  isActive: Boolean
  items: ItemCreateManyWithoutUserInput
  lastName: String
  links: LinkCreateManyWithoutUserInput
  notes: NoteCreateManyWithoutUserInput
  role: String
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
  updatedAt: DateTime
  uploadGroups: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutLinksInput {
  createdAt: DateTime
  email: String
  files: FileCreateManyWithoutUserInput
  firstName: String
  googleAccounts: GoogleAccountCreateManyWithoutUserInput
  googleContacts: GoogleContactCreateManyWithoutUserInput
  id: String
  inviteCode: InviteCodeCreateOneWithoutUsersInput
  isActive: Boolean
  items: ItemCreateManyWithoutUserInput
  labels: LabelCreateManyWithoutUserInput
  lastName: String
  notes: NoteCreateManyWithoutUserInput
  role: String
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
  updatedAt: DateTime
  uploadGroups: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutNotesInput {
  createdAt: DateTime
  email: String
  files: FileCreateManyWithoutUserInput
  firstName: String
  googleAccounts: GoogleAccountCreateManyWithoutUserInput
  googleContacts: GoogleContactCreateManyWithoutUserInput
  id: String
  inviteCode: InviteCodeCreateOneWithoutUsersInput
  isActive: Boolean
  items: ItemCreateManyWithoutUserInput
  labels: LabelCreateManyWithoutUserInput
  lastName: String
  links: LinkCreateManyWithoutUserInput
  role: String
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
  updatedAt: DateTime
  uploadGroups: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutSavedSearchesInput {
  createdAt: DateTime
  email: String
  files: FileCreateManyWithoutUserInput
  firstName: String
  googleAccounts: GoogleAccountCreateManyWithoutUserInput
  googleContacts: GoogleContactCreateManyWithoutUserInput
  id: String
  inviteCode: InviteCodeCreateOneWithoutUsersInput
  isActive: Boolean
  items: ItemCreateManyWithoutUserInput
  labels: LabelCreateManyWithoutUserInput
  lastName: String
  links: LinkCreateManyWithoutUserInput
  notes: NoteCreateManyWithoutUserInput
  role: String
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
  updatedAt: DateTime
  uploadGroups: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutSavedSearchFiltersInput {
  createdAt: DateTime
  email: String
  files: FileCreateManyWithoutUserInput
  firstName: String
  googleAccounts: GoogleAccountCreateManyWithoutUserInput
  googleContacts: GoogleContactCreateManyWithoutUserInput
  id: String
  inviteCode: InviteCodeCreateOneWithoutUsersInput
  isActive: Boolean
  items: ItemCreateManyWithoutUserInput
  labels: LabelCreateManyWithoutUserInput
  lastName: String
  links: LinkCreateManyWithoutUserInput
  notes: NoteCreateManyWithoutUserInput
  role: String
  savedSearches: SavedSearchCreateManyWithoutUserInput
  updatedAt: DateTime
  uploadGroups: UploadGroupCreateManyWithoutUserInput
}

input UserCreateWithoutUploadGroupsInput {
  createdAt: DateTime
  email: String
  files: FileCreateManyWithoutUserInput
  firstName: String
  googleAccounts: GoogleAccountCreateManyWithoutUserInput
  googleContacts: GoogleContactCreateManyWithoutUserInput
  id: String
  inviteCode: InviteCodeCreateOneWithoutUsersInput
  isActive: Boolean
  items: ItemCreateManyWithoutUserInput
  labels: LabelCreateManyWithoutUserInput
  lastName: String
  links: LinkCreateManyWithoutUserInput
  notes: NoteCreateManyWithoutUserInput
  role: String
  savedSearches: SavedSearchCreateManyWithoutUserInput
  savedSearchFilters: SavedSearchFilterCreateManyWithoutUserInput
  updatedAt: DateTime
}

input UserFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

input UserOrderByInput {
  createdAt: OrderByArg
  email: OrderByArg
  firstName: OrderByArg
  id: OrderByArg
  isActive: OrderByArg
  lastName: OrderByArg
  role: OrderByArg
  updatedAt: OrderByArg
}

input UserWhereInput {
  AND: [UserWhereInput!]
  createdAt: DateTimeFilter
  email: StringFilter
  files: FileFilter
  firstName: NullableStringFilter
  googleAccounts: GoogleAccountFilter
  googleContacts: GoogleContactFilter
  id: StringFilter
  inviteCode: InviteCodeWhereInput
  isActive: BooleanFilter
  items: ItemFilter
  labels: LabelFilter
  lastName: NullableStringFilter
  links: LinkFilter
  NOT: [UserWhereInput!]
  notes: NoteFilter
  OR: [UserWhereInput!]
  role: StringFilter
  savedSearches: SavedSearchFilter
  savedSearchFilters: SavedSearchFilterFilter
  updatedAt: DateTimeFilter
  uploadGroups: UploadGroupFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
}
