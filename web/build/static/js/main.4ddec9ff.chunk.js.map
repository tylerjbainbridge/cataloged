{"version":3,"sources":["serviceWorker.js","config.ts","components/GlobalModal.tsx","components/SelectContainer.tsx","hooks/usePaste.tsx","util/helpers.ts","hooks/usePrevious.tsx","hooks/useHotKey.jsx","components/CreateFiles.tsx","components/CreateLink.tsx","components/Auth.tsx","hooks/useAuth.tsx","components/SignOut.tsx","components/UploadProgress.tsx","components/Labels.tsx","components/Filter.tsx","graphql/note.ts","components/MarkdownEditor.jsx","graphql/link.ts","graphql/item.ts","hooks/useOptimisticDeleteItem.ts","hooks/useDebounce.tsx","components/Note.tsx","components/NoteModal.tsx","components/LazyImage.tsx","components/Click.tsx","components/SelectOnClick.tsx","components/FileModal.tsx","components/FileItem.tsx","components/LinkModal.tsx","components/LinkItem.tsx","components/NoteItem.tsx","components/Item.tsx","components/GridFeed.tsx","components/Feed.tsx","hooks/useVariables.tsx","routes/Dashboard.tsx","routes/Playground.tsx","routes/GoogleCallback.tsx","routes/SignIn.tsx","routes/ForceSignIn.tsx","ui/theme.ts","index.tsx","Router.tsx"],"names":["Boolean","window","location","hostname","match","ModalName","SelectContext","React","createContext","SelectContainer","children","items","initialSelectedMap","Map","getId","id","useState","selectedMap","updateSelectedMap","immutableUpdateMap","map","entries","isItemSelected","item","has","selectItem","set","deselectItem","delete","toggleItem","Provider","value","onToggleThunk","onSelectRangeThunk","newItem","lastItem","Array","from","values","size","lastItemIdx","findIndex","elem","newItemIdx","startIdx","endIdx","slice","forEach","selectRange","onResetAndSelectThunk","newSelectedMap","resetAndSelect","usePaste","onPaste","onPasteCallback","useRef","e","useEffect","document","getElementsByTagName","addEventListener","current","removeEventListener","randomString","Math","random","toString","substring","getFilterVariablesFromFormValues","search","labels","type","variables","_","length","GlobalModalContext","INITIAL_STATE","CREATE_FILES_MODAL","CREATE_LINK_MODAL","CREATE_NOTE_MODAL","FILTER_FEED_MODAL","VIEW_FILE_MODAL","useGlobalModal","modalName","useContext","openModal","closeModal","toggleModal","globalModalState","closeAll","isModalOpen","usePrevious","ref","_globalCallbacks","useHotKey","keybind","handler","isGlobal","shouldBind","Mousetrap","_originalStopCallback","prototype","stopCallback","element","combo","sequence","this","paused","call","bindGlobal","keys","callback","action","bind","i","init","handlerAsCallback","useCallback","preventDefault","mousetrap","prevShouldBind","unbind","UPLOAD_FILE_MUTATION","gql","GENERATE_SIGNED_URLS","CreateFiles","files","setFiles","isUploading","setIsUploading","fileCount","Object","fileVals","fileEntries","useMutation","refetchQueries","processFiles","isSubmitting","loading","isWorking","generateSignedUrls","a","async","s3Keys","file","name","signedURLArgs","idx","key","data","signedUrls","uploadGroup","Promise","all","s3PutUrl","fetch","method","body","headers","tempKey","originalFilename","uploadGroupId","event","returnValue","onDrop","acceptedFiles","reduce","p","c","clipboardData","blob","getAsFile","useDropzone","getRootProps","getInputProps","Tooltip","hasArrow","placement","label","aria-label","Button","cursor","variant","onClick","Icon","Modal","closeOnEsc","isOpen","scrollBehavior","onClose","height","Box","d","width","mb","justifyContent","alignItems","path","src","objectFit","mr","rounded","Text","verticalAlign","stopPropagation","rest","isLoading","isDisabled","color","CreateLinkSchema","yup","shape","href","url","required","CREATE_LINK_MUTATION","CreateLink","useForm","validationSchema","mode","getValues","setValue","handleSubmit","watch","register","errors","onCompleted","cleanup","createLink","pastedText","originalEvent","getData","onSubmit","display","defaultValue","target","GET_AUTH_USER","AuthContext","localStorageUser","localStorage","getItem","useAuth","SignOut","auth","signOut","UploadProgress","ITEM_LABEL_RESPONSE_FRAGMENT","CONNECT_LABEL_TO_ITEM_MUTATION","DISCONNECT_LABEL_FROM_ITEM_MUTATION","CREATE_LABEL_MUTATION","Labels","canAddLabels","initialSelectedLabels","selectedLabels","onSelectedLabelChange","setCursor","setSelectedLabels","isEditing","setIsEditing","firstFieldRef","useDisclosure","onOpen","user","refetchUser","isManagingOwnState","defaultValues","connectLabelToItem","connecting","disconnectLabelFromItem","createLabel","labelSet","filteredLabels","take","filter","find","existingLabel","toLowerCase","includes","addAction","l","itemId","Stack","flexDirection","alignContent","flexWrap","Popover","initialFocusRef","zIndex","returnFocus","persistentFocus","bg","spacing","shouldWrapChildren","onKeyDown","metaKey","onKeyUp","keyCode","FormControl","InputGroup","Input","pr","placeholder","h","Tag","variantColor","onMouseOver","icon","labelIdx","labelId","removeAction","INITIAL_VALUES","Filter","state","setState","formValues","get","getFormValuesFromFilterVariables","leftIcon","isCentered","closeOnOverlayClick","FormLabel","onChange","FormHelperText","Select","text","NOTE_FULL_FRAGMENT","CREATE_NOTE_MUTATION","UPDATE_NOTE_MUTATION","Prism","languages","markdown","extend","insertBefore","blockquote","pattern","alias","code","title","inside","punctuation","lookbehind","hr","list","variable","string","bold","italic","util","clone","DEFAULT_VALUE","MarkdownNode","styled","span","props","leaf","underlined","css","Leaf","attributes","MarkdownEditor","memo","editor","useMemo","withHistory","withReact","createEditor","renderLeaf","decorate","node","ranges","isText","getLength","token","content","t","tokens","tokenize","start","end","push","offset","ReactEditor","focus","autoFocus","LINK_FULL_FRAGMENT","UPDATE_LINK_MUTATION","REFRESH_LINK_META_MUTATION","ITEM_FULL_FRAGMENT","DELETE_ITEM_MUTATION","useOptimisticDeleteItem","optimisticResponse","__typename","deleteItem","update","cache","readQuery","query","FEED_QUERY","newListItems","writeQuery","useDebounce","func","timeMs","debounce","debouncedFunc","serializeToPlainText","nodes","n","Node","join","EMPTY_NOTE_VALUE","marks","Note","note","JSON","parse","raw","textRef","noteId","stringify","removeMarkdown","updateNote","debouncedUpdateNote","nextText","cancel","slateVal","NoteModal","setIsOpen","open","close","client","useApolloClient","createNote","readFragment","fragment","Spinner","mt","LazyImage","isReady","showSpinner","loadingContainerProps","placeholderIcon","fit","isImageLoaded","setIsImageLoaded","isBroken","setIsBroken","setDimensions","img","Image","onload","onerror","newProps","Click","debouncedSingleClick","onSingleClick","hasClickHandler","onDoubleClick","onMetaClick","onShiftClick","shiftKey","SelectOnClick","FileModal","maxWidth","isUploaded","fullUrl","pt","pb","FileItem","tooltip","clickProps","ITEM_ACTUAL_WIDTH","squareUrl","extension","LinkModal","link","linkId","updateLink","isUpdating","onError","console","log","refreshLinkMeta","isRefreshing","debouncedUpdateLink","prevValues","isEqual","isSaving","maxHeight","image","htmlFor","as","roundedLeft","roundedRight","FormErrorMessage","message","Textarea","description","LinkItem","fontSize","NoteItem","border","overflow","ITEM_WIDTH","Item","margin","padding","ItemHeader","ml","fontWeight","whiteSpace","style","textOverflow","formatRelative","Date","createdAt","ItemContentContainer","baseHoverState","menuHoverState","itemRef","onMouseEnter","onMouseLeave","position","roundedBottomRight","roundedBottomLeft","bottom","backgroundColor","background","opacity","IconButton","GridFeed","nextPage","SimpleGrid","minChildWidth","FeedContext","Feed","useLocalStorage","isLastPage","setIsLastPage","activeItemId","setActiveItemId","pageNum","setPage","paginationVariables","pageLength","setPageNum","skip","first","prevPage","usePagination","useQuery","notifyOnNetworkStatusChange","networkStatus","refetch","fetchMore","prevQuery","last","initialLoad","updateQuery","prev","fetchMoreResult","isLastItem","minWidth","filterVariables","bottomOffset","onEnter","DashboardContainer","div","Dashboard","GET_MOST_RECENT_ITEM","Playground","mostRecentItem","useMostRecentItem","GOOGLE_SIGN_IN_MUTATION","GoogleCallback","devMode","setToken","queryString","googleSignIn","error","to","GET_GOOGLE_URL","ForceSignIn","replace","googleURL","theme","colors","lightgrey","authLink","setContext","authorization","InMemoryCache","dataIdFromObject","o","concat","createUploadLink","uri","ApolloClient","appNode","fetchPolicy","setItem","me","removeItem","setGlobalModalState","updateModal","k","ThemeProvider","Root","exact","component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ddec9ff.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const GRAPHQL_ENDPOINT =\n  process.env.NODE_ENV === 'development' ? 'http://localhost:5000' : '/graphql';\n","import React, { FunctionComponent } from 'react';\n\nexport enum ModalName {\n  CREATE_FILES_MODAL,\n  CREATE_LINK_MODAL,\n  CREATE_NOTE_MODAL,\n  FILTER_FEED_MODAL,\n  VIEW_FILE_MODAL,\n}\n\ntype ContextProps = {\n  globalModalState: {\n    [key in ModalName]: boolean;\n  };\n  openModal: (modalName: ModalName) => any;\n  closeModal: (modalName: ModalName) => any;\n  toggleModal: (modalName: ModalName) => any;\n  closeAll: () => any;\n};\n\nexport const GlobalModalContext = React.createContext<ContextProps>(\n  {} as ContextProps,\n);\n\nconst INITIAL_STATE = {\n  [ModalName.CREATE_FILES_MODAL]: false,\n  [ModalName.CREATE_LINK_MODAL]: false,\n  [ModalName.CREATE_NOTE_MODAL]: false,\n  [ModalName.FILTER_FEED_MODAL]: false,\n  [ModalName.VIEW_FILE_MODAL]: false,\n};\n\nexport const GlobalModalProvider: FunctionComponent = ({ children }) => {\n  const [globalModalState, setGlobalModalState] = React.useState(INITIAL_STATE);\n\n  const updateModal = (modalName: ModalName, isOpen: boolean) =>\n    setGlobalModalState({\n      ...INITIAL_STATE,\n      [modalName]: isOpen,\n    });\n\n  const openModal = (modalName: ModalName) => updateModal(modalName, true);\n  const closeModal = (modalName: ModalName) => updateModal(modalName, false);\n  const toggleModal = (modalName: ModalName) =>\n    setGlobalModalState(state => ({\n      ...INITIAL_STATE,\n      [modalName]: !state[modalName],\n    }));\n\n  const closeAll = () =>\n    setGlobalModalState(\n      // @ts-ignore\n      Object.keys(globalModalState).reduce(\n        (p, k) => ({\n          ...p,\n          [k]: false,\n        }),\n        {} as {\n          [k in ModalName]: false;\n        },\n      ),\n    );\n\n  return (\n    <GlobalModalContext.Provider\n      value={{\n        globalModalState,\n        openModal,\n        closeModal,\n        toggleModal,\n        closeAll,\n      }}\n    >\n      {children}\n    </GlobalModalContext.Provider>\n  );\n};\n\nexport const useGlobalModal = (modalName: ModalName) => {\n  const {\n    openModal,\n    closeModal,\n    toggleModal,\n    globalModalState,\n    closeAll,\n  } = React.useContext(GlobalModalContext);\n\n  return {\n    closeAll,\n    openModal: () => openModal(modalName),\n    closeModal: () => closeModal(modalName),\n    toggleModal: () => toggleModal(modalName),\n    isModalOpen: globalModalState[modalName],\n  };\n};\n","import React, { useState } from 'react';\n\nexport const SelectContext = React.createContext<{ [key: string]: any }>({});\n\nexport interface SelectContainerProps {\n  children: any;\n  items?: { id: string; [key: string]: any }[];\n  getId?: Function;\n  initialSelectedMap?: Map<string, any>;\n}\n\nexport interface Item {\n  [key: string]: any;\n}\n\nexport const SelectContainer = ({\n  children,\n  items,\n  initialSelectedMap = new Map(),\n  getId = ({ id }: { id: string }) => id,\n}: SelectContainerProps) => {\n  const [selectedMap, updateSelectedMap] = useState(initialSelectedMap);\n\n  const immutableUpdateMap = (map: Map<any, any>) =>\n    updateSelectedMap(new Map(map.entries()));\n\n  const isItemSelected = (item: Item) => {\n    const id = getId(item);\n    return selectedMap.has(id);\n  };\n\n  const selectItem = (item: Item) => {\n    const id = getId(item);\n    selectedMap.set(id, item);\n    immutableUpdateMap(selectedMap);\n  };\n\n  const resetAndSelect = (item: Item) => {\n    const newSelectedMap = new Map();\n    const id = getId(item);\n    newSelectedMap.set(id, item);\n    immutableUpdateMap(newSelectedMap);\n  };\n\n  const selectRange = (newItem: Item) => {\n    if (!items) return;\n\n    const lastItem = Array.from(selectedMap.values())[selectedMap.size - 1];\n\n    const lastItemIdx = items.findIndex(\n      (elem: Item) => getId(elem) === getId(lastItem),\n    );\n\n    const newItemIdx = items.findIndex(\n      (elem: Item) => getId(elem) === getId(newItem),\n    );\n\n    const [startIdx, endIdx] =\n      lastItemIdx > newItemIdx\n        ? [newItemIdx, lastItemIdx]\n        : [lastItemIdx, newItemIdx];\n\n    [newItem, ...items.slice(startIdx, endIdx)].forEach((item: Item) => {\n      const id = getId(item);\n      selectedMap.set(id, item);\n    });\n\n    immutableUpdateMap(selectedMap);\n  };\n\n  const deselectItem = (item: Item) => {\n    const id = getId(item);\n    selectedMap.delete(id);\n    immutableUpdateMap(selectedMap);\n  };\n\n  const toggleItem = (item: Item) => {\n    if (isItemSelected(item)) deselectItem(item);\n    else selectItem(item);\n  };\n\n  const onToggleThunk = (item: Item) => () => toggleItem(item);\n  const onSelectRangeThunk = (item: Item) => () => selectRange(item);\n  const onResetAndSelectThunk = (item: Item) => () => {\n    if (isItemSelected(item)) return immutableUpdateMap(new Map());\n    return resetAndSelect(item);\n  };\n\n  return (\n    <SelectContext.Provider\n      value={{\n        selectedMap,\n        isItemSelected,\n        selectItem,\n        deselectItem,\n        toggleItem,\n        onToggleThunk,\n        onSelectRangeThunk,\n        onResetAndSelectThunk,\n      }}\n    >\n      {children}\n    </SelectContext.Provider>\n  );\n};\n","import { useEffect, useCallback, useRef } from 'react';\n\nexport const usePaste = ({ onPaste }: { onPaste: Function }) => {\n  const onPasteCallback = useRef((e: any) => {\n    if (onPaste) onPaste(e);\n  });\n\n  useEffect(() => {\n    // @ts-ignore\n    document\n      .getElementsByTagName('body')[0]\n      .addEventListener('paste', onPasteCallback.current);\n    return () => {\n      // @ts-ignore\n      document\n        .getElementsByTagName('body')[0]\n        .removeEventListener('paste', onPasteCallback.current);\n    };\n  }, []);\n};\n","import _ from 'lodash';\n\nexport const randomString = (): string =>\n  Math.random()\n    .toString(36)\n    .substring(2, 15) +\n  Math.random()\n    .toString(36)\n    .substring(2, 15);\n\nexport const getFilterVariablesFromFormValues = ({\n  search,\n  labels,\n  type,\n}: {\n  type: string;\n  search: string;\n  labels: any;\n}) => {\n  const variables = {};\n\n  _.set(variables, 'search', search);\n\n  _.set(variables, 'type', type !== 'all' ? type : null);\n\n  _.set(\n    variables,\n    `where.labels.${labels.length ? 'some' : 'none'}.id.in`,\n    labels.map(({ id }: { id: string }) => id),\n  );\n\n  return variables;\n};\n\nexport const getFormValuesFromFilterVariables = (variables: any, user: any) => {\n  const labels = _.get(variables, 'where.labels.some.id.in', []);\n\n  return {\n    search: variables.search,\n    type: variables.type || 'all',\n    labels: labels.map((id: string) =>\n      user.labels.find((label: any) => label.id === id),\n    ),\n  };\n};\n","import { useRef, useEffect } from 'react';\n\nexport const usePrevious = (value: any): any => {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n};\n","import React, { useEffect } from 'react';\nimport Mousetrap from 'mousetrap';\nimport { usePrevious } from './usePrevious';\n\nconst isMousetrapExtended = false;\nconst _globalCallbacks = {};\n\nexport const useHotKey = (\n  keybind,\n  handler,\n  { isGlobal = false, shouldBind = true, ref = null } = {},\n) => {\n  useEffect(() => {\n    if (!isMousetrapExtended) {\n      // Took this code from the janky mouse trap docs\n      (function(Mousetrap) {\n        var _originalStopCallback = Mousetrap.prototype.stopCallback;\n\n        // @ts-ignore\n\n        Mousetrap.prototype.stopCallback = function(\n          e,\n          element,\n          combo,\n          sequence,\n        ) {\n          var self = this;\n\n          if (self.paused) {\n            return true;\n          }\n\n          // @ts-ignore\n          if (_globalCallbacks[combo] || _globalCallbacks[sequence]) {\n            return false;\n          }\n\n          return _originalStopCallback.call(self, e, element, combo);\n        };\n\n        // @ts-ignore\n        Mousetrap.prototype.bindGlobal = function(keys, callback, action) {\n          var self = this;\n          self.bind(keys, callback, action);\n\n          if (keys instanceof Array) {\n            for (var i = 0; i < keys.length; i++) {\n              // @ts-ignore\n\n              _globalCallbacks[keys[i]] = true;\n            }\n            return;\n          }\n          // @ts-ignore\n\n          _globalCallbacks[keys] = true;\n        };\n\n        Mousetrap.init();\n      })(Mousetrap);\n    }\n  }, []);\n\n  const handlerAsCallback = React.useCallback(\n    e => {\n      if (e.preventDefault) e.preventDefault();\n      handler();\n    },\n    [handler],\n  );\n\n  const { current: mousetrap } = React.useRef(\n    // ref ? new Mousetrap(ref) :\n    Mousetrap,\n  );\n\n  const prevShouldBind = usePrevious(shouldBind);\n\n  const bind = () => {\n    mousetrap[isGlobal ? 'bindGlobal' : 'bind'](keybind, handlerAsCallback);\n  };\n\n  const unbind = () => {\n    mousetrap.unbind(keybind);\n  };\n\n  useEffect(() => {\n    return () => {\n      unbind();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (shouldBind) bind();\n    else if (!shouldBind && prevShouldBind) unbind();\n  }, [shouldBind]);\n};\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalCloseButton,\n  ModalBody,\n  ModalHeader,\n  ModalContent,\n  ModalFooter,\n  Box,\n  Button,\n  Text,\n  Icon,\n  Image,\n  Tooltip,\n} from '@chakra-ui/core';\nimport { useMutation, useApolloClient } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { usePaste } from '../hooks/usePaste';\nimport { randomString } from '../util/helpers';\nimport { SpecialFile } from '../util/aws';\nimport { useGlobalModal, ModalName } from './GlobalModal';\nimport { useHotKey } from '../hooks/useHotKey';\nimport { processFiles_processFiles } from '../graphql/__generated__/processFiles';\n\nconst UPLOAD_FILE_MUTATION = gql`\n  mutation processFiles($uploadGroupId: String) {\n    processFiles(uploadGroupId: $uploadGroupId) {\n      id\n      squareUrl\n      fullUrl\n    }\n  }\n`;\n\nconst GENERATE_SIGNED_URLS = gql`\n  mutation generateSignedUrls($signedURLArgs: [SignedURLArgs!]) {\n    generateSignedUrls(signedURLArgs: $signedURLArgs) {\n      signedUrls\n      uploadGroup {\n        id\n      }\n    }\n  }\n`;\n\nexport const CreateFiles = () => {\n  const [files, setFiles] = useState<{\n    [key: string]: SpecialFile;\n  }>({});\n\n  const [isUploading, setIsUploading] = useState(false);\n\n  const { isModalOpen, openModal, toggleModal, closeModal } = useGlobalModal(\n    ModalName.CREATE_FILES_MODAL,\n  );\n\n  useHotKey('c f', toggleModal);\n\n  const fileCount = Object.keys(files).length;\n  const fileVals = Object.values(files);\n  const fileEntries = Object.entries(files);\n\n  const [processFiles, { loading: isSubmitting }] = useMutation<\n    processFiles_processFiles\n  >(UPLOAD_FILE_MUTATION, {\n    refetchQueries: ['feed'],\n  });\n\n  const isWorking = isUploading || isSubmitting;\n\n  const [generateSignedUrls] = useMutation(GENERATE_SIGNED_URLS);\n\n  useEffect(() => {\n    (async () => {\n      if (isUploading) {\n        const s3Keys = fileVals.map(file => `temp/${file.id}-${file.name}`);\n\n        try {\n          const {\n            data: {\n              generateSignedUrls: { signedUrls, uploadGroup },\n            },\n          } = await generateSignedUrls({\n            variables: {\n              signedURLArgs: fileVals.map(({ type, name }, idx) => ({\n                name,\n                key: s3Keys[idx],\n                type: type,\n              })),\n            },\n          });\n\n          await Promise.all(\n            signedUrls.map(async (s3PutUrl: any, idx: number) => {\n              const file = fileVals[idx];\n              const key = s3Keys[idx];\n\n              await fetch(s3PutUrl, {\n                method: 'PUT',\n                body: file,\n                headers: {\n                  'Access-Control-Allow-Headers': 'Content-Type',\n                  'Content-Type': file.type,\n                },\n              });\n\n              return { tempKey: key, originalFilename: file.name };\n            }),\n          );\n\n          setIsUploading(false);\n          closeModal();\n          setFiles({});\n\n          await processFiles({ variables: { uploadGroupId: uploadGroup.id } });\n        } catch (e) {\n          setIsUploading(false);\n        }\n      }\n    })();\n  }, [isUploading]);\n\n  useEffect(() => {\n    const handler = (event: any) => {\n      event.preventDefault();\n      event.returnValue = '';\n    };\n\n    if (isWorking) {\n      window.addEventListener('beforeunload', handler);\n    } else {\n      window.removeEventListener('beforeunload', handler);\n    }\n\n    return () => {\n      window.removeEventListener('beforeunload', handler);\n    };\n  }, [isWorking]);\n\n  const onDrop = useCallback(\n    acceptedFiles => {\n      setFiles({\n        ...files,\n        ...acceptedFiles.reduce(\n          (p: { [key: string]: SpecialFile }, c: SpecialFile) => {\n            const id = randomString();\n            c.id = id;\n\n            return {\n              ...p,\n              [id]: c,\n            };\n          },\n          {},\n        ),\n      });\n    },\n    [files],\n  );\n\n  const onPaste = async (e: any) => {\n    const { items } = e.clipboardData;\n\n    for (let i = 0; i < items.length; i++) {\n      const item = e.clipboardData.items[i];\n      const blob = item.getAsFile();\n\n      if (blob) {\n        const id = randomString();\n\n        blob.id = id;\n\n        setFiles({\n          ...files,\n          [id]: blob,\n        });\n      }\n    }\n  };\n\n  usePaste({ onPaste });\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n  return (\n    <>\n      <Tooltip\n        hasArrow\n        placement=\"bottom\"\n        label=\"or press c + f\"\n        aria-label=\"Add file(s)\"\n      >\n        <Button cursor=\"pointer\" variant=\"solid\" onClick={openModal}>\n          <Icon name=\"attachment\" />\n        </Button>\n      </Tooltip>\n      <Modal\n        closeOnEsc={false}\n        size=\"600px\"\n        isOpen={isModalOpen}\n        scrollBehavior=\"inside\"\n        onClose={() => {\n          closeModal();\n          setFiles({});\n        }}\n      >\n        <ModalOverlay />\n        <ModalContent height=\"80%\">\n          <ModalHeader>Upload files</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody {...getRootProps()}>\n            <input {...getInputProps()} />\n            {!!fileCount && (\n              <Box d=\"block\">\n                {fileEntries.map(([key, file]) => (\n                  <Box\n                    key={key}\n                    width=\"100%\"\n                    d=\"flex\"\n                    mb={15}\n                    justifyContent=\"space-between\"\n                  >\n                    <Box d=\"flex\" alignItems=\"center\" width=\"50%\">\n                      <Image\n                        key={file.path}\n                        src={\n                          'https://react.semantic-ui.com/images/wireframe/image.png' ||\n                          URL.createObjectURL(file)\n                        }\n                        objectFit=\"cover\"\n                        size=\"40px\"\n                        mr=\"15px\"\n                        rounded=\"lg\"\n                      />\n                      <Text>{file.name}</Text>\n                    </Box>\n                    <Box d=\"flex\" verticalAlign=\"middle\">\n                      {!isWorking && (\n                        <Button\n                          onClick={e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n\n                            const { [file.id]: temp, ...rest } = files;\n\n                            setFiles(rest);\n                          }}\n                        >\n                          Remove\n                        </Button>\n                      )}\n                    </Box>\n                  </Box>\n                ))}\n              </Box>\n            )}\n            {!fileCount && (\n              <Box>\n                <Text>Click, drag, or paste here</Text>\n              </Box>\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              isLoading={isWorking}\n              isDisabled={!fileCount}\n              onClick={async () => {\n                setIsUploading(true);\n              }}\n              color={!fileCount ? 'yellow' : 'green'}\n            >\n              <Box alignItems=\"center\">\n                <Icon name=\"add\" />{' '}\n                {!fileCount ? 'Waiting for images...' : 'Add'}\n              </Box>\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","import React, { useCallback, useState, useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport * as yup from 'yup';\nimport { usePaste } from '../hooks/usePaste';\n\nimport {\n  Modal,\n  ModalOverlay,\n  ModalCloseButton,\n  ModalBody,\n  ModalHeader,\n  ModalContent,\n  ModalFooter,\n  Box,\n  Button,\n  Text,\n  Icon,\n  Tooltip,\n} from '@chakra-ui/core';\nimport { useGlobalModal, ModalName } from './GlobalModal';\nimport { useHotKey } from '../hooks/useHotKey';\n\nconst CreateLinkSchema = yup.object().shape({\n  href: yup\n    .string()\n    .url('Invalid URL')\n    .required('Required'),\n});\n\nconst CREATE_LINK_MUTATION = gql`\n  mutation createLink($href: String!) {\n    createLink(href: $href) {\n      id\n      href\n    }\n  }\n`;\n\nexport const CreateLink = () => {\n  const {\n    getValues,\n    setValue,\n    handleSubmit,\n    watch,\n    register,\n    errors,\n  } = useForm({\n    validationSchema: CreateLinkSchema,\n    mode: 'onBlur',\n  });\n\n  watch('href');\n\n  const { href } = getValues();\n\n  const { isModalOpen, openModal, toggleModal, closeModal } = useGlobalModal(\n    ModalName.CREATE_LINK_MODAL,\n  );\n\n  useHotKey('c l', toggleModal);\n\n  const [createLink, { loading }] = useMutation(CREATE_LINK_MUTATION, {\n    variables: { href },\n    refetchQueries: ['feed'],\n    onCompleted: () => cleanup(),\n  });\n\n  const onPaste = (e: any) => {\n    const pastedText = (e.originalEvent || e).clipboardData.getData(\n      'text/plain',\n    );\n\n    if (pastedText) {\n      setValue('href', pastedText);\n    }\n  };\n\n  usePaste({ onPaste });\n\n  const cleanup = () => {\n    closeModal();\n    setValue('href', '');\n  };\n\n  return (\n    <>\n      <Tooltip\n        hasArrow\n        placement=\"bottom\"\n        label=\"or press c + l\"\n        aria-label=\"Add link\"\n      >\n        <Button cursor=\"pointer\" variant=\"solid\" onClick={openModal}>\n          <Icon name=\"link\" />\n        </Button>\n      </Tooltip>\n\n      <Modal\n        onClose={cleanup}\n        scrollBehavior=\"inside\"\n        closeOnEsc={false}\n        isOpen={isModalOpen}\n      >\n        <ModalOverlay />\n\n        <ModalContent height=\"250px\">\n          <ModalHeader>Paste link</ModalHeader>\n          <ModalCloseButton />\n\n          <ModalBody>\n            <form\n              onSubmit={handleSubmit(async () => {\n                await createLink();\n              })}\n            >\n              <Box display=\"none\">\n                <input name=\"href\" defaultValue=\"\" ref={register} />\n                {errors.href && <Text color=\"red\">{errors?.href}</Text>}\n              </Box>\n\n              {href && (\n                <Box width=\"100%\">\n                  <a href={href} target=\"_blank\">\n                    {href}\n                  </a>\n                </Box>\n              )}\n            </form>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              isLoading={loading}\n              isDisabled={!href}\n              onClick={async () => {\n                if (!loading) {\n                  await createLink();\n                }\n              }}\n              color={!href ? 'yellow' : 'green'}\n            >\n              <Box alignItems=\"center\">\n                <Icon name=\"add\" /> {!href ? 'Waiting for link...' : 'Add'}\n              </Box>\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, useEffect, SetStateAction, Dispatch } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { getAuthUser_me } from '../graphql/__generated__/getAuthUser';\nimport { googleSignIn_googleSignIn } from '../graphql/__generated__/googleSignIn';\n\nconst GET_AUTH_USER = gql`\n  query getAuthUser {\n    me {\n      id\n      fullName\n      email\n\n      labels {\n        id\n        name\n      }\n    }\n  }\n`;\n\ntype ContextProps = {\n  user: getAuthUser_me;\n  token: googleSignIn_googleSignIn['token'] | null;\n  setToken: Dispatch<SetStateAction<string | null>>;\n  signOut: Function;\n  refetchUser: () => Promise<any>;\n};\n\nexport const AuthContext = React.createContext<ContextProps>(\n  {} as ContextProps,\n);\n\nconst localStorageUser = localStorage.getItem('user');\n\nconst getParsedUser = (): getAuthUser_me | null =>\n  localStorageUser ? JSON.parse(localStorageUser) : null;\n\nexport const Auth = ({ children }: { children: JSX.Element }) => {\n  const { data, loading, refetch } = useQuery(GET_AUTH_USER, {\n    fetchPolicy: 'network-only',\n  });\n\n  const [token, setToken] = useState<googleSignIn_googleSignIn['token'] | null>(\n    localStorage.getItem('token'),\n  );\n\n  const signOut = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    window.location.replace('/');\n  };\n\n  useEffect(() => {\n    if (token) {\n      localStorage.setItem('token', token);\n      if (!data || data.me) refetch();\n    } else if (!loading) {\n      localStorage.removeItem('token');\n    }\n  }, [token]);\n\n  useEffect(() => {\n    if (data && data.me) {\n      localStorage.setItem('user', JSON.stringify(data.me));\n    } else if (!loading) {\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n    }\n  }, [loading]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: data ? data.me : getParsedUser(),\n        token,\n        setToken,\n        refetchUser: refetch,\n        signOut,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { AuthContext } from '../components/Auth';\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n","import React from 'react';\nimport { useAuth } from '../hooks/useAuth';\nimport { Button } from '@chakra-ui/core';\n\nexport const SignOut = () => {\n  const auth = useAuth();\n\n  return (\n    <Button\n      cursor=\"pointer\"\n      onClick={() => {\n        if (auth.signOut) auth.signOut();\n      }}\n    >\n      Sign out\n    </Button>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useQuery, useApolloClient } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport _ from 'lodash';\nimport { Box, Icon, Text } from '@chakra-ui/core';\nimport { usePrevious } from '../hooks/usePrevious';\n\nconst GET_UPLOAD_GROUPS = gql`\n  query getUploadGroups {\n    uploadGroups {\n      id\n      isComplete\n\n      files {\n        id\n        name\n        extension\n        isUploaded\n      }\n    }\n  }\n`;\n\nexport const UploadProgress = () => {\n  return null;\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const { data } = useQuery(GET_UPLOAD_GROUPS, {\n    pollInterval: 1000 * 1,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const client = useApolloClient();\n\n  const uploadGroups = _.get(data, 'uploadGroups', []);\n\n  const prevUploadGroups = usePrevious(uploadGroups);\n\n  useEffect(() => {\n    window.onbeforeunload = () => {\n      if (uploadGroups.length) {\n        return 'Data may be lost if you leave the page, are you sure?';\n      }\n    };\n  });\n\n  useEffect(() => {\n    if (!prevUploadGroups && uploadGroups.length) {\n      setIsMenuOpen(true);\n    } else if (\n      prevUploadGroups &&\n      prevUploadGroups.length &&\n      !uploadGroups.length\n    ) {\n      setTimeout(\n        () => async () => await client.reFetchObservableQueries(),\n        1000,\n      );\n    }\n  }, [uploadGroups.length]);\n\n  if (!uploadGroups.length && !isMenuOpen) return null;\n\n  const files = uploadGroups.reduce(\n    (p: any[], c: any) => [...p, ...c.files],\n    [],\n  );\n\n  const completedFiles = files.filter((file: any) => file.isUploaded);\n\n  return (\n    <Box\n      position=\"fixed\"\n      zIndex={1000}\n      backgroundColor=\"white\"\n      margin={20}\n      width={400}\n      height={200}\n      bottom={0}\n      padding={0}\n      left={0}\n      overflowY=\"hidden\"\n    >\n      <Box\n        backgroundColor=\"#E0E1EC\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        height={50}\n        margin={0}\n      >\n        <Text style={{ margin: 0 }}>\n          Completed {completedFiles.length} of {files.length}\n        </Text>\n        {completedFiles.length === files.length && (\n          <Icon onClick={() => setIsMenuOpen(false)} name=\"close\" />\n        )}\n      </Box>\n      <Box\n        margin={0}\n        paddingLeft={10}\n        paddingRight={10}\n        paddingBottom={60}\n        overflow=\"auto\"\n        height=\"100%\"\n      >\n        {_.orderBy(files, ({ isUploaded }) => !isUploaded).map((file: any) => (\n          <Box style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <span>\n              {file.name}\n              {file.extension}\n            </span>\n            {file.isUploaded ? (\n              <Icon color=\"green\" name=\"check\" />\n            ) : (\n              <Icon name=\"spinner\" />\n            )}\n          </Box>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport FocusLock from 'react-focus-lock';\nimport _ from 'lodash';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport {\n  Input,\n  Tag,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverArrow,\n  InputRightElement,\n  FormControl,\n  Icon,\n  Stack,\n  TagIcon,\n  TagLabel,\n  Button,\n  InputGroup,\n  useDisclosure,\n} from '@chakra-ui/core';\nimport { useAuth } from '../hooks/useAuth';\n\nconst ITEM_LABEL_RESPONSE_FRAGMENT = gql`\n  fragment ItemLabelResponseFragment on Item {\n    id\n\n    labels {\n      id\n      name\n    }\n  }\n`;\n\nconst CONNECT_LABEL_TO_ITEM_MUTATION = gql`\n  mutation connectLabelToItem($name: String!, $itemId: String!) {\n    connectLabelToItem(name: $name, itemId: $itemId) {\n      ...ItemLabelResponseFragment\n    }\n  }\n\n  ${ITEM_LABEL_RESPONSE_FRAGMENT}\n`;\n\nconst DISCONNECT_LABEL_FROM_ITEM_MUTATION = gql`\n  mutation disconnectLabelFromItem($labelId: String!, $itemId: String!) {\n    disconnectLabelFromItem(labelId: $labelId, itemId: $itemId) {\n      ...ItemLabelResponseFragment\n    }\n  }\n\n  ${ITEM_LABEL_RESPONSE_FRAGMENT}\n`;\n\nconst CREATE_LABEL_MUTATION = gql`\n  mutation createLabel($name: String!) {\n    createLabel(name: $name) {\n      # user\n      id\n\n      labels {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const Labels = ({\n  item = null,\n  canAddLabels = true,\n  selectedLabels: initialSelectedLabels,\n  onSelectedLabelChange,\n}: {\n  item?: any;\n  selectedLabels?: any[];\n  canAddLabels?: boolean;\n  onSelectedLabelChange?: Function;\n}) => {\n  const [cursor, setCursor] = useState(0);\n\n  // Only relevant when managing it's own state.<\n  const [selectedLabels, setSelectedLabels] = useState<any[]>([]);\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const firstFieldRef = useRef(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { user, refetchUser } = useAuth();\n\n  const isManagingOwnState = !item;\n\n  useEffect(() => {\n    if (initialSelectedLabels) setSelectedLabels(initialSelectedLabels);\n  }, []);\n\n  useEffect(() => {\n    if (onSelectedLabelChange && selectedLabels !== initialSelectedLabels)\n      onSelectedLabelChange(selectedLabels);\n  }, [selectedLabels && selectedLabels.length]);\n\n  const { getValues, setValue, register, watch } = useForm<{ search: string }>({\n    defaultValues: { search: '' },\n  });\n\n  const [connectLabelToItem, { loading: connecting }] = useMutation(\n    CONNECT_LABEL_TO_ITEM_MUTATION,\n    {\n      onCompleted: async () => {\n        if (refetchUser) await refetchUser();\n        setValue('search', '');\n      },\n    },\n  );\n\n  const [disconnectLabelFromItem] = useMutation(\n    DISCONNECT_LABEL_FROM_ITEM_MUTATION,\n  );\n\n  const [createLabel] = useMutation(CREATE_LABEL_MUTATION);\n\n  const { search } = getValues();\n\n  const labelSet = isManagingOwnState ? selectedLabels : item.labels;\n\n  const filteredLabels = _.take(\n    user.labels.filter(({ name }: { name: string }) => {\n      return (\n        !labelSet.find(\n          (existingLabel: { name: string }) => existingLabel.name === name,\n        ) &&\n        // @ts-ignore\n        name.toLowerCase().includes(search.toLowerCase())\n      );\n    }),\n    4,\n  );\n\n  // Rerender each time\n  watch('search');\n\n  useEffect(() => {\n    setCursor(0);\n  }, [search]);\n\n  useEffect(() => {\n    if (cursor > filteredLabels.length - 1) {\n      setCursor(filteredLabels.length - 1);\n    }\n  }, [connecting]);\n\n  useEffect(() => {\n    if (isOpen && !isEditing) setIsEditing(true);\n    else if (!isOpen && isEditing) setIsEditing(false);\n  }, [isOpen]);\n\n  const addAction = async (name: string) => {\n    if (isManagingOwnState) {\n      let label = user.labels.find((l: any) => l.name === name);\n\n      if (!label) {\n        const { data } = await createLabel({ variables: { name } });\n        label = data.createLabel.labels.find((l: any) => l.name === name);\n      }\n\n      setSelectedLabels([...selectedLabels, label]);\n      setValue('search', '');\n    } else {\n      connectLabelToItem({\n        variables: {\n          name,\n          itemId: item.id,\n        },\n      });\n    }\n  };\n\n  const removeAction = ({ id, name }: { id: string; name: string }) => {\n    if (isManagingOwnState) {\n      const labelIdx = selectedLabels.findIndex(label => label.name === name);\n\n      setSelectedLabels([\n        ...selectedLabels.slice(0, labelIdx),\n        ...selectedLabels.slice(labelIdx + 1),\n      ]);\n    } else {\n      disconnectLabelFromItem({\n        variables: { labelId: id, itemId: item.id },\n      });\n    }\n  };\n\n  const onKeyDown = (event: any) => {\n    if (event.metaKey && event.key === 'Enter' && search) {\n      addAction(search);\n    } else if (event.key === 'Enter' && filteredLabels[cursor]) {\n      addAction(filteredLabels[cursor].name);\n    }\n  };\n\n  const onKeyUp = (event: any) => {\n    if (event.keyCode === 38) {\n      if (cursor > 0) {\n        setCursor(cursor - 1);\n      } else {\n        setCursor(filteredLabels.length - 1);\n      }\n    } else if (event.keyCode === 40) {\n      if (cursor < filteredLabels.length - 1) {\n        setCursor(cursor + 1);\n      } else {\n        setCursor(0);\n      }\n    }\n  };\n\n  const createFromSearch = () => !connecting && addAction(search);\n\n  return (\n    <Stack\n      d=\"flex\"\n      flexDirection=\"row\"\n      alignItems=\"flex-start\"\n      alignContent=\"flex-start\"\n      flexWrap=\"wrap\"\n    >\n      <Popover\n        placement=\"bottom\"\n        isOpen={isOpen}\n        initialFocusRef={firstFieldRef}\n        onOpen={onOpen}\n        onClose={() => {\n          setValue('search', '');\n          setCursor(0);\n          if (onClose) onClose();\n        }}\n      >\n        {canAddLabels && (\n          <PopoverTrigger>\n            <Button\n              size=\"xs\"\n              height=\"25px\"\n              onClick={onOpen}\n              aria-label=\"add labels\"\n              variant=\"outline\"\n              mr={2}\n              cursor=\"pointer\"\n            >\n              <Icon size=\"10px\" name=\"add\" />\n            </Button>\n          </PopoverTrigger>\n        )}\n        <PopoverContent zIndex={4} p={5}>\n          <FocusLock returnFocus persistentFocus={false}>\n            <PopoverArrow bg=\"white\" />\n            <Stack\n              spacing={4}\n              shouldWrapChildren\n              onKeyDown={onKeyDown}\n              onKeyUp={onKeyUp}\n            >\n              <FormControl>\n                <InputGroup size=\"md\">\n                  <Input\n                    pr=\"4.5rem\"\n                    placeholder=\"Label\"\n                    name=\"search\"\n                    ref={register}\n                  />\n                  <InputRightElement width=\"4.5rem\">\n                    <Button\n                      size=\"sm\"\n                      h=\"1.75rem\"\n                      isLoading={connecting}\n                      onClick={createFromSearch}\n                    >\n                      Add\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              {!!filteredLabels.length && (\n                <Stack spacing={2}>\n                  {filteredLabels.map(({ name }, idx) => (\n                    <Tag\n                      size=\"md\"\n                      key={name}\n                      cursor=\"pointer\"\n                      variantColor={idx === cursor ? 'cyan' : 'gray'}\n                      onMouseOver={() => setCursor(idx)}\n                      onClick={e => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        addAction(name);\n                      }}\n                    >\n                      <TagIcon icon=\"add\" size=\"6px\" />\n                      <TagLabel>{name}</TagLabel>\n                    </Tag>\n                  ))}\n                </Stack>\n              )}\n            </Stack>\n          </FocusLock>\n        </PopoverContent>\n      </Popover>\n      {labelSet.map(({ id, name }: { id: string; name: string }) => (\n        <Tag\n          size=\"md\"\n          key={name}\n          mr={2}\n          mb={5}\n          cursor=\"pointer\"\n          onClick={() => removeAction({ id, name })}\n        >\n          <TagIcon size=\"12px\" icon=\"delete\" />\n          <TagLabel>{name}</TagLabel>\n        </Tag>\n      ))}\n    </Stack>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  Button,\n  Input,\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  Tooltip,\n  Box,\n  Select,\n} from '@chakra-ui/core';\nimport { Labels } from './Labels';\nimport {\n  getFilterVariablesFromFormValues,\n  getFormValuesFromFilterVariables,\n} from '../util/helpers';\nimport { useAuth } from '../hooks/useAuth';\nimport { useGlobalModal, ModalName } from './GlobalModal';\nimport { useHotKey } from '../hooks/useHotKey';\n\nconst INITIAL_VALUES = {\n  search: '',\n  labels: [],\n  type: 'all',\n};\n\nexport const Filter = ({\n  filter,\n  variables,\n}: {\n  filter: any;\n  variables: any;\n}) => {\n  const [state, setState] = useState(INITIAL_VALUES);\n\n  const { user } = useAuth();\n\n  const { isModalOpen, openModal, closeModal, toggleModal } = useGlobalModal(\n    ModalName.FILTER_FEED_MODAL,\n  );\n\n  useHotKey('command command', toggleModal, { isGlobal: true });\n\n  const formValues = getFormValuesFromFilterVariables(variables, user);\n\n  const { search, labels, type } = state;\n\n  useEffect(() => {\n    if (isModalOpen) {\n      setState(formValues);\n    }\n  }, [isModalOpen]);\n\n  return (\n    <>\n      <Tooltip\n        hasArrow\n        placement=\"bottom\"\n        label=\"or press ⌘ + ⌘\"\n        aria-label=\"Filter feed\"\n      >\n        <Button\n          cursor=\"pointer\"\n          leftIcon=\"search\"\n          variant=\"outline\"\n          onClick={openModal}\n        >\n          Filter\n        </Button>\n      </Tooltip>\n\n      <Modal\n        isCentered\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        closeOnEsc\n        closeOnOverlayClick\n      >\n        <ModalOverlay />\n        <ModalContent rounded=\"lg\">\n          <ModalBody>\n            <Box p={5}>\n              <FormControl mb={5}>\n                <FormLabel>Search</FormLabel>\n                <Input\n                  name=\"search\"\n                  defaultValue=\"\"\n                  value={state.search}\n                  onChange={(e: any) => {\n                    setState({\n                      ...state,\n                      search: e.target.value,\n                    });\n                  }}\n                />\n                <FormHelperText id=\"email-helper-text\">\n                  Note content, file name, URL domain, etc.\n                </FormHelperText>\n              </FormControl>\n              <FormControl mb={5}>\n                <FormLabel>Type</FormLabel>\n                <Select\n                  placeholder=\"Select type\"\n                  value={state.type}\n                  onChange={(e: any) => {\n                    setState({\n                      ...state,\n                      type: e.target.value,\n                    });\n                  }}\n                >\n                  {[\n                    ['all', 'All'],\n                    ['link', 'Links'],\n                    ['file', 'Files'],\n                    ['note', 'Notes'],\n                  ].map(([value, text]) => (\n                    <option value={value}>{text}</option>\n                  ))}\n                </Select>\n                <FormHelperText id=\"email-helper-text\">\n                  File, link, note\n                </FormHelperText>\n              </FormControl>\n              <FormControl>\n                <FormLabel>Labels</FormLabel>\n                <Labels\n                  selectedLabels={formValues.labels}\n                  onSelectedLabelChange={(selectedLabels: any) => {\n                    setState({\n                      ...state,\n                      labels: selectedLabels,\n                    });\n                  }}\n                />\n              </FormControl>\n            </Box>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              variant=\"outline\"\n              color=\"green\"\n              cursor=\"pointer\"\n              mr={3}\n              onClick={async () => {\n                await filter(getFilterVariablesFromFormValues(INITIAL_VALUES));\n                closeModal();\n              }}\n            >\n              Reset\n            </Button>\n            <Button\n              color=\"green\"\n              cursor=\"pointer\"\n              onClick={async () => {\n                await filter(\n                  getFilterVariablesFromFormValues({ labels, search, type }),\n                );\n                closeModal();\n              }}\n            >\n              Apply\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","import gql from 'graphql-tag';\n\nexport const NOTE_FULL_FRAGMENT = gql`\n  fragment NoteFull on Note {\n    id\n\n    raw\n    text\n\n    createdAt\n    updatedAt\n\n    item {\n      id\n      type\n\n      labels {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const CREATE_NOTE_MUTATION = gql`\n  mutation createNote($raw: String!, $text: String!) {\n    createNote(raw: $raw, text: $text) {\n      ...NoteFull\n    }\n  }\n\n  ${NOTE_FULL_FRAGMENT}\n`;\n\nexport const UPDATE_NOTE_MUTATION = gql`\n  mutation updateNote($noteId: String!, $raw: String!, $text: String!) {\n    updateNote(noteId: $noteId, raw: $raw, text: $text) {\n      ...NoteFull\n    }\n  }\n\n  ${NOTE_FULL_FRAGMENT}\n`;\n","import Prism from 'prismjs';\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { Slate, Editable, ReactEditor, withReact } from 'slate-react';\nimport { Text, createEditor } from 'slate';\nimport { withHistory } from 'slate-history';\nimport styled, { css } from 'styled-components';\nimport { Box } from '@chakra-ui/core';\n\n// eslint-disable-next-line\nPrism.languages.markdown=Prism.languages.extend(\"markup\",{}),Prism.languages.insertBefore(\"markdown\",\"prolog\",{blockquote:{pattern:/^>(?:[\\t ]*>)*/m,alias:\"punctuation\"},code:[{pattern:/^(?: {4}|\\t).+/m,alias:\"keyword\"},{pattern:/``.+?``|`[^`\\n]+`/,alias:\"keyword\"}],title:[{pattern:/\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,alias:\"important\",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\\s*)#+.+/m,lookbehind:!0,alias:\"important\",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\\s*)([*-])([\\t ]*\\2){2,}(?=\\s*$)/m,lookbehind:!0,alias:\"punctuation\"},list:{pattern:/(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,lookbehind:!0,alias:\"punctuation\"},\"url-reference\":{pattern:/!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,inside:{variable:{pattern:/^(!?\\[)[^\\]]+/,lookbehind:!0},string:/(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,punctuation:/^[\\[\\]!:]|[<>]/},alias:\"url\"},bold:{pattern:/(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,lookbehind:!0,inside:{punctuation:/^\\*\\*|^__|\\*\\*$|__$/}},italic:{pattern:/(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,lookbehind:!0,inside:{punctuation:/^[*_]|[*_]$/}},url:{pattern:/!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,inside:{variable:{pattern:/(!?\\[)[^\\]]+(?=\\]$)/,lookbehind:!0},string:{pattern:/\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/}}}}),Prism.languages.markdown.bold.inside.url=Prism.util.clone(Prism.languages.markdown.url),Prism.languages.markdown.italic.inside.url=Prism.util.clone(Prism.languages.markdown.url),Prism.languages.markdown.bold.inside.italic=Prism.util.clone(Prism.languages.markdown.italic),Prism.languages.markdown.italic.inside.bold=Prism.util.clone(Prism.languages.markdown.bold); // prettier-ignore\n\nconst DEFAULT_VALUE = [\n  {\n    children: [\n      {\n        text:\n          'Slate is flexible enough to add **decorations** that can format text based on its content. For example, this editor has **Markdown** preview decorations on it, to make it _dead_ simple to make an editor with built-in Markdown previewing.',\n      },\n    ],\n  },\n  {\n    children: [{ text: '## Try it out!' }],\n  },\n  {\n    children: [{ text: 'Try it out for yourself!' }],\n  },\n];\n\nconst MarkdownNode = styled.span`\n  font-size: 16px;\n  font-weight: ${props => props.leaf.bold && 'bold'};\n  font-style: ${props => props.leaf.italic && 'italic'};\n  text-decoration: ${props => props.leaf.underlined && 'underline'};\n  ${props =>\n    props.leaf.title &&\n    css`\n      display: inline-block;\n      font-weight: bold;\n      font-size: 20px;\n      margin: 20px 0 10px 0;\n    `}\n  ${props =>\n    props.leaf.list &&\n    css`\n      padding-left: 10px;\n      font-size: 20px;\n      line-height: 10px;\n    `}\n  ${props =>\n    props.leaf.hr &&\n    css`\n      display: block;\n      text-align: center;\n      border-bottom: 2px solid #ddd;\n    `}\n  ${props =>\n    props.leaf.blockquote &&\n    css`\n      display: inline-block;\n      border-left: 2px solid #ddd;\n      padding-left: 10px;\n      color: #aaa;\n      font-style: italic;\n    `}\n  ${props =>\n    props.leaf.code &&\n    css`\n      font-family: monospace;\n      background-color: #eee;\n      padding: 3px;\n    `}\n`;\n\nconst Leaf = ({ attributes, children, leaf }) => {\n  return (\n    <MarkdownNode {...attributes} leaf={leaf}>\n      {children}\n    </MarkdownNode>\n  );\n};\n\nexport const MarkdownEditor = React.memo(\n  ({ value = DEFAULT_VALUE, onChange }) => {\n    const editor = useMemo(() => withHistory(withReact(createEditor())), []);\n\n    const editorRef = React.useRef(null);\n\n    const renderLeaf = useCallback(props => <Leaf {...props} />, []);\n\n    const decorate = useCallback(([node, path]) => {\n      const ranges = [];\n\n      if (!Text.isText(node)) {\n        return ranges;\n      }\n\n      const getLength = token => {\n        if (typeof token === 'string') {\n          return token.length;\n        } else if (typeof token.content === 'string') {\n          return token.content.length;\n        } else {\n          return token.content.reduce((l, t) => l + getLength(t), 0);\n        }\n      };\n\n      const tokens = Prism.tokenize(node.text, Prism.languages.markdown);\n      let start = 0;\n\n      for (const token of tokens) {\n        const length = getLength(token);\n        const end = start + length;\n\n        if (typeof token !== 'string') {\n          ranges.push({\n            [token.type]: true,\n            anchor: { path, offset: start },\n            focus: { path, offset: end },\n          });\n        }\n\n        start = end;\n      }\n\n      return ranges;\n    }, []);\n\n    useEffect(() => {\n      ReactEditor.focus(editor);\n    }, []);\n\n    return (\n      <Box>\n        <Slate autoFocus editor={editor} value={value} onChange={onChange}>\n          <Editable\n            decorate={decorate}\n            renderLeaf={renderLeaf}\n            placeholder=\"Write a note...\"\n          />\n        </Slate>\n      </Box>\n    );\n  },\n);\n","import gql from 'graphql-tag';\n\nexport const LINK_FULL_FRAGMENT = gql`\n  fragment LinkFull on Link {\n    id\n\n    href\n    notes\n\n    createdAt\n    updatedAt\n\n    image\n    favicon\n    title\n    description\n\n    item {\n      id\n      type\n\n      labels {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const UPDATE_LINK_MUTATION = gql`\n  mutation updateLink(\n    $linkId: String!\n    $href: String!\n    $title: String!\n    $description: String\n  ) {\n    updateLink(\n      linkId: $linkId\n      href: $href\n      title: $title\n      description: $description\n    ) {\n      ...LinkFull\n    }\n  }\n\n  ${LINK_FULL_FRAGMENT}\n`;\n\nexport const REFRESH_LINK_META_MUTATION = gql`\n  mutation refreshLinkMeta($linkId: String!, $href: String!) {\n    refreshLinkMeta(linkId: $linkId, href: $href) {\n      ...LinkFull\n    }\n  }\n\n  ${LINK_FULL_FRAGMENT}\n`;\n","import gql from 'graphql-tag';\nimport { NOTE_FULL_FRAGMENT } from './note';\nimport { LINK_FULL_FRAGMENT } from './link';\n\nexport const ITEM_FULL_FRAGMENT = gql`\n  fragment ItemFull on Item {\n    id\n    type\n\n    createdAt\n    updatedAt\n\n    labels {\n      id\n      name\n    }\n\n    link {\n      ...LinkFull\n    }\n\n    file {\n      id\n      name\n      extension\n      isUploaded\n      fullUrl\n      squareUrl\n\n      createdAt\n      updatedAt\n    }\n\n    note {\n      ...NoteFull\n    }\n  }\n\n  ${LINK_FULL_FRAGMENT}\n  ${NOTE_FULL_FRAGMENT}\n`;\n\nexport const ITEM_WITH_LABELS_FRAGMENT = gql`\n  fragment ItemWithLabels on Item {\n    id\n    type\n\n    labels {\n      id\n      name\n    }\n  }\n`;\n\nexport const DELETE_ITEM_MUTATION = gql`\n  mutation deleteItem($itemId: String!) {\n    deleteItem(itemId: $itemId) {\n      # user\n      id\n    }\n  }\n`;\n","import { useMutation } from '@apollo/react-hooks';\n\nimport { DELETE_ITEM_MUTATION } from '../graphql/item';\nimport { FEED_QUERY } from '../components/Feed';\nimport { feed_items } from '../graphql/__generated__/feed';\n\nexport const useOptimisticDeleteItem = (item: any) =>\n  useMutation(DELETE_ITEM_MUTATION, {\n    variables: { itemId: item.id },\n    optimisticResponse: {\n      __typename: 'Mutation',\n      deleteItem: {\n        id: '1234',\n        __typename: 'Item',\n      },\n    },\n    update: async (cache: any) => {\n      const data = cache.readQuery({\n        query: FEED_QUERY,\n      });\n\n      const newListItems = data.items.filter(\n        (i: feed_items) => i.id !== item.id,\n      );\n\n      await cache.writeQuery({\n        query: FEED_QUERY,\n        data: { items: newListItems },\n      });\n    },\n  });\n","import { useRef } from 'react';\nimport _ from 'lodash';\n\nexport const useDebounce = (func: any, timeMs = 500) => {\n  const { current: debouncedFunc } = useRef(_.debounce(func, timeMs));\n\n  return debouncedFunc;\n};\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Node } from 'slate';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport removeMarkdown from 'remove-markdown';\n\nimport { MarkdownEditor } from './MarkdownEditor';\n\nimport { useForm } from 'react-hook-form';\nimport { useOptimisticDeleteItem } from '../hooks/useOptimisticDeleteItem';\n\nimport { UPDATE_NOTE_MUTATION } from '../graphql/note';\nimport { useDebounce } from '../hooks/useDebounce';\n\nexport const serializeToPlainText = (nodes: any[]) => {\n  return nodes.map(n => Node.string(n)).join('\\n');\n};\n\nexport const EMPTY_NOTE_VALUE = [\n  {\n    children: [{ text: '', marks: [] }],\n  },\n];\n\nexport const EMPTY_NOTE = {\n  raw: EMPTY_NOTE_VALUE,\n  text: serializeToPlainText(EMPTY_NOTE_VALUE),\n};\n\nexport interface UpdateNoteFormValues {\n  value: any[];\n}\n\nexport const Note = ({ note }: { note: any }) => {\n  const { getValues, watch, setValue, register } = useForm<\n    UpdateNoteFormValues\n  >({\n    defaultValues: {\n      value: JSON.parse(note.raw),\n    },\n  });\n\n  const { value } = getValues();\n\n  const textRef = useRef(serializeToPlainText(value));\n\n  const [updateNote] = useMutation(UPDATE_NOTE_MUTATION, {\n    variables: {\n      noteId: note.id,\n      raw: JSON.stringify(value),\n      text: removeMarkdown(textRef.current),\n    },\n  });\n\n  const debouncedUpdateNote = useDebounce(updateNote);\n\n  const [deleteItem] = useOptimisticDeleteItem(note.item);\n\n  watch('value');\n\n  // Listen for form changes.\n  useEffect(() => {\n    register({ name: 'value' });\n  }, [register]);\n\n  useEffect(() => {\n    const nextText = serializeToPlainText(value);\n\n    if (nextText !== textRef.current) {\n      //@ts-ignore\n      debouncedUpdateNote(value);\n    }\n\n    textRef.current = nextText;\n  }, [value]);\n\n  // Clean up and delete if needed.\n  useEffect(\n    () => () => {\n      debouncedUpdateNote.cancel();\n      if (!textRef.current) deleteItem();\n    },\n    [],\n  );\n\n  return (\n    <MarkdownEditor\n      // @ts-ignore\n      value={value}\n      onChange={(slateVal: any[]) => {\n        setValue('value', slateVal);\n      }}\n    />\n  );\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useMutation, useApolloClient } from '@apollo/react-hooks';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalCloseButton,\n  ModalBody,\n  ModalHeader,\n  ModalContent,\n  Box,\n  Button,\n  Icon,\n  Spinner,\n  ModalFooter,\n  Tooltip,\n} from '@chakra-ui/core';\n\nimport { CREATE_NOTE_MUTATION, NOTE_FULL_FRAGMENT } from '../graphql/note';\n\nimport { EMPTY_NOTE_VALUE, serializeToPlainText, Note } from './Note';\nimport { Labels } from './Labels';\nimport { useHotKey } from '../hooks/useHotKey';\nimport { feed_items } from '../graphql/__generated__/feed';\n\nexport const NoteModal = ({\n  item,\n  children,\n}: {\n  item?: feed_items;\n  children?: (childProps: {\n    isOpen: boolean;\n    open: () => void;\n    close: () => void;\n  }) => any;\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const open = () => setIsOpen(true);\n  const close = () => setIsOpen(false);\n\n  const client = useApolloClient();\n\n  useHotKey('c n', () => {\n    if (!note) setIsOpen(true);\n  });\n\n  const [createNote, { data }] = useMutation(CREATE_NOTE_MUTATION, {\n    variables: {\n      raw: JSON.stringify(EMPTY_NOTE_VALUE),\n      text: serializeToPlainText(EMPTY_NOTE_VALUE),\n    },\n    refetchQueries: ['feed'],\n  });\n\n  useEffect(() => {\n    if (isOpen && !item) createNote();\n  }, [isOpen]);\n\n  const note =\n    item && item.note\n      ? item.note\n      : data &&\n        client.readFragment({\n          id: data.createNote.id,\n          fragment: NOTE_FULL_FRAGMENT,\n        });\n\n  return (\n    <>\n      {children ? (\n        children({ isOpen, open, close })\n      ) : (\n        <Tooltip\n          hasArrow\n          placement=\"bottom\"\n          label=\"or press c + n\"\n          aria-label=\"Add note\"\n        >\n          <Button variant=\"solid\" cursor=\"pointer\" onClick={open}>\n            <Icon name=\"plus-square\" />\n          </Button>\n        </Tooltip>\n      )}\n\n      <Modal\n        size=\"full\"\n        scrollBehavior=\"inside\"\n        isOpen={isOpen}\n        onClose={close}\n        closeOnEsc={false}\n      >\n        <ModalOverlay />\n        <ModalContent height={700} width={700}>\n          <ModalHeader></ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Box p={5} height=\"100%\">\n              {note ? (\n                <Note note={note} />\n              ) : (\n                <Box d=\"flex\" justifyContent=\"center\">\n                  <Spinner />\n                </Box>\n              )}\n            </Box>\n          </ModalBody>\n          {note && (\n            <ModalFooter justifyContent=\"flex-start\">\n              <Box mt={5}>\n                <Labels item={note.item} />\n              </Box>\n            </ModalFooter>\n          )}\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Spinner,\n  Image as ChackraImage,\n  Icon,\n  IconProps,\n} from '@chakra-ui/core';\n\nexport interface LazeImageProps {\n  [key: string]: any;\n  isReady?: boolean;\n  loadingContainerProps?: any;\n  showSpinner?: boolean;\n  placeholderIcon?: IconProps['name'];\n}\n\nexport const LazyImage = ({\n  src,\n  isReady = true,\n  showSpinner = true,\n  loadingContainerProps,\n  placeholderIcon = 'view-off',\n  fit = false,\n  ...props\n}: LazeImageProps) => {\n  const [isImageLoaded, setIsImageLoaded] = useState<string | null>(null);\n  const [isBroken, setIsBroken] = useState(false);\n\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    if (isReady) {\n      const img = new Image();\n      img.src = src;\n\n      img.onload = () => setIsImageLoaded(img.src);\n      img.onerror = () => setIsBroken(true);\n\n      setDimensions({\n        width: img.width,\n        height: img.height,\n      });\n    }\n  }, [isReady]);\n\n  const newProps = {\n    rounded: 'lg',\n    ...props,\n  };\n\n  const isReadyToDisplay = !isReady || !isImageLoaded;\n\n  // const isLandscape = dimensions.width > dimensions.height;\n\n  return isReadyToDisplay || !src || isBroken ? (\n    <Box\n      d=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      rounded=\"lg\"\n      {...newProps}\n      {...loadingContainerProps}\n    >\n      {src && showSpinner ? (\n        <Spinner size=\"xl\" />\n      ) : (\n        <Icon size=\"50px\" name={isBroken ? 'warning' : placeholderIcon} />\n      )}\n    </Box>\n  ) : (\n    <ChackraImage src={src} {...newProps} />\n  );\n};\n","import React, { useRef, MouseEvent } from 'react';\nimport { debounce } from 'lodash';\n\nexport interface ClickProps {\n  children: (args: {\n    cursor?: 'pointer';\n    onClick: any;\n    onDoubleClick: () => void;\n  }) => any;\n  onSingleClick?: () => void;\n  onDoubleClick?: () => void;\n  onMetaClick?: () => void;\n  onShiftClick?: () => void;\n}\n\nexport const Click = (props: ClickProps) => {\n  const delay = 200;\n\n  const debouncedSingleClick = useRef(\n    debounce(() => {\n      if (props.onSingleClick) props.onSingleClick();\n    }, delay),\n  );\n\n  const onSingleClick = (event: MouseEvent<any, MouseEvent>) => {\n    event.preventDefault();\n    if (props.onMetaClick && event.metaKey) props.onMetaClick();\n    else if (props.onShiftClick && event.shiftKey) props.onShiftClick();\n    else debouncedSingleClick.current();\n  };\n\n  const onDoubleClick = () => {\n    debouncedSingleClick.current.cancel();\n    if (props.onDoubleClick) props.onDoubleClick();\n  };\n\n  const hasClickHandler = !!(\n    props.onSingleClick ||\n    props.onDoubleClick ||\n    props.onMetaClick ||\n    props.onShiftClick\n  );\n\n  return props.children({\n    ...(hasClickHandler ? { cursor: 'pointer' } : {}),\n    onClick: onSingleClick,\n    onDoubleClick: onDoubleClick,\n  });\n};\n","import React, { useContext } from 'react';\n\nimport { Click, ClickProps } from './Click';\nimport { SelectContext } from './SelectContainer';\n\nexport interface SelectOnClickProps extends ClickProps {\n  item: { id: string; [key: string]: any };\n}\n\nexport const SelectOnClick = ({\n  item,\n  children,\n  ...props\n}: SelectOnClickProps) => {\n  const {\n    onToggleThunk,\n    onSelectRangeThunk,\n    onResetAndSelectThunk,\n  } = useContext(SelectContext);\n\n  return (\n    <Click\n      // onSingleClick={on(item)}\n      onMetaClick={onToggleThunk(item)}\n      onShiftClick={onSelectRangeThunk(item)}\n      {...props}\n    >\n      {children}\n    </Click>\n  );\n};\n","import React from 'react';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalCloseButton,\n  ModalBody,\n  ModalHeader,\n  ModalContent,\n  Box,\n  ModalFooter,\n  useDisclosure,\n} from '@chakra-ui/core';\n\nimport { Labels } from './Labels';\nimport { LazyImage } from './LazyImage';\nimport { feed_items, feed_items_file } from '../graphql/__generated__/feed';\n\nexport interface ItemWithFile extends feed_items {\n  file: feed_items_file;\n}\n\nexport const FileModal = ({\n  item,\n  children,\n}: {\n  item: ItemWithFile;\n  children?: (childProps: {\n    isOpen: boolean;\n    onOpen: () => void;\n    onClose: () => void;\n  }) => any;\n}) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { file } = item;\n\n  return (\n    <>\n      {children && children({ isOpen, onOpen, onClose })}\n\n      <Modal\n        size=\"full\"\n        scrollBehavior=\"inside\"\n        isOpen={isOpen}\n        onClose={onClose}\n        closeOnEsc={false}\n      >\n        <ModalOverlay />\n        <ModalContent maxWidth={1200}>\n          <ModalHeader></ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" justifyContent=\"center\">\n            <LazyImage\n              rounded\n              isReady={!!file.isUploaded}\n              src={file.fullUrl}\n              maxWidth=\"100%\"\n              objectFit=\"scale-down\"\n              pt={5}\n              pb={5}\n            />\n          </ModalBody>\n          <ModalFooter justifyContent=\"flex-start\">\n            <Box mt={5}>\n              <Labels item={item} />\n            </Box>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","// @ts-nocheck\nimport React from 'react';\n\nimport { LazyImage } from './LazyImage';\nimport { SelectOnClick } from './SelectOnClick';\nimport { ITEM_ACTUAL_WIDTH, ItemHeader, ItemContentContainer } from './Item';\nimport { FileModal } from './FileModal';\nimport { feed_items, feed_items_file } from '../graphql/__generated__/feed';\n\nexport interface ItemWithFile extends feed_items {\n  file: feed_items_file;\n}\n\nexport const FileItem = ({ item }: { item: ItemWithFile }) => {\n  const { file } = item;\n\n  return (\n    <FileModal item={item}>\n      {({ onOpen }) => (\n        <ItemContentContainer item={item} tooltip=\"Open file\">\n          <SelectOnClick onSingleClick={onOpen} item={item}>\n            {clickProps => (\n              <LazyImage\n                width={ITEM_ACTUAL_WIDTH}\n                height=\"200px\"\n                objectFit=\"cover\"\n                isReady={file.isUploaded}\n                src={!file.isUploaded ? null : file.squareUrl}\n                {...clickProps}\n              />\n            )}\n          </SelectOnClick>\n          <ItemHeader item={item} onSingleClick={onOpen}>\n            {file.name}.{file.extension}\n          </ItemHeader>\n        </ItemContentContainer>\n      )}\n    </FileModal>\n  );\n};\n","import React, { useEffect, useRef } from 'react';\nimport _ from 'lodash';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalCloseButton,\n  ModalBody,\n  ModalHeader,\n  ModalContent,\n  Box,\n  ModalFooter,\n  useDisclosure,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Stack,\n  Textarea,\n  InputGroup,\n  InputRightElement,\n  Button,\n  Spinner,\n  InputRightAddon,\n  InputLeftAddon,\n  Tooltip,\n} from '@chakra-ui/core';\nimport * as yup from 'yup';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Labels } from './Labels';\nimport { useForm } from 'react-hook-form';\nimport { LazyImage } from './LazyImage';\nimport {\n  UPDATE_LINK_MUTATION,\n  REFRESH_LINK_META_MUTATION,\n} from '../graphql/link';\nimport { feed_items_link, feed_items } from '../graphql/__generated__/feed';\nimport { useDebounce } from '../hooks/useDebounce';\n// import { getMetadataFromUrl } from '../util/helpers';\n\nexport interface ItemWithLink extends feed_items {\n  link: feed_items_link;\n}\n\nconst CreateLinkSchema = yup.object().shape({\n  href: yup\n    .string()\n    .url('Invalid URL')\n    .required('Required'),\n});\n\nexport interface UpdateLinkFormValues {\n  href: string | null;\n  title: string | null;\n  description: string | null;\n}\n\nexport const LinkModal = ({\n  item,\n  children,\n}: {\n  item: ItemWithLink;\n  children?: (childProps: {\n    isOpen: boolean;\n    onOpen: () => void;\n    onClose: () => void;\n  }) => any;\n}) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { link } = item;\n\n  const { getValues, setValue, watch, errors, register } = useForm<\n    UpdateLinkFormValues\n  >({\n    validationSchema: CreateLinkSchema,\n    mode: 'onBlur',\n  });\n\n  watch();\n\n  const values = getValues();\n\n  const [updateLink, { loading: isUpdating }] = useMutation(\n    UPDATE_LINK_MUTATION,\n    {\n      variables: { linkId: link.id, ...values },\n    },\n  );\n\n  const [refreshLinkMeta, { loading: isRefreshing }] = useMutation(\n    REFRESH_LINK_META_MUTATION,\n    {\n      variables: {\n        linkId: link.id,\n        href: values.href,\n      },\n      onError: console.log,\n      onCompleted: data => {\n        console.log(data);\n        setValue('href', data.refreshLinkMeta.href);\n        setValue('title', data.refreshLinkMeta.title);\n        setValue('description', data.refreshLinkMeta.title);\n      },\n    },\n  );\n\n  const debouncedUpdateLink = useDebounce(updateLink);\n\n  const prevValues = useRef(values);\n\n  useEffect(() => {\n    if (isOpen) {\n      setValue('href', link.href);\n      setValue('title', link.title);\n      setValue('description', link.title);\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (isOpen) {\n      if (\n        !_.isEqual(prevValues.current, values) &&\n        values.href &&\n        values.title\n      ) {\n        //@ts-ignore\n        debouncedUpdateLink();\n      }\n\n      prevValues.current = values;\n    }\n  }, [values]);\n\n  // Clean up and delete if needed.\n  useEffect(\n    () => () => {\n      debouncedUpdateLink.cancel();\n    },\n    [],\n  );\n\n  const isSaving = isRefreshing || isUpdating;\n\n  return (\n    <>\n      {children && children({ isOpen, onOpen, onClose })}\n\n      <Modal\n        size=\"full\"\n        scrollBehavior=\"inside\"\n        isOpen={isOpen}\n        onClose={onClose}\n        closeOnEsc={false}\n      >\n        <ModalOverlay />\n        <ModalContent maxWidth={500} maxHeight={700}>\n          <ModalHeader></ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Stack spacing={5}>\n              {link.image && (\n                <LazyImage\n                  rounded\n                  src={link.image}\n                  height=\"200px\"\n                  objectFit=\"cover\"\n                  pt={5}\n                  pb={5}\n                />\n              )}\n              <FormControl>\n                <FormLabel htmlFor=\"href\">URL</FormLabel>\n                <InputGroup size=\"md\">\n                  <InputLeftAddon\n                    as={Button}\n                    cursor=\"pointer\"\n                    verticalAlign=\"middle\"\n                    // @ts-ignore\n                    variant=\"outline\"\n                    isDisabled={isRefreshing}\n                    isLoading={isRefreshing}\n                    onClick={() => refreshLinkMeta()}\n                    roundedLeft=\"0\"\n                  >\n                    Autofill\n                  </InputLeftAddon>\n                  <Input\n                    name=\"href\"\n                    id=\"href\"\n                    rounded=\"0\"\n                    defaultValue={link.href}\n                    ref={register}\n                  />\n                  <InputRightAddon\n                    as={Button}\n                    cursor=\"pointer\"\n                    verticalAlign=\"middle\"\n                    // @ts-ignore\n                    variant=\"outline\"\n                    onClick={() => window.open(link.href, '_blank')}\n                    roundedRight=\"0\"\n                  >\n                    Go\n                  </InputRightAddon>\n                </InputGroup>\n                <FormErrorMessage>{errors?.href?.message}</FormErrorMessage>\n              </FormControl>\n              <FormControl>\n                <FormLabel htmlFor=\"href\">Title</FormLabel>\n                <Input\n                  name=\"title\"\n                  id=\"title\"\n                  defaultValue={link.title || ''}\n                  ref={register}\n                />\n                <FormErrorMessage>{errors?.title?.message}</FormErrorMessage>\n              </FormControl>\n              <FormControl>\n                <FormLabel htmlFor=\"href\">Description</FormLabel>\n                <Textarea\n                  name=\"description\"\n                  id=\"description\"\n                  size=\"md\"\n                  defaultValue={link.description || ''}\n                  ref={register}\n                />\n                <FormErrorMessage>\n                  {errors?.description?.message}\n                </FormErrorMessage>\n              </FormControl>\n            </Stack>\n          </ModalBody>\n          <ModalFooter justifyContent=\"space-between\" pt={5}>\n            <Labels item={item} />\n            <Box>{isSaving ? <Spinner size=\"sm\" /> : 'Up to date'} </Box>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","import React from 'react';\nimport { Box, Icon } from '@chakra-ui/core';\n\nimport { LazyImage } from './LazyImage';\nimport { SelectOnClick } from './SelectOnClick';\nimport { ITEM_ACTUAL_WIDTH, ItemHeader, ItemContentContainer } from './Item';\nimport { LinkModal } from './LinkModal';\nimport { feed_items_link, feed_items } from '../graphql/__generated__/feed';\n\nexport interface ItemWithLink extends feed_items {\n  link: feed_items_link;\n}\n\nexport const LinkItem = ({ item }: { item: ItemWithLink }) => {\n  const { link } = item;\n\n  // const url = new URL(link.href);\n\n  return (\n    <LinkModal item={item}>\n      {({ onOpen }) => (\n        <>\n          <ItemContentContainer\n            item={item}\n            tooltip=\"Open (⌘ + click to go to url)\"\n          >\n            <SelectOnClick\n              onSingleClick={onOpen}\n              onMetaClick={() => window.open(link.href, '_blank')}\n              item={item}\n            >\n              {clickProps => (\n                <LazyImage\n                  src={link.image}\n                  width={ITEM_ACTUAL_WIDTH}\n                  height=\"200px\"\n                  objectFit=\"cover\"\n                  placeholderIcon=\"external-link\"\n                  {...clickProps}\n                />\n              )}\n            </SelectOnClick>\n          </ItemContentContainer>\n          <ItemHeader\n            item={item}\n            onSingleClick={() => window.open(link.href, '_blank')}\n          >\n            <Icon name=\"link\" fontSize=\"s\" mr={2} /> {link.title || link.href}\n          </ItemHeader>\n        </>\n      )}\n    </LinkModal>\n  );\n};\n","import React from 'react';\nimport { Box, Text } from '@chakra-ui/core';\n\nimport { SelectOnClick } from './SelectOnClick';\nimport { NoteModal } from './NoteModal';\nimport { ItemContentContainer, ItemHeader } from './Item';\nimport { feed_items_note, feed_items } from '../graphql/__generated__/feed';\n\nexport interface ItemWithNote extends feed_items {\n  note: feed_items_note;\n}\n\nexport const NoteItem = ({ item }: { item: ItemWithNote }) => {\n  const { note } = item;\n\n  return (\n    <NoteModal item={item}>\n      {({ open }) => (\n        <SelectOnClick onSingleClick={open} item={item}>\n          {clickProps => (\n            <>\n              <ItemContentContainer\n                border=\"1px solid black\"\n                rounded=\"lg\"\n                p={5}\n                overflow=\"hidden\"\n                tooltip=\"Open note\"\n                item={item}\n                {...clickProps}\n              >\n                <Text fontSize=\"xs\">{note.text}</Text>\n              </ItemContentContainer>\n              <ItemHeader item={item}>{note.text}</ItemHeader>\n            </>\n          )}\n        </SelectOnClick>\n      )}\n    </NoteModal>\n  );\n};\n","import React, { useContext } from 'react';\nimport { formatRelative } from 'date-fns';\nimport _ from 'lodash';\n\nimport { FileItem } from './FileItem';\nimport { LinkItem } from './LinkItem';\nimport { SelectContext } from './SelectContainer';\nimport {\n  Box,\n  Icon,\n  Stack,\n  BoxProps,\n  Text,\n  Tooltip,\n  useDisclosure,\n  IconButton,\n} from '@chakra-ui/core';\nimport { NoteItem } from './NoteItem';\nimport { Click } from './Click';\nimport { useHotKey } from '../hooks/useHotKey';\nimport { useOptimisticDeleteItem } from '../hooks/useOptimisticDeleteItem';\nimport { feed_items } from '../graphql/__generated__/feed';\n\nexport const ITEM_INNER_PADDING = 5;\nexport const ITEM_ACTUAL_WIDTH = 270;\nexport const ITEM_CONTENT_HEIGHT = 200;\nexport const ITEM_WIDTH = ITEM_ACTUAL_WIDTH + ITEM_INNER_PADDING;\n\nexport const Item = ({ item }: { item: feed_items }) => {\n  let node = null;\n\n  const { isItemSelected } = useContext(SelectContext);\n\n  switch (item.type) {\n    case 'file':\n      //@ts-ignore\n      node = item.file ? <FileItem item={item} /> : null;\n      break;\n\n    case 'note':\n      //@ts-ignore\n      node = item.note && item.note.text ? <NoteItem item={item} /> : null;\n      break;\n\n    case 'link':\n      //@ts-ignore\n      node = item.link ? <LinkItem item={item} /> : null;\n      break;\n\n    default:\n      //@ts-ignore\n      node = null;\n      break;\n  }\n\n  if (!node) return null;\n\n  return (\n    <Box\n      d=\"flex\"\n      justifyContent=\"center\"\n      margin={0}\n      width={ITEM_ACTUAL_WIDTH}\n      maxWidth={ITEM_ACTUAL_WIDTH}\n      height={315}\n      padding={`${ITEM_INNER_PADDING}px`}\n    >\n      <Stack p=\"4\">\n        <Box>\n          {isItemSelected(item) && false && (\n            <Icon\n              name=\"check-circle\"\n              position=\"absolute\"\n              color=\"#add8e6\"\n              size=\"20\"\n              padding=\"10px\"\n            />\n          )}\n          {node}\n        </Box>\n        {/* <Labels item={item} canAddLabels={false} /> */}\n      </Stack>\n    </Box>\n  );\n};\n\nexport const ItemHeader = ({\n  children,\n  item,\n  ...props\n}: {\n  children: any;\n  item: feed_items;\n  [k: string]: any;\n}) => (\n  <Click {...props}>\n    {clickProps => (\n      <Box {...clickProps} mt={4} ml={1}>\n        <Text\n          maxWidth={ITEM_ACTUAL_WIDTH}\n          fontSize=\"lg\"\n          fontWeight=\"bold\"\n          whiteSpace=\"nowrap\"\n          overflow=\"hidden\"\n          style={{\n            textOverflow: 'ellipsis',\n          }}\n          mb={3}\n        >\n          {children}\n        </Text>\n\n        <Text>{formatRelative(new Date(item.createdAt), new Date())}</Text>\n      </Box>\n    )}\n  </Click>\n);\n\ninterface ItemContentContainer extends BoxProps {\n  tooltip: string;\n  item: feed_items;\n}\n\nexport const ItemContentContainer = ({\n  children,\n  tooltip,\n  item,\n  ...props\n}: ItemContentContainer) => {\n  const baseHoverState = useDisclosure();\n  const menuHoverState = useDisclosure();\n\n  const itemRef = React.useRef(null);\n\n  const [deleteItem] = useOptimisticDeleteItem(item);\n\n  const hotKeyHandler = () => {\n    if (baseHoverState.isOpen) deleteItem();\n  };\n\n  useHotKey('d', hotKeyHandler, {\n    ref: itemRef.current,\n    shouldBind: baseHoverState.isOpen,\n  });\n\n  return (\n    <Tooltip\n      hasArrow\n      label={tooltip}\n      aria-label={tooltip}\n      placement=\"top\"\n      maxWidth={200}\n      isOpen={baseHoverState.isOpen && !menuHoverState.isOpen}\n      onOpen={baseHoverState.onOpen}\n    >\n      <Box\n        onMouseEnter={baseHoverState.onOpen}\n        onMouseLeave={baseHoverState.onClose}\n        position=\"relative\"\n      >\n        {baseHoverState.isOpen && (\n          <Box\n            d=\"flex\"\n            justifyContent=\"flex-end\"\n            p={2}\n            alignItems=\"center\"\n            roundedBottomRight=\"lg\"\n            roundedBottomLeft=\"lg\"\n            position=\"absolute\"\n            bottom={0}\n            height={10}\n            width={ITEM_ACTUAL_WIDTH}\n            zIndex={10}\n            backgroundColor=\"lightgrey\"\n            background=\"rgb(211,211,211, 0.8);\"\n            opacity={9}\n            onMouseOver={menuHoverState.onOpen}\n            onMouseLeave={menuHoverState.onClose}\n          >\n            <Tooltip\n              hasArrow\n              label=\"press d while hovering over the item\"\n              aria-label=\"delete item\"\n              placement=\"bottom\"\n            >\n              <IconButton\n                size=\"sm\"\n                icon=\"delete\"\n                cursor=\"pointer\"\n                aria-label=\"delete item\"\n                onClick={() => deleteItem()}\n              />\n            </Tooltip>\n          </Box>\n        )}\n        <Box\n          width={ITEM_ACTUAL_WIDTH}\n          height={ITEM_CONTENT_HEIGHT}\n          ref={itemRef}\n          {...props}\n        >\n          {children}\n        </Box>\n      </Box>\n    </Tooltip>\n  );\n};\n","import React from 'react';\nimport { SimpleGrid, Box } from '@chakra-ui/core';\nimport { QueryResult } from 'react-apollo';\n\nimport { ITEM_WIDTH, Item } from './Item';\nimport { feed } from '../graphql/__generated__/feed';\n\nexport interface GridFeedProps {\n  query: QueryResult<feed, Record<string, any>>;\n  nextPage: Function;\n}\n\nexport const GridFeed = ({ query, nextPage }: GridFeedProps) => {\n  const { data } = query;\n\n  return (\n    <SimpleGrid minChildWidth={ITEM_WIDTH} spacing={10}>\n      {(data?.items || []).map(item => (\n        <Item item={item} key={item.id} />\n      ))}\n      {/* <Box w=\"100%\" h=\"10\" bg=\"blue.500\" />\n      <Box w=\"100%\" h=\"10\" bg=\"blue.500\" />\n      <Box w=\"100%\" h=\"10\" bg=\"blue.500\" />\n      <Box w=\"100%\" h=\"10\" bg=\"blue.500\" />\n      <Box w=\"100%\" h=\"10\" bg=\"blue.500\" /> */}\n    </SimpleGrid>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport { QueryResult } from 'react-apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { useLocalStorage } from 'react-use';\nimport { Box, usePrevious, Spinner } from '@chakra-ui/core';\nimport { Waypoint } from 'react-waypoint';\n\nimport { SelectContainer } from './SelectContainer';\nimport { usePagination } from '../hooks/useVariables';\nimport { CreateFiles } from './CreateFiles';\nimport { CreateLink } from './CreateLink';\nimport { SignOut } from './SignOut';\nimport { UploadProgress } from './UploadProgress';\nimport { Filter } from './Filter';\nimport { NoteModal } from './NoteModal';\nimport { ITEM_FULL_FRAGMENT } from '../graphql/item';\n\nimport { GridFeed } from './GridFeed';\nimport { feed_items, feed } from '../graphql/__generated__/feed';\n\nexport const FEED_QUERY = gql`\n  query feed(\n    $first: Int\n    $skip: Int\n    $search: String\n    $type: ItemType\n    $where: ItemWhereInput\n  ) {\n    items(\n      first: $first\n      skip: $skip\n      where: $where\n      search: $search\n      type: $type\n      orderBy: { createdAt: desc }\n    ) @connection(key: \"feed_items\") {\n      ...ItemFull\n    }\n  }\n\n  ${ITEM_FULL_FRAGMENT}\n`;\n\nexport const FEED_PAGE_LENGTH = 30;\n\ntype FeedContext = {\n  mode: 'grid' | 'list';\n  nextPage: () => any;\n  activeItemId: feed_items['id'] | null;\n  setActiveItemId: (id: feed_items['id']) => any;\n  // viewNextItem: (item: feed_items) => any;\n  isLastItem: (item: feed_items) => any;\n};\n\nexport const FeedContext = React.createContext<FeedContext>({} as FeedContext);\n\nexport const Feed = () => {\n  const [mode, setMode] = useLocalStorage<'grid' | 'list'>('feed-mode', 'grid');\n  const [isLastPage, setIsLastPage] = useState(false);\n  const [activeItemId, setActiveItemId] = useState<feed_items['id'] | null>(\n    null,\n  );\n  const [pageNum, setPage] = useState(1);\n\n  const { paginationVariables } = usePagination({\n    pageLength: FEED_PAGE_LENGTH,\n  });\n\n  const query = useQuery<feed>(FEED_QUERY, {\n    variables: paginationVariables,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const { loading, data, networkStatus, refetch, fetchMore, variables } = query;\n\n  const prevQuery: QueryResult<feed, Record<string, any>> = usePrevious(query);\n\n  // Spaghetti Pagination\n  useEffect(() => {\n    if (data && prevQuery.data) {\n      const isLast =\n        _.last(data.items)?.id === _.last(prevQuery.data.items)?.id;\n\n      if (isLast) setIsLastPage(true);\n      else if (pageNum === 0) setIsLastPage(false);\n\n      if (data.items.length > prevQuery.data.items.length) {\n        setPage(pageNum + 1);\n      } else if (\n        data.items.length < prevQuery.data.items.length &&\n        pageNum !== 0\n      ) {\n        setPage(0);\n      }\n    }\n  }, [data]);\n\n  const initialLoad = loading && !data;\n\n  const filter = (filterVariables: any) =>\n    refetch({\n      ...paginationVariables,\n      ...filterVariables,\n    });\n\n  const nextPage = () =>\n    fetchMore({\n      variables: {\n        ...variables,\n        skip: FEED_PAGE_LENGTH * pageNum,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev;\n        return {\n          ...prev,\n          items: [...(prev.items || []), ...(fetchMoreResult.items || [])],\n        };\n      },\n    });\n\n  const isLastItem = ({ id }: feed_items) => {\n    const lastItem = _.last(data?.items || []);\n    return lastItem && lastItem.id === id;\n  };\n\n  return (\n    <FeedContext.Provider\n      value={{\n        mode,\n        nextPage,\n        isLastItem,\n        activeItemId,\n        setActiveItemId,\n      }}\n    >\n      <UploadProgress />\n      <SelectContainer items={data?.items || []}>\n        <Box d=\"flex\" justifyContent=\"center\">\n          <Box\n            padding={50}\n            width={[\n              '100%', // base\n              '100%', // 480px upwards\n              '90%', // 768px upwards\n            ]}\n          >\n            <Box\n              height={80}\n              d=\"flex\"\n              minWidth=\"100%\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              flexWrap=\"wrap\"\n            >\n              <Box\n                d=\"flex\"\n                width=\"150px\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n              >\n                <CreateFiles />\n                <CreateLink />\n                <NoteModal />\n              </Box>\n              <Filter filter={filter} variables={variables} />\n              {/* <Text fontSize=\"4xl\" margin={0}>\n                Cataloged\n              </Text> */}\n              <SignOut />\n            </Box>\n            <br />\n            {initialLoad ? (\n              <Box\n                d=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                height=\"100%\"\n                width=\"100%\"\n              >\n                <Spinner size=\"xl\" />\n              </Box>\n            ) : (\n              <GridFeed query={query} nextPage={nextPage} />\n            )}\n            {networkStatus === 7 && !loading && !isLastPage && (\n              <Waypoint bottomOffset={-400} onEnter={nextPage} />\n            )}\n          </Box>\n        </Box>\n      </SelectContainer>\n    </FeedContext.Provider>\n  );\n};\n","import { useState } from 'react';\n\nexport const usePagination = ({ pageLength } = { pageLength: 20 }) => {\n  const [pageNum, setPageNum] = useState(0);\n\n  return {\n    paginationVariables: { skip: pageNum * pageLength, first: pageLength },\n    setPageNum,\n    nextPage: () => setPageNum(pageNum + 1),\n    prevPage: () => setPageNum(pageNum - 1),\n  };\n};\n\n// export const useFilers = () => {\n//   const [] = useState();\n// };\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Feed } from '../components/Feed';\n\nexport const DashboardContainer = styled.div`\n  height: 100vh;\n`;\n\nexport const Dashboard = () => {\n  return (\n    <DashboardContainer>\n      <Feed />\n    </DashboardContainer>\n  );\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport gql from 'graphql-tag';\n\nimport { Box } from '@chakra-ui/core';\n\nimport { Labels } from '../components/Labels';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst GET_MOST_RECENT_ITEM = gql`\n  query mostRecentItem($type: String) {\n    mostRecentItem(type: $type) {\n      id\n      type\n\n      labels {\n        id\n        name\n      }\n\n      link {\n        id\n        href\n        notes\n\n        image\n        favicon\n        title\n        description\n      }\n\n      file {\n        id\n        name\n        extension\n        isUploaded\n        fullUrl\n        squareUrl\n      }\n    }\n  }\n`;\n\nconst useMostRecentItem = () => {\n  const { loading, data } = useQuery(GET_MOST_RECENT_ITEM, {\n    variables: { type: 'link' },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  return { loading, data, item: !loading && data ? data.mostRecentItem : null };\n};\n\nexport const Playground = () => {\n  const { item } = useMostRecentItem();\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n      <Box\n        d=\"flex\"\n        margin={20}\n        padding={20}\n        size={400}\n        width={600}\n        // borderStyle=\"solid\"\n        // borderColor=\"lightgray\"\n        // borderWidth={2}\n        rounded=\"lg\"\n        justifyContent=\"center\"\n      >\n        <Labels />\n      </Box>\n    </Box>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Location, History } from 'history';\nimport queryString from 'query-string';\nimport { useAuth } from '../hooks/useAuth';\nimport { Redirect } from 'react-router';\nimport { googleSignIn } from '../graphql/__generated__/googleSignIn';\n\nconst GOOGLE_SIGN_IN_MUTATION = gql`\n  mutation googleSignIn($code: String!) {\n    googleSignIn(code: $code) {\n      token\n    }\n  }\n`;\n\nexport const GoogleCallback = ({\n  location,\n  devMode = true || process.env.NODE_ENV === 'production',\n}: {\n  location: Location;\n  history: History;\n  devMode: boolean;\n}) => {\n  const { setToken, user } = useAuth();\n  const values = queryString.parse(location.search);\n\n  const [googleSignIn] = useMutation<googleSignIn>(GOOGLE_SIGN_IN_MUTATION, {\n    variables: { code: values.code },\n    onCompleted: data => {\n      if (data && !!data.googleSignIn.token && setToken) {\n        setToken(data.googleSignIn.token);\n      }\n    },\n    onError: error => {\n      console.log('error!', error);\n    },\n  });\n\n  useEffect(() => {\n    if (devMode) {\n      googleSignIn();\n    }\n  }, []);\n\n  return !user ? null : <Redirect to=\"/\" />;\n};\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { Box, Button } from '@chakra-ui/core';\nimport { getGoogleUrl } from '../graphql/__generated__/getGoogleUrl';\n\nexport const GET_GOOGLE_URL = gql`\n  query getGoogleUrl {\n    googleURL\n  }\n`;\n\nexport const SignIn = () => {\n  const { loading, error, data } = useQuery<getGoogleUrl>(GET_GOOGLE_URL);\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      width=\"100vw\"\n      height=\"100vh\"\n    >\n      <Button\n        isLoading={loading}\n        isDisabled={!!(loading && data && data.googleURL) || !!error}\n        onClick={() => {\n          if (data && data.googleURL) {\n            window.location.replace(data.googleURL);\n          }\n        }}\n      >\n        Sign in with Google\n      </Button>\n    </Box>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { Box, Spinner } from '@chakra-ui/core';\n\nimport { GET_GOOGLE_URL } from './SignIn';\nimport { getGoogleUrl } from '../graphql/__generated__/getGoogleUrl';\n\nexport const ForceSignIn = () => {\n  const { data } = useQuery<getGoogleUrl>(GET_GOOGLE_URL);\n\n  useEffect(() => {\n    if (data) {\n      window.location.replace(data.googleURL);\n    }\n  }, [data]);\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      width=\"100vw\"\n      height=\"100vh\"\n    >\n      <Spinner size=\"xl\" />\n    </Box>\n  );\n};\n","import { theme as t } from '@chakra-ui/core';\n\nexport const theme = {\n  ...t,\n  colors: {\n    ...t.colors,\n    lightgrey: '#f6f8fa',\n  },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloClient } from 'apollo-client';\nimport { createUploadLink } from 'apollo-upload-client';\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { ThemeProvider } from '@chakra-ui/core';\n\nimport * as serviceWorker from './serviceWorker';\nimport { GRAPHQL_ENDPOINT } from './config';\nimport { Router } from './Router';\nimport { Auth } from './components/Auth';\nimport { theme } from './ui/theme';\nimport { GlobalModalProvider } from './components/GlobalModal';\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('token');\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `JWT ${token}` : '',\n    },\n  };\n});\n\nconst cache = new InMemoryCache({\n  dataIdFromObject: o => o.id,\n});\n\nconst link = authLink.concat(createUploadLink({ uri: GRAPHQL_ENDPOINT }));\n\nconst client = new ApolloClient({\n  link,\n  cache,\n});\n\nconst appNode = (\n  <ApolloProvider client={client}>\n    <Auth>\n      <GlobalModalProvider>\n        <ThemeProvider theme={theme}>\n          <Router />\n        </ThemeProvider>\n      </GlobalModalProvider>\n    </Auth>\n  </ApolloProvider>\n);\n\nReactDOM.render(appNode, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { Dashboard } from './routes/Dashboard';\nimport { Note } from './components/Note';\nimport { Playground } from './routes/Playground';\n\nimport { GoogleCallback } from './routes/GoogleCallback';\nimport { ForceSignIn } from './routes/ForceSignIn';\nimport { useAuth } from './hooks/useAuth';\n\nexport const Router = () => {\n  const auth = useAuth();\n\n  const Root = auth.user ? Dashboard : ForceSignIn;\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Root} />\n        <Route path=\"/note/:id\" exact component={Note} />\n        <Route path=\"/google/redirect\" exact component={GoogleCallback} />\n        <Route path=\"/playground\" exact component={Playground} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n"],"sourceRoot":""}