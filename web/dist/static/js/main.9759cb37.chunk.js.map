{"version":3,"sources":["serviceWorker.js","config.ts","components/LazyImage.tsx","components/Click.tsx","components/SelectContainer.tsx","components/SelectOnClick.tsx","components/Auth.tsx","hooks/useAuth.tsx","components/Labels.tsx","components/FileItem.tsx","components/LinkItem.tsx","graphql/note.ts","components/MarkdownEditor.jsx","graphql/item.ts","components/GlobalModal.tsx","hooks/useOptimisticDeleteItem.ts","components/Note.tsx","hooks/usePrevious.tsx","hooks/useHotKey.jsx","components/NoteModal.tsx","components/NoteItem.tsx","components/Item.tsx","hooks/usePaste.tsx","util/helpers.ts","components/CreateFiles.tsx","components/CreateLink.tsx","components/SignOut.tsx","components/UploadProgress.tsx","components/Filter.tsx","components/Feed.tsx","hooks/useVariables.tsx","routes/Dashboard.tsx","routes/Playground.tsx","routes/GoogleCallback.tsx","routes/ForceSignIn.tsx","ui/theme.ts","index.tsx","Router.tsx"],"names":["Boolean","window","location","hostname","match","LazyImage","src","isReady","showSpinner","loadingContainerProps","placeholderIcon","props","fit","useState","isImageLoaded","setIsImageLoaded","isBroken","setIsBroken","width","height","setDimensions","useEffect","img","Image","onload","onerror","newProps","rounded","Box","d","justifyContent","alignItems","backgroundColor","Spinner","size","Icon","name","Click","debouncedSingleClick","useRef","debounce","onSingleClick","hasClickHandler","onDoubleClick","onMetaClick","onShiftClick","children","cursor","onClick","event","metaKey","shiftKey","current","cancel","SelectContext","React","createContext","SelectContainer","items","initialSelectedMap","Map","getId","id","selectedMap","updateSelectedMap","immutableUpdateMap","map","entries","isItemSelected","item","has","selectItem","set","deselectItem","delete","toggleItem","Provider","value","onToggleThunk","onSelectRangeThunk","newItem","lastItem","Array","from","values","lastItemIdx","findIndex","elem","newItemIdx","startIdx","endIdx","slice","forEach","selectRange","onResetAndSelectThunk","newSelectedMap","resetAndSelect","SelectOnClick","useContext","GET_AUTH_USER","gql","AuthContext","localStorageUser","localStorage","getItem","useAuth","ITEM_LABEL_RESPONSE_FRAGMENT","CONNECT_LABEL_TO_ITEM_MUTATION","DISCONNECT_LABEL_FROM_ITEM_MUTATION","CREATE_LABEL_MUTATION","Labels","canAddLabels","initialSelectedLabels","selectedLabels","onSelectedLabelChange","setCursor","setSelectedLabels","isEditing","setIsEditing","firstFieldRef","useDisclosure","isOpen","onOpen","onClose","user","refetchUser","isManagingOwnState","length","useForm","defaultValues","search","getValues","setValue","register","watch","useMutation","onCompleted","a","async","connectLabelToItem","connecting","loading","disconnectLabelFromItem","createLabel","labelSet","labels","filteredLabels","_","take","filter","find","existingLabel","toLowerCase","includes","addAction","label","l","variables","data","itemId","Stack","flexDirection","alignContent","flexWrap","Popover","placement","initialFocusRef","Button","aria-label","variant","mr","zIndex","p","returnFocus","persistentFocus","bg","spacing","shouldWrapChildren","onKeyDown","key","onKeyUp","keyCode","FormControl","InputGroup","Input","pr","placeholder","ref","h","isLoading","idx","Tag","variantColor","onMouseOver","e","preventDefault","stopPropagation","icon","mb","labelIdx","labelId","removeAction","FileItem","file","tooltip","clickProps","ITEM_ACTUAL_WIDTH","objectFit","isUploaded","squareUrl","extension","Modal","scrollBehavior","closeOnEsc","m","fullUrl","maxWidth","LinkItem","link","url","URL","href","open","image","fontSize","title","NOTE_FULL_FRAGMENT","CREATE_NOTE_MUTATION","UPDATE_NOTE_MUTATION","Prism","languages","markdown","extend","insertBefore","blockquote","pattern","alias","code","inside","punctuation","lookbehind","hr","list","variable","string","bold","italic","util","clone","DEFAULT_VALUE","text","MarkdownNode","styled","span","leaf","underlined","css","Leaf","attributes","MarkdownEditor","memo","onChange","editor","useMemo","withHistory","withReact","createEditor","renderLeaf","useCallback","decorate","node","path","ranges","Text","isText","getLength","token","content","reduce","t","tokens","tokenize","start","end","push","type","offset","ReactEditor","focus","autoFocus","ModalName","ITEM_FULL_FRAGMENT","DELETE_ITEM_MUTATION","useOptimisticDeleteItem","optimisticResponse","__typename","deleteItem","update","cache","readQuery","query","FEED_QUERY","newListItems","i","writeQuery","serializeToPlainText","nodes","n","Node","join","EMPTY_NOTE_VALUE","marks","Note","note","JSON","parse","raw","textRef","noteId","stringify","removeMarkdown","updateNote","debouncedUpdateNote","nextText","slateVal","usePrevious","_globalCallbacks","useHotKey","keybind","handler","isGlobal","shouldBind","Mousetrap","_originalStopCallback","prototype","stopCallback","element","combo","sequence","this","paused","call","bindGlobal","keys","callback","action","bind","init","handlerAsCallback","mousetrap","prevShouldBind","unbind","NoteModal","setIsOpen","close","client","useApolloClient","refetchQueries","createNote","readFragment","fragment","Tooltip","hasArrow","mt","NoteItem","border","overflow","ITEM_WIDTH","Item","margin","padding","ItemHeader","ml","fontWeight","whiteSpace","style","textOverflow","formatRelative","Date","createdAt","ItemContentContainer","baseHoverState","menuHoverState","itemRef","onMouseEnter","onMouseLeave","position","roundedBottomRight","roundedBottomLeft","bottom","background","opacity","IconButton","usePaste","onPaste","onPasteCallback","document","getElementsByTagName","addEventListener","removeEventListener","randomString","Math","random","toString","substring","getFilterVariablesFromFormValues","console","log","GlobalModalContext","INITIAL_STATE","CREATE_FILES_MODAL","CREATE_LINK_MODAL","CREATE_NOTE_MODAL","FILTER_FEED_MODAL","VIEW_FILE_MODAL","useGlobalModal","modalName","openModal","closeModal","toggleModal","globalModalState","closeAll","isModalOpen","UPLOAD_FILE_MUTATION","GENERATE_SIGNED_URLS","CreateFiles","files","setFiles","isUploading","setIsUploading","fileCount","Object","fileVals","fileEntries","processFiles","isSubmitting","isWorking","generateSignedUrls","s3Keys","signedURLArgs","signedUrls","uploadGroup","Promise","all","s3PutUrl","fetch","method","body","headers","tempKey","originalFilename","uploadGroupId","returnValue","onDrop","acceptedFiles","c","clipboardData","blob","getAsFile","useDropzone","getRootProps","getInputProps","verticalAlign","rest","isDisabled","color","CreateLinkSchema","yup","shape","required","CREATE_LINK_MUTATION","CreateLink","validationSchema","mode","handleSubmit","errors","cleanup","createLink","pastedText","originalEvent","getData","onSubmit","display","defaultValue","message","target","SignOut","auth","signOut","UploadProgress","INITIAL_VALUES","Filter","state","setState","formValues","get","getFormValuesFromFilterVariables","leftIcon","isCentered","closeOnOverlayClick","FormLabel","FormHelperText","Select","GridItem","div","Feed","rowLength","isLastPage","setIsLastPage","pageNum","setPage","paginationVariables","pageLength","setPageNum","skip","first","nextPage","prevPage","usePagination","useQuery","notifyOnNetworkStatusChange","networkStatus","refetch","fetchMore","prevQuery","last","initialLoad","minWidth","filterVariables","top","gridColumnGap","gridRowGap","gridTemplateColumns","bottomOffset","onEnter","updateQuery","prev","fetchMoreResult","DashboardContainer","Dashboard","GET_MOST_RECENT_ITEM","Playground","mostRecentItem","useMostRecentItem","GOOGLE_SIGN_IN_MUTATION","GoogleCallback","devMode","setToken","queryString","googleSignIn","onError","error","to","GET_GOOGLE_URL","ForceSignIn","replace","googleURL","theme","colors","lightgrey","authLink","setContext","authorization","InMemoryCache","dataIdFromObject","o","concat","createUploadLink","uri","ApolloClient","appNode","fetchPolicy","setItem","me","removeItem","setGlobalModalState","updateModal","k","ThemeProvider","Root","exact","component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9759cb37.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const GRAPHQL_ENDPOINT =\n  process.env.NODE_ENV === 'development' ? 'http://localhost:5000' : '/graphql';\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Spinner,\n  Image as ChackraImage,\n  Icon,\n  IconProps,\n} from '@chakra-ui/core';\n\nexport interface LazeImageProps {\n  [key: string]: any;\n  isReady?: boolean;\n  loadingContainerProps?: any;\n  showSpinner?: boolean;\n  placeholderIcon?: IconProps['name'];\n}\n\nexport const LazyImage = ({\n  src,\n  isReady = true,\n  showSpinner = true,\n  loadingContainerProps,\n  placeholderIcon = 'view-off',\n  fit = false,\n  ...props\n}: LazeImageProps) => {\n  const [isImageLoaded, setIsImageLoaded] = useState<string | null>(null);\n  const [isBroken, setIsBroken] = useState(false);\n\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    if (isReady) {\n      const img = new Image();\n      img.src = src;\n\n      img.onload = () => setIsImageLoaded(img.src);\n      img.onerror = () => setIsBroken(true);\n\n      setDimensions({\n        width: img.width,\n        height: img.height,\n      });\n    }\n  }, [isReady]);\n\n  const newProps = {\n    rounded: 'lg',\n    ...props,\n  };\n\n  const isReadyToDisplay = !isReady || !isImageLoaded;\n\n  // const isLandscape = dimensions.width > dimensions.height;\n\n  return isReadyToDisplay || !src || isBroken ? (\n    <Box\n      d=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      rounded=\"lg\"\n      backgroundColor=\"lightGrey\"\n      {...newProps}\n      {...loadingContainerProps}\n    >\n      {src && showSpinner ? (\n        <Spinner size=\"xl\" />\n      ) : (\n        <Icon size=\"50px\" name={isBroken ? 'warning' : placeholderIcon} />\n      )}\n    </Box>\n  ) : (\n    <ChackraImage src={src} {...newProps} />\n  );\n};\n","import React, { useRef, MouseEvent } from 'react';\nimport { debounce } from 'lodash';\n\nexport interface ClickProps {\n  children: (args: {\n    cursor?: 'pointer';\n    onClick: any;\n    onDoubleClick: () => void;\n  }) => any;\n  onSingleClick?: () => void;\n  onDoubleClick?: () => void;\n  onMetaClick?: () => void;\n  onShiftClick?: () => void;\n}\n\nexport const Click = (props: ClickProps) => {\n  const delay = 200;\n\n  const debouncedSingleClick = useRef(\n    debounce(() => {\n      if (props.onSingleClick) props.onSingleClick();\n    }, delay),\n  );\n\n  const onSingleClick = (event: MouseEvent<any, MouseEvent>) => {\n    if (props.onMetaClick && event.metaKey) props.onMetaClick();\n    else if (props.onShiftClick && event.shiftKey) props.onShiftClick();\n    else debouncedSingleClick.current();\n  };\n\n  const onDoubleClick = () => {\n    debouncedSingleClick.current.cancel();\n    if (props.onDoubleClick) props.onDoubleClick();\n  };\n\n  const hasClickHandler = !!(\n    props.onSingleClick ||\n    props.onDoubleClick ||\n    props.onMetaClick ||\n    props.onShiftClick\n  );\n\n  return props.children({\n    ...(hasClickHandler ? { cursor: 'pointer' } : {}),\n    onClick: onSingleClick,\n    onDoubleClick: onDoubleClick,\n  });\n};\n","import React, { useState } from 'react';\n\nexport const SelectContext = React.createContext<{ [key: string]: any }>({});\n\nexport interface SelectContainerProps {\n  children: any;\n  items?: { id: string; [key: string]: any }[];\n  getId?: Function;\n  initialSelectedMap?: Map<string, any>;\n}\n\nexport interface Item {\n  [key: string]: any;\n}\n\nexport const SelectContainer = ({\n  children,\n  items,\n  initialSelectedMap = new Map(),\n  getId = ({ id }: { id: string }) => id,\n}: SelectContainerProps) => {\n  const [selectedMap, updateSelectedMap] = useState(initialSelectedMap);\n\n  const immutableUpdateMap = (map: Map<any, any>) =>\n    updateSelectedMap(new Map(map.entries()));\n\n  const isItemSelected = (item: Item) => {\n    const id = getId(item);\n    return selectedMap.has(id);\n  };\n\n  const selectItem = (item: Item) => {\n    const id = getId(item);\n    selectedMap.set(id, item);\n    immutableUpdateMap(selectedMap);\n  };\n\n  const resetAndSelect = (item: Item) => {\n    const newSelectedMap = new Map();\n    const id = getId(item);\n    newSelectedMap.set(id, item);\n    immutableUpdateMap(newSelectedMap);\n  };\n\n  const selectRange = (newItem: Item) => {\n    if (!items) return;\n\n    const lastItem = Array.from(selectedMap.values())[selectedMap.size - 1];\n\n    const lastItemIdx = items.findIndex(\n      (elem: Item) => getId(elem) === getId(lastItem),\n    );\n\n    const newItemIdx = items.findIndex(\n      (elem: Item) => getId(elem) === getId(newItem),\n    );\n\n    const [startIdx, endIdx] =\n      lastItemIdx > newItemIdx\n        ? [newItemIdx, lastItemIdx]\n        : [lastItemIdx, newItemIdx];\n\n    [newItem, ...items.slice(startIdx, endIdx)].forEach((item: Item) => {\n      const id = getId(item);\n      selectedMap.set(id, item);\n    });\n\n    immutableUpdateMap(selectedMap);\n  };\n\n  const deselectItem = (item: Item) => {\n    const id = getId(item);\n    selectedMap.delete(id);\n    immutableUpdateMap(selectedMap);\n  };\n\n  const toggleItem = (item: Item) => {\n    if (isItemSelected(item)) deselectItem(item);\n    else selectItem(item);\n  };\n\n  const onToggleThunk = (item: Item) => () => toggleItem(item);\n  const onSelectRangeThunk = (item: Item) => () => selectRange(item);\n  const onResetAndSelectThunk = (item: Item) => () => {\n    if (isItemSelected(item)) return immutableUpdateMap(new Map());\n    return resetAndSelect(item);\n  };\n\n  return (\n    <SelectContext.Provider\n      value={{\n        selectedMap,\n        isItemSelected,\n        selectItem,\n        deselectItem,\n        toggleItem,\n        onToggleThunk,\n        onSelectRangeThunk,\n        onResetAndSelectThunk,\n      }}\n    >\n      {children}\n    </SelectContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\n\nimport { Click, ClickProps } from './Click';\nimport { SelectContext } from './SelectContainer';\n\nexport interface SelectOnClickProps extends ClickProps {\n  item: { id: string; [key: string]: any };\n}\n\nexport const SelectOnClick = ({\n  item,\n  children,\n  ...props\n}: SelectOnClickProps) => {\n  const {\n    onToggleThunk,\n    onSelectRangeThunk,\n    onResetAndSelectThunk,\n  } = useContext(SelectContext);\n\n  return (\n    <Click\n      // onSingleClick={on(item)}\n      onMetaClick={onToggleThunk(item)}\n      onShiftClick={onSelectRangeThunk(item)}\n      {...props}\n    >\n      {children}\n    </Click>\n  );\n};\n","import React, { useState, useEffect, SetStateAction, Dispatch } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { getAuthUser_me } from './__generated__/getAuthUser';\nimport { googleSignIn_googleSignIn } from '../routes/__generated__/googleSignIn';\n\nconst GET_AUTH_USER = gql`\n  query getAuthUser {\n    me {\n      id\n      fullName\n      email\n\n      labels {\n        id\n        name\n      }\n    }\n  }\n`;\n\ntype ContextProps = {\n  user: getAuthUser_me;\n  token: googleSignIn_googleSignIn['token'] | null;\n  setToken: Dispatch<SetStateAction<string | null>>;\n  signOut: Function;\n  refetchUser: () => Promise<any>;\n};\n\nexport const AuthContext = React.createContext<ContextProps>(\n  {} as ContextProps,\n);\n\nconst localStorageUser = localStorage.getItem('user');\n\nconst getParsedUser = (): getAuthUser_me | null =>\n  localStorageUser ? JSON.parse(localStorageUser) : null;\n\nexport const Auth = ({ children }: { children: JSX.Element }) => {\n  const { data, loading, refetch } = useQuery(GET_AUTH_USER, {\n    fetchPolicy: 'network-only',\n  });\n\n  const [token, setToken] = useState<googleSignIn_googleSignIn['token'] | null>(\n    localStorage.getItem('token'),\n  );\n\n  const signOut = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    window.location.replace('/');\n  };\n\n  useEffect(() => {\n    if (token) {\n      localStorage.setItem('token', token);\n      if (!data || data.me) refetch();\n    } else if (!loading) {\n      localStorage.removeItem('token');\n    }\n  }, [token]);\n\n  useEffect(() => {\n    if (data && data.me) {\n      localStorage.setItem('user', JSON.stringify(data.me));\n    } else if (!loading) {\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n    }\n  }, [loading]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: data ? data.me : getParsedUser(),\n        token,\n        setToken,\n        refetchUser: refetch,\n        signOut,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { AuthContext } from '../components/Auth';\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport FocusLock from 'react-focus-lock';\nimport _ from 'lodash';\nimport useForm from 'react-hook-form';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport {\n  Box,\n  Input,\n  Tag,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverArrow,\n  InputRightElement,\n  FormControl,\n  Icon,\n  Stack,\n  TagIcon,\n  TagLabel,\n  Button,\n  InputGroup,\n  useDisclosure,\n} from '@chakra-ui/core';\nimport { useAuth } from '../hooks/useAuth';\n\nconst ITEM_LABEL_RESPONSE_FRAGMENT = gql`\n  fragment ItemLabelResponseFragment on Item {\n    id\n\n    labels {\n      id\n      name\n    }\n  }\n`;\n\nconst CONNECT_LABEL_TO_ITEM_MUTATION = gql`\n  mutation connectLabelToItem($name: String!, $itemId: String!) {\n    connectLabelToItem(name: $name, itemId: $itemId) {\n      ...ItemLabelResponseFragment\n    }\n  }\n\n  ${ITEM_LABEL_RESPONSE_FRAGMENT}\n`;\n\nconst DISCONNECT_LABEL_FROM_ITEM_MUTATION = gql`\n  mutation disconnectLabelFromItem($labelId: String!, $itemId: String!) {\n    disconnectLabelFromItem(labelId: $labelId, itemId: $itemId) {\n      ...ItemLabelResponseFragment\n    }\n  }\n\n  ${ITEM_LABEL_RESPONSE_FRAGMENT}\n`;\n\nconst CREATE_LABEL_MUTATION = gql`\n  mutation createLabel($name: String!) {\n    createLabel(name: $name) {\n      # user\n      id\n\n      labels {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const Labels = ({\n  item = null,\n  canAddLabels = true,\n  selectedLabels: initialSelectedLabels,\n  onSelectedLabelChange,\n}: {\n  item?: any;\n  selectedLabels?: any[];\n  canAddLabels?: boolean;\n  onSelectedLabelChange?: Function;\n}) => {\n  const [cursor, setCursor] = useState(0);\n\n  // Only relevant when managing it's own state.<\n  const [selectedLabels, setSelectedLabels] = useState<any[]>([]);\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const firstFieldRef = useRef(null);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { user, refetchUser } = useAuth();\n\n  const isManagingOwnState = !item;\n\n  useEffect(() => {\n    if (initialSelectedLabels) setSelectedLabels(initialSelectedLabels);\n  }, []);\n\n  useEffect(() => {\n    if (onSelectedLabelChange && selectedLabels !== initialSelectedLabels)\n      onSelectedLabelChange(selectedLabels);\n  }, [selectedLabels && selectedLabels.length]);\n\n  const { getValues, setValue, register, watch } = useForm({\n    defaultValues: { search: '' },\n  });\n\n  const [connectLabelToItem, { loading: connecting }] = useMutation(\n    CONNECT_LABEL_TO_ITEM_MUTATION,\n    {\n      onCompleted: async () => {\n        if (refetchUser) await refetchUser();\n        setValue('search', '');\n      },\n    },\n  );\n\n  const [disconnectLabelFromItem] = useMutation(\n    DISCONNECT_LABEL_FROM_ITEM_MUTATION,\n  );\n\n  const [createLabel] = useMutation(CREATE_LABEL_MUTATION);\n\n  const { search } = getValues();\n\n  const labelSet = isManagingOwnState ? selectedLabels : item.labels;\n\n  const filteredLabels = _.take(\n    user.labels.filter(({ name }: { name: string }) => {\n      return (\n        !labelSet.find(\n          (existingLabel: { name: string }) => existingLabel.name === name,\n        ) && name.toLowerCase().includes(search.toLowerCase())\n      );\n    }),\n    4,\n  );\n\n  // Rerender each time\n  watch('search');\n\n  useEffect(() => {\n    setCursor(0);\n  }, [search]);\n\n  useEffect(() => {\n    if (cursor > filteredLabels.length - 1) {\n      setCursor(filteredLabels.length - 1);\n    }\n  }, [connecting]);\n\n  useEffect(() => {\n    if (isOpen && !isEditing) setIsEditing(true);\n    else if (!isOpen && isEditing) setIsEditing(false);\n  }, [isOpen]);\n\n  const addAction = async (name: string) => {\n    if (isManagingOwnState) {\n      let label = user.labels.find((l: any) => l.name === name);\n\n      if (!label) {\n        const { data } = await createLabel({ variables: { name } });\n        label = data.createLabel.labels.find((l: any) => l.name === name);\n      }\n\n      setSelectedLabels([...selectedLabels, label]);\n      setValue('search', '');\n    } else {\n      connectLabelToItem({\n        variables: {\n          name,\n          itemId: item.id,\n        },\n      });\n    }\n  };\n\n  const removeAction = ({ id, name }: { id: string; name: string }) => {\n    if (isManagingOwnState) {\n      const labelIdx = selectedLabels.findIndex(label => label.name === name);\n\n      setSelectedLabels([\n        ...selectedLabels.slice(0, labelIdx),\n        ...selectedLabels.slice(labelIdx + 1),\n      ]);\n    } else {\n      disconnectLabelFromItem({\n        variables: { labelId: id, itemId: item.id },\n      });\n    }\n  };\n\n  const onKeyDown = (event: any) => {\n    if (event.metaKey && event.key === 'Enter' && search) {\n      addAction(search);\n    } else if (event.key === 'Enter' && filteredLabels[cursor]) {\n      addAction(filteredLabels[cursor].name);\n    }\n  };\n\n  const onKeyUp = (event: any) => {\n    if (event.keyCode === 38) {\n      if (cursor > 0) {\n        setCursor(cursor - 1);\n      } else {\n        setCursor(filteredLabels.length - 1);\n      }\n    } else if (event.keyCode === 40) {\n      if (cursor < filteredLabels.length - 1) {\n        setCursor(cursor + 1);\n      } else {\n        setCursor(0);\n      }\n    }\n  };\n\n  const createFromSearch = () => !connecting && addAction(search);\n\n  return (\n    <Stack\n      d=\"flex\"\n      flexDirection=\"row\"\n      alignItems=\"flex-start\"\n      alignContent=\"flex-start\"\n      flexWrap=\"wrap\"\n    >\n      <Popover\n        placement=\"bottom\"\n        isOpen={isOpen}\n        initialFocusRef={firstFieldRef}\n        onOpen={onOpen}\n        onClose={() => {\n          setValue('search', '');\n          setCursor(0);\n          if (onClose) onClose();\n        }}\n      >\n        {canAddLabels && (\n          <PopoverTrigger>\n            <Button\n              size=\"xs\"\n              height=\"25px\"\n              onClick={onOpen}\n              aria-label=\"add labels\"\n              variant=\"outline\"\n              mr={2}\n              cursor=\"pointer\"\n            >\n              <Icon size=\"10px\" name=\"add\" />\n            </Button>\n          </PopoverTrigger>\n        )}\n        <PopoverContent zIndex={4} p={5}>\n          <FocusLock returnFocus persistentFocus={false}>\n            <PopoverArrow bg=\"white\" />\n            <Stack\n              spacing={4}\n              shouldWrapChildren\n              onKeyDown={onKeyDown}\n              onKeyUp={onKeyUp}\n            >\n              <FormControl>\n                <InputGroup size=\"md\">\n                  <Input\n                    pr=\"4.5rem\"\n                    placeholder=\"Label\"\n                    name=\"search\"\n                    ref={register}\n                  />\n                  <InputRightElement width=\"4.5rem\">\n                    <Button\n                      size=\"sm\"\n                      h=\"1.75rem\"\n                      isLoading={connecting}\n                      onClick={createFromSearch}\n                    >\n                      Add\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              {!!filteredLabels.length && (\n                <Stack spacing={2}>\n                  {filteredLabels.map(({ name }, idx) => (\n                    <Tag\n                      size=\"md\"\n                      key={name}\n                      cursor=\"pointer\"\n                      variantColor={idx === cursor ? 'cyan' : 'gray'}\n                      onMouseOver={() => setCursor(idx)}\n                      onClick={e => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        addAction(name);\n                      }}\n                    >\n                      <TagIcon icon=\"add\" size=\"6px\" />\n                      <TagLabel>{name}</TagLabel>\n                    </Tag>\n                  ))}\n                </Stack>\n              )}\n            </Stack>\n          </FocusLock>\n        </PopoverContent>\n      </Popover>\n      {labelSet.map(({ id, name }: { id: string; name: string }) => (\n        <Tag\n          size=\"md\"\n          key={name}\n          mr={2}\n          mb={5}\n          cursor=\"pointer\"\n          onClick={() => removeAction({ id, name })}\n        >\n          <TagIcon size=\"12px\" icon=\"delete\" />\n          <TagLabel>{name}</TagLabel>\n        </Tag>\n      ))}\n    </Stack>\n  );\n};\n","// @ts-nocheck\nimport React, { useEffect, useState } from 'react';\n\nimport { LazyImage } from './LazyImage';\nimport { SelectOnClick } from './SelectOnClick';\nimport {\n  useDisclosure,\n  SlideIn,\n  Modal,\n  ModalOverlay,\n  ModalCloseButton,\n  ModalBody,\n  ModalHeader,\n  ModalContent,\n  ModalFooter,\n  Box,\n  Button,\n  Stack,\n  Text,\n} from '@chakra-ui/core';\nimport { Labels } from './Labels';\nimport { feed_items } from './__generated__/feed';\nimport { ITEM_ACTUAL_WIDTH, ItemHeader, ItemContentContainer } from './Item';\n\nexport interface ItemWithFile extends feed_items {\n  file: feed_items_file;\n}\n\nexport const FileItem = ({ item }: { item: ItemWithFile }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure(false);\n\n  const { file } = item;\n\n  return (\n    <>\n      <ItemContentContainer item={item} tooltip=\"Open file\">\n        <SelectOnClick onSingleClick={onOpen} item={item}>\n          {clickProps => (\n            <LazyImage\n              width={ITEM_ACTUAL_WIDTH}\n              height=\"200px\"\n              objectFit=\"cover\"\n              isReady={file.isUploaded}\n              src={\n                !file.isUploaded\n                  ? 'https://react.semantic-ui.com/images/wireframe/image.png'\n                  : file.squareUrl\n              }\n              {...clickProps}\n            />\n          )}\n        </SelectOnClick>\n        <ItemHeader item={item} onSingleClick={onOpen}>\n          {file.name}.{file.extension}\n        </ItemHeader>\n      </ItemContentContainer>\n      <Modal\n        size=\"100vw\"\n        onClose={onClose}\n        scrollBehavior=\"inside\"\n        isOpen={isOpen}\n        closeOnEsc={false}\n        m={0}\n      >\n        <ModalOverlay />\n        <ModalContent m={0}>\n          <ModalHeader>\n            {file.name}.{file.extension}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            justifyContent=\"center\"\n            flexWrap=\"wrap\"\n            alignItems=\"center\"\n          >\n            {/* <Box\n              p={5}\n              d=\"flex\"\n              height=\"100%\"\n              justifyContent=\"center\"\n              width=\"70%\"\n            > */}\n            <LazyImage\n              rounded\n              isReady={file.isUploaded}\n              src={file.fullUrl}\n              height=\"100%\"\n              // width=\"auto\"\n              maxWidth=\"100%\"\n              p={3}\n            />\n            {/* </Box> */}\n            {/* <Box\n              p={5}\n              d=\"flex\"\n              pt={100}\n              width=\"30%\"\n              height=\"100%\"\n              justifyContent=\"flex-start\"\n              flexWrap=\"wrap\"\n            >\n              <Stack spacing={5}>\n                <Text fontSize=\"xl\" fontWeight=\"bold\">\n                  {file.name}.{file.extension}\n                </Text>\n                <Labels item={item} />\n              </Stack>\n            </Box> */}\n          </ModalBody>\n          <ModalFooter d=\"flex\" justifyContent=\"center\">\n            <Box m={3}>\n              <Labels item={item} />\n            </Box>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","import React from 'react';\nimport { Box, Icon } from '@chakra-ui/core';\n\nimport { LazyImage } from './LazyImage';\nimport { SelectOnClick } from './SelectOnClick';\nimport { feed_items, feed_items_link } from './__generated__/feed';\nimport { ITEM_ACTUAL_WIDTH, ItemHeader, ItemContentContainer } from './Item';\n\nexport interface ItemWithLink extends feed_items {\n  link: feed_items_link;\n}\n\nexport const LinkItem = ({ item }: { item: ItemWithLink }) => {\n  const { link } = item;\n\n  const url = new URL(link.href);\n\n  return (\n    <>\n      <ItemContentContainer item={item} tooltip={`Visit ${url.hostname}`}>\n        <SelectOnClick onSingleClick={() => window.open(link.href)} item={item}>\n          {clickProps => (\n            <LazyImage\n              src={link.image}\n              width={ITEM_ACTUAL_WIDTH}\n              height=\"200px\"\n              objectFit=\"cover\"\n              placeholderIcon=\"external-link\"\n              {...clickProps}\n            />\n          )}\n        </SelectOnClick>\n      </ItemContentContainer>\n      <ItemHeader item={item} onSingleClick={() => window.open(link.href)}>\n        <Icon name=\"link\" fontSize=\"s\" mr={2} /> {link.title || link.href}\n      </ItemHeader>\n    </>\n  );\n};\n","import gql from 'graphql-tag';\n\nexport const NOTE_FULL_FRAGMENT = gql`\n  fragment NoteFull on Note {\n    id\n\n    raw\n    text\n\n    createdAt\n    updatedAt\n\n    item {\n      id\n      type\n\n      labels {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const CREATE_NOTE_MUTATION = gql`\n  mutation createNote($raw: String!, $text: String!) {\n    createNote(raw: $raw, text: $text) {\n      ...NoteFull\n    }\n  }\n\n  ${NOTE_FULL_FRAGMENT}\n`;\n\nexport const UPDATE_NOTE_MUTATION = gql`\n  mutation updateNote($noteId: String!, $raw: String!, $text: String!) {\n    updateNote(noteId: $noteId, raw: $raw, text: $text) {\n      ...NoteFull\n    }\n  }\n\n  ${NOTE_FULL_FRAGMENT}\n`;\n","import Prism from 'prismjs';\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { Slate, Editable, ReactEditor, withReact } from 'slate-react';\nimport { Text, createEditor } from 'slate';\nimport { withHistory } from 'slate-history';\nimport styled, { css } from 'styled-components';\nimport { Box } from '@chakra-ui/core';\n\n// eslint-disable-next-line\nPrism.languages.markdown=Prism.languages.extend(\"markup\",{}),Prism.languages.insertBefore(\"markdown\",\"prolog\",{blockquote:{pattern:/^>(?:[\\t ]*>)*/m,alias:\"punctuation\"},code:[{pattern:/^(?: {4}|\\t).+/m,alias:\"keyword\"},{pattern:/``.+?``|`[^`\\n]+`/,alias:\"keyword\"}],title:[{pattern:/\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,alias:\"important\",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\\s*)#+.+/m,lookbehind:!0,alias:\"important\",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\\s*)([*-])([\\t ]*\\2){2,}(?=\\s*$)/m,lookbehind:!0,alias:\"punctuation\"},list:{pattern:/(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,lookbehind:!0,alias:\"punctuation\"},\"url-reference\":{pattern:/!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,inside:{variable:{pattern:/^(!?\\[)[^\\]]+/,lookbehind:!0},string:/(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,punctuation:/^[\\[\\]!:]|[<>]/},alias:\"url\"},bold:{pattern:/(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,lookbehind:!0,inside:{punctuation:/^\\*\\*|^__|\\*\\*$|__$/}},italic:{pattern:/(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,lookbehind:!0,inside:{punctuation:/^[*_]|[*_]$/}},url:{pattern:/!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,inside:{variable:{pattern:/(!?\\[)[^\\]]+(?=\\]$)/,lookbehind:!0},string:{pattern:/\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/}}}}),Prism.languages.markdown.bold.inside.url=Prism.util.clone(Prism.languages.markdown.url),Prism.languages.markdown.italic.inside.url=Prism.util.clone(Prism.languages.markdown.url),Prism.languages.markdown.bold.inside.italic=Prism.util.clone(Prism.languages.markdown.italic),Prism.languages.markdown.italic.inside.bold=Prism.util.clone(Prism.languages.markdown.bold); // prettier-ignore\n\nconst DEFAULT_VALUE = [\n  {\n    children: [\n      {\n        text:\n          'Slate is flexible enough to add **decorations** that can format text based on its content. For example, this editor has **Markdown** preview decorations on it, to make it _dead_ simple to make an editor with built-in Markdown previewing.',\n      },\n    ],\n  },\n  {\n    children: [{ text: '## Try it out!' }],\n  },\n  {\n    children: [{ text: 'Try it out for yourself!' }],\n  },\n];\n\nconst MarkdownNode = styled.span`\n  font-size: 16px;\n  font-weight: ${props => props.leaf.bold && 'bold'};\n  font-style: ${props => props.leaf.italic && 'italic'};\n  text-decoration: ${props => props.leaf.underlined && 'underline'};\n  ${props =>\n    props.leaf.title &&\n    css`\n      display: inline-block;\n      font-weight: bold;\n      font-size: 20px;\n      margin: 20px 0 10px 0;\n    `}\n  ${props =>\n    props.leaf.list &&\n    css`\n      padding-left: 10px;\n      font-size: 20px;\n      line-height: 10px;\n    `}\n  ${props =>\n    props.leaf.hr &&\n    css`\n      display: block;\n      text-align: center;\n      border-bottom: 2px solid #ddd;\n    `}\n  ${props =>\n    props.leaf.blockquote &&\n    css`\n      display: inline-block;\n      border-left: 2px solid #ddd;\n      padding-left: 10px;\n      color: #aaa;\n      font-style: italic;\n    `}\n  ${props =>\n    props.leaf.code &&\n    css`\n      font-family: monospace;\n      background-color: #eee;\n      padding: 3px;\n    `}\n`;\n\nconst Leaf = ({ attributes, children, leaf }) => {\n  return (\n    <MarkdownNode {...attributes} leaf={leaf}>\n      {children}\n    </MarkdownNode>\n  );\n};\n\nexport const MarkdownEditor = React.memo(\n  ({ value = DEFAULT_VALUE, onChange }) => {\n    const editor = useMemo(() => withHistory(withReact(createEditor())), []);\n\n    const editorRef = React.useRef(null);\n\n    const renderLeaf = useCallback(props => <Leaf {...props} />, []);\n\n    const decorate = useCallback(([node, path]) => {\n      const ranges = [];\n\n      if (!Text.isText(node)) {\n        return ranges;\n      }\n\n      const getLength = token => {\n        if (typeof token === 'string') {\n          return token.length;\n        } else if (typeof token.content === 'string') {\n          return token.content.length;\n        } else {\n          return token.content.reduce((l, t) => l + getLength(t), 0);\n        }\n      };\n\n      const tokens = Prism.tokenize(node.text, Prism.languages.markdown);\n      let start = 0;\n\n      for (const token of tokens) {\n        const length = getLength(token);\n        const end = start + length;\n\n        if (typeof token !== 'string') {\n          ranges.push({\n            [token.type]: true,\n            anchor: { path, offset: start },\n            focus: { path, offset: end },\n          });\n        }\n\n        start = end;\n      }\n\n      return ranges;\n    }, []);\n\n    useEffect(() => {\n      ReactEditor.focus(editor);\n    }, []);\n\n    return (\n      <Box>\n        <Slate autoFocus editor={editor} value={value} onChange={onChange}>\n          <Editable\n            decorate={decorate}\n            renderLeaf={renderLeaf}\n            placeholder=\"Write a note...\"\n          />\n        </Slate>\n      </Box>\n    );\n  },\n);\n","import gql from 'graphql-tag';\nimport { NOTE_FULL_FRAGMENT } from './note';\n\nexport const ITEM_FULL_FRAGMENT = gql`\n  fragment ItemFull on Item {\n    id\n    type\n\n    createdAt\n    updatedAt\n\n    labels {\n      id\n      name\n    }\n\n    link {\n      id\n      href\n      notes\n\n      image\n      favicon\n      title\n      description\n    }\n\n    file {\n      id\n      name\n      extension\n      isUploaded\n      fullUrl\n      squareUrl\n    }\n\n    note {\n      ...NoteFull\n    }\n  }\n\n  ${NOTE_FULL_FRAGMENT}\n`;\n\nexport const ITEM_WITH_LABELS_FRAGMENT = gql`\n  fragment ItemWithLabels on Item {\n    id\n    type\n\n    labels {\n      id\n      name\n    }\n  }\n`;\n\nexport const DELETE_ITEM_MUTATION = gql`\n  mutation deleteItem($itemId: String!) {\n    deleteItem(itemId: $itemId) {\n      # user\n      id\n    }\n  }\n`;\n","import React, { FunctionComponent } from 'react';\n\nexport enum ModalName {\n  CREATE_FILES_MODAL,\n  CREATE_LINK_MODAL,\n  CREATE_NOTE_MODAL,\n  FILTER_FEED_MODAL,\n  VIEW_FILE_MODAL,\n}\n\ntype ContextProps = {\n  globalModalState: {\n    [key in ModalName]: boolean;\n  };\n  openModal: (modalName: ModalName) => any;\n  closeModal: (modalName: ModalName) => any;\n  toggleModal: (modalName: ModalName) => any;\n  closeAll: () => any;\n};\n\nexport const GlobalModalContext = React.createContext<ContextProps>(\n  {} as ContextProps,\n);\n\nconst INITIAL_STATE = {\n  [ModalName.CREATE_FILES_MODAL]: false,\n  [ModalName.CREATE_LINK_MODAL]: false,\n  [ModalName.CREATE_NOTE_MODAL]: false,\n  [ModalName.FILTER_FEED_MODAL]: false,\n  [ModalName.VIEW_FILE_MODAL]: false,\n};\n\nexport const GlobalModalProvider: FunctionComponent = ({ children }) => {\n  const [globalModalState, setGlobalModalState] = React.useState(INITIAL_STATE);\n\n  const updateModal = (modalName: ModalName, isOpen: boolean) =>\n    setGlobalModalState({\n      ...INITIAL_STATE,\n      [modalName]: isOpen,\n    });\n\n  const openModal = (modalName: ModalName) => updateModal(modalName, true);\n  const closeModal = (modalName: ModalName) => updateModal(modalName, false);\n  const toggleModal = (modalName: ModalName) =>\n    setGlobalModalState(state => ({\n      ...INITIAL_STATE,\n      [modalName]: !state[modalName],\n    }));\n\n  const closeAll = () =>\n    setGlobalModalState(\n      // @ts-ignore\n      Object.keys(globalModalState).reduce(\n        (p, k) => ({\n          ...p,\n          [k]: false,\n        }),\n        {} as {\n          [k in ModalName]: false;\n        },\n      ),\n    );\n\n  return (\n    <GlobalModalContext.Provider\n      value={{\n        globalModalState,\n        openModal,\n        closeModal,\n        toggleModal,\n        closeAll,\n      }}\n    >\n      {children}\n    </GlobalModalContext.Provider>\n  );\n};\n\nexport const useGlobalModal = (modalName: ModalName) => {\n  const {\n    openModal,\n    closeModal,\n    toggleModal,\n    globalModalState,\n    closeAll,\n  } = React.useContext(GlobalModalContext);\n\n  return {\n    closeAll,\n    openModal: () => openModal(modalName),\n    closeModal: () => closeModal(modalName),\n    toggleModal: () => toggleModal(modalName),\n    isModalOpen: globalModalState[modalName],\n  };\n};\n","import { useMutation } from '@apollo/react-hooks';\n\nimport { DELETE_ITEM_MUTATION } from '../graphql/item';\nimport { FEED_QUERY } from '../components/Feed';\nimport { feed_items } from '../components/__generated__/feed';\n\nexport const useOptimisticDeleteItem = (item: any) =>\n  useMutation(DELETE_ITEM_MUTATION, {\n    variables: { itemId: item.id },\n    optimisticResponse: {\n      __typename: 'Mutation',\n      deleteItem: {\n        id: '1234',\n        __typename: 'Item',\n      },\n    },\n    update: async (cache: any) => {\n      const data = cache.readQuery({\n        query: FEED_QUERY,\n      });\n\n      const newListItems = data.items.filter(\n        (i: feed_items) => i.id !== item.id,\n      );\n\n      await cache.writeQuery({\n        query: FEED_QUERY,\n        data: { items: newListItems },\n      });\n    },\n  });\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Node } from 'slate';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport removeMarkdown from 'remove-markdown';\n\nimport { MarkdownEditor } from './MarkdownEditor';\n\nimport useForm from 'react-hook-form';\nimport { useOptimisticDeleteItem } from '../hooks/useOptimisticDeleteItem';\n\nimport { UPDATE_NOTE_MUTATION } from '../graphql/note';\n\nexport const serializeToPlainText = (nodes: any[]) => {\n  return nodes.map(n => Node.string(n)).join('\\n');\n};\n\nexport const EMPTY_NOTE_VALUE = [\n  {\n    children: [{ text: '', marks: [] }],\n  },\n];\n\nexport const EMPTY_NOTE = {\n  raw: EMPTY_NOTE_VALUE,\n  text: serializeToPlainText(EMPTY_NOTE_VALUE),\n};\n\nexport const Note = ({ note }: { note: any }) => {\n  const { getValues, watch, setValue, register } = useForm({\n    defaultValues: {\n      value: JSON.parse(note.raw),\n    },\n  });\n\n  const { value } = getValues();\n\n  const textRef = useRef(serializeToPlainText(value));\n\n  const [updateNote] = useMutation(UPDATE_NOTE_MUTATION, {\n    variables: {\n      noteId: note.id,\n      raw: JSON.stringify(value),\n      text: removeMarkdown(textRef.current),\n    },\n  });\n\n  const { current: debouncedUpdateNote } = useRef(_.debounce(updateNote, 500));\n\n  const [deleteItem] = useOptimisticDeleteItem(note.item);\n\n  watch('value');\n\n  // Listen for form changes.\n  useEffect(() => {\n    register({ name: 'value' });\n  }, [register]);\n\n  useEffect(() => {\n    const nextText = serializeToPlainText(value);\n\n    if (nextText !== textRef.current) {\n      debouncedUpdateNote(value);\n    }\n\n    textRef.current = nextText;\n  }, [value]);\n\n  // Clean up and delete if needed.\n  useEffect(\n    () => () => {\n      debouncedUpdateNote.cancel();\n      if (!textRef.current) deleteItem();\n    },\n    [],\n  );\n\n  return (\n    <MarkdownEditor\n      // @ts-ignore\n      value={value}\n      onChange={(slateVal: any[]) => {\n        setValue('value', slateVal);\n      }}\n    />\n  );\n};\n","import { useRef, useEffect } from 'react';\n\nexport const usePrevious = (value: any): any => {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n};\n","import React, { useEffect } from 'react';\nimport Mousetrap from 'mousetrap';\nimport { usePrevious } from './usePrevious';\n\nconst isMousetrapExtended = false;\nconst _globalCallbacks = {};\n\nexport const useHotKey = (\n  keybind,\n  handler,\n  { isGlobal = false, shouldBind = true, ref = null } = {},\n) => {\n  useEffect(() => {\n    if (!isMousetrapExtended) {\n      // Took this code from the janky mouse trap docs\n      (function(Mousetrap) {\n        var _originalStopCallback = Mousetrap.prototype.stopCallback;\n\n        // @ts-ignore\n\n        Mousetrap.prototype.stopCallback = function(\n          e,\n          element,\n          combo,\n          sequence,\n        ) {\n          var self = this;\n\n          if (self.paused) {\n            return true;\n          }\n\n          // @ts-ignore\n          if (_globalCallbacks[combo] || _globalCallbacks[sequence]) {\n            return false;\n          }\n\n          return _originalStopCallback.call(self, e, element, combo);\n        };\n\n        // @ts-ignore\n        Mousetrap.prototype.bindGlobal = function(keys, callback, action) {\n          var self = this;\n          self.bind(keys, callback, action);\n\n          if (keys instanceof Array) {\n            for (var i = 0; i < keys.length; i++) {\n              // @ts-ignore\n\n              _globalCallbacks[keys[i]] = true;\n            }\n            return;\n          }\n          // @ts-ignore\n\n          _globalCallbacks[keys] = true;\n        };\n\n        Mousetrap.init();\n      })(Mousetrap);\n    }\n  }, []);\n\n  const handlerAsCallback = React.useCallback(\n    e => {\n      if (e.preventDefault) e.preventDefault();\n      handler();\n    },\n    [handler],\n  );\n\n  const { current: mousetrap } = React.useRef(\n    // ref ? new Mousetrap(ref) :\n    Mousetrap,\n  );\n\n  const prevShouldBind = usePrevious(shouldBind);\n\n  const bind = () => {\n    mousetrap[isGlobal ? 'bindGlobal' : 'bind'](keybind, handlerAsCallback);\n  };\n\n  const unbind = () => {\n    mousetrap.unbind(keybind);\n  };\n\n  useEffect(() => {\n    return () => {\n      unbind();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (shouldBind) bind();\n    else if (!shouldBind && prevShouldBind) unbind();\n  }, [shouldBind]);\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useMutation, useApolloClient } from '@apollo/react-hooks';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalCloseButton,\n  ModalBody,\n  ModalHeader,\n  ModalContent,\n  Box,\n  Button,\n  Icon,\n  Spinner,\n  ModalFooter,\n  Tooltip,\n} from '@chakra-ui/core';\n\nimport { CREATE_NOTE_MUTATION, NOTE_FULL_FRAGMENT } from '../graphql/note';\nimport { feed_items_note, feed_items } from './__generated__/feed';\n\nimport { EMPTY_NOTE_VALUE, serializeToPlainText, Note } from './Note';\nimport { Labels } from './Labels';\nimport { useHotKey } from '../hooks/useHotKey';\n\nexport const NoteModal = ({\n  item,\n  children,\n}: {\n  item?: feed_items;\n  children?: (childProps: {\n    isOpen: boolean;\n    open: () => void;\n    close: () => void;\n  }) => any;\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const open = () => setIsOpen(true);\n  const close = () => setIsOpen(false);\n\n  const client = useApolloClient();\n\n  useHotKey('c n', () => {\n    if (!note) setIsOpen(true);\n  });\n\n  const [createNote, { data }] = useMutation(CREATE_NOTE_MUTATION, {\n    variables: {\n      raw: JSON.stringify(EMPTY_NOTE_VALUE),\n      text: serializeToPlainText(EMPTY_NOTE_VALUE),\n    },\n    refetchQueries: ['feed'],\n  });\n\n  useEffect(() => {\n    if (isOpen && !item) createNote();\n  }, [isOpen]);\n\n  const note =\n    item && item.note\n      ? item.note\n      : data &&\n        client.readFragment({\n          id: data.createNote.id,\n          fragment: NOTE_FULL_FRAGMENT,\n        });\n\n  return (\n    <>\n      {children ? (\n        children({ isOpen, open, close })\n      ) : (\n        <Tooltip\n          hasArrow\n          placement=\"bottom\"\n          label=\"or press c + n\"\n          aria-label=\"Add note\"\n        >\n          <Button variant=\"solid\" cursor=\"pointer\" onClick={open}>\n            <Icon name=\"plus-square\" />\n          </Button>\n        </Tooltip>\n      )}\n\n      <Modal\n        size=\"full\"\n        scrollBehavior=\"inside\"\n        isOpen={isOpen}\n        onClose={close}\n        closeOnEsc={false}\n      >\n        <ModalOverlay />\n        <ModalContent height={700} width={700}>\n          <ModalHeader></ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Box p={5} height=\"100%\">\n              {note ? (\n                <Note note={note} />\n              ) : (\n                <Box d=\"flex\" justifyContent=\"center\">\n                  <Spinner />\n                </Box>\n              )}\n            </Box>\n          </ModalBody>\n          {note && (\n            <ModalFooter justifyContent=\"flex-start\">\n              <Box mt={10}>\n                <Labels item={note.item} />\n              </Box>\n            </ModalFooter>\n          )}\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","import React from 'react';\nimport { Box, Text } from '@chakra-ui/core';\n\nimport { feed_items, feed_items_note } from './__generated__/feed';\nimport { SelectOnClick } from './SelectOnClick';\nimport { NoteModal } from './NoteModal';\nimport { ItemContentContainer, ItemHeader } from './Item';\n\nexport interface ItemWithNote extends feed_items {\n  note: feed_items_note;\n}\n\nexport const NoteItem = ({ item }: { item: ItemWithNote }) => {\n  const { note } = item;\n\n  return (\n    <NoteModal item={item}>\n      {({ open }) => (\n        <SelectOnClick onSingleClick={open} item={item}>\n          {clickProps => (\n            <>\n              <ItemContentContainer\n                border=\"1px solid black\"\n                rounded=\"lg\"\n                p={5}\n                overflow=\"hidden\"\n                tooltip=\"Open note\"\n                item={item}\n                {...clickProps}\n              >\n                <Text fontSize=\"xs\">{note.text}</Text>\n              </ItemContentContainer>\n              <ItemHeader item={item}>{note.text}</ItemHeader>\n            </>\n          )}\n        </SelectOnClick>\n      )}\n    </NoteModal>\n  );\n};\n","import React, { useContext } from 'react';\nimport { formatRelative } from 'date-fns';\nimport _ from 'lodash';\n\nimport { FileItem } from './FileItem';\nimport { LinkItem } from './LinkItem';\nimport { SelectContext } from './SelectContainer';\nimport {\n  Box,\n  Icon,\n  Stack,\n  BoxProps,\n  Text,\n  Tooltip,\n  useDisclosure,\n  IconButton,\n} from '@chakra-ui/core';\nimport { NoteItem } from './NoteItem';\nimport { feed_items } from './__generated__/feed';\nimport { Click } from './Click';\nimport { useHotKey } from '../hooks/useHotKey';\nimport { useOptimisticDeleteItem } from '../hooks/useOptimisticDeleteItem';\n\nexport const ITEM_INNER_PADDING = 5;\nexport const ITEM_ACTUAL_WIDTH = 270;\nexport const ITEM_CONTENT_HEIGHT = 200;\nexport const ITEM_WIDTH = ITEM_ACTUAL_WIDTH + ITEM_INNER_PADDING;\n\nexport const Item = ({ item }: { item: feed_items }) => {\n  let node = null;\n\n  const { isItemSelected } = useContext(SelectContext);\n\n  switch (item.type) {\n    case 'file':\n      //@ts-ignore\n      node = item.file ? <FileItem item={item} /> : null;\n      break;\n\n    case 'note':\n      //@ts-ignore\n      node = item.note && item.note.text ? <NoteItem item={item} /> : null;\n      break;\n\n    case 'link':\n      //@ts-ignore\n      node = item.link ? <LinkItem item={item} /> : null;\n      break;\n\n    default:\n      //@ts-ignore\n      node = null;\n      break;\n  }\n\n  if (!node) return null;\n\n  return (\n    <Box\n      d=\"flex\"\n      justifyContent=\"center\"\n      margin={0}\n      width={ITEM_ACTUAL_WIDTH}\n      maxWidth={ITEM_ACTUAL_WIDTH}\n      height={315}\n      padding={`${ITEM_INNER_PADDING}px`}\n    >\n      <Stack p=\"4\">\n        <Box>\n          {isItemSelected(item) && false && (\n            <Icon\n              name=\"check-circle\"\n              position=\"absolute\"\n              color=\"#add8e6\"\n              size=\"20\"\n              padding=\"10px\"\n            />\n          )}\n          {node}\n        </Box>\n        {/* <Labels item={item} canAddLabels={false} /> */}\n      </Stack>\n    </Box>\n  );\n};\n\nexport const ItemHeader = ({\n  children,\n  item,\n  ...props\n}: {\n  children: any;\n  item: feed_items;\n  [k: string]: any;\n}) => (\n  <Click {...props}>\n    {clickProps => (\n      <Box {...clickProps} mt={4} ml={1}>\n        <Text\n          maxWidth={ITEM_ACTUAL_WIDTH}\n          fontSize=\"lg\"\n          fontWeight=\"bold\"\n          whiteSpace=\"nowrap\"\n          overflow=\"hidden\"\n          style={{\n            textOverflow: 'ellipsis',\n          }}\n          mb={3}\n        >\n          {children}\n        </Text>\n\n        <Text>{formatRelative(new Date(item.createdAt), new Date())}</Text>\n      </Box>\n    )}\n  </Click>\n);\n\ninterface ItemContentContainer extends BoxProps {\n  tooltip: string;\n  item: feed_items;\n}\n\nexport const ItemContentContainer = ({\n  children,\n  tooltip,\n  item,\n  ...props\n}: ItemContentContainer) => {\n  const baseHoverState = useDisclosure();\n  const menuHoverState = useDisclosure();\n\n  const itemRef = React.useRef(null);\n\n  const [deleteItem] = useOptimisticDeleteItem(item);\n\n  const hotKeyHandler = () => {\n    if (baseHoverState.isOpen) deleteItem();\n  };\n\n  useHotKey('d', hotKeyHandler, {\n    ref: itemRef.current,\n    shouldBind: baseHoverState.isOpen,\n  });\n\n  return (\n    <Tooltip\n      hasArrow\n      label={tooltip}\n      aria-label={tooltip}\n      placement=\"top\"\n      maxWidth={200}\n      isOpen={baseHoverState.isOpen && !menuHoverState.isOpen}\n      onOpen={baseHoverState.onOpen}\n    >\n      <Box\n        onMouseEnter={baseHoverState.onOpen}\n        onMouseLeave={baseHoverState.onClose}\n        position=\"relative\"\n      >\n        {baseHoverState.isOpen && (\n          <Box\n            d=\"flex\"\n            justifyContent=\"flex-end\"\n            p={2}\n            alignItems=\"center\"\n            roundedBottomRight=\"lg\"\n            roundedBottomLeft=\"lg\"\n            position=\"absolute\"\n            bottom={0}\n            height={10}\n            width={ITEM_ACTUAL_WIDTH}\n            zIndex={10}\n            backgroundColor=\"lightgrey\"\n            background=\"rgb(211,211,211, 0.8);\"\n            opacity={9}\n            onMouseOver={menuHoverState.onOpen}\n            onMouseLeave={menuHoverState.onClose}\n          >\n            <Tooltip\n              hasArrow\n              label=\"press d while hovering over the item\"\n              aria-label=\"delete item\"\n              placement=\"bottom\"\n            >\n              <IconButton\n                size=\"sm\"\n                icon=\"delete\"\n                cursor=\"pointer\"\n                aria-label=\"delete item\"\n                onClick={() => deleteItem()}\n              />\n            </Tooltip>\n          </Box>\n        )}\n        <Box\n          width={ITEM_ACTUAL_WIDTH}\n          height={ITEM_CONTENT_HEIGHT}\n          ref={itemRef}\n          {...props}\n        >\n          {children}\n        </Box>\n      </Box>\n    </Tooltip>\n  );\n};\n","import { useEffect, useCallback, useRef } from 'react';\n\nexport const usePaste = ({ onPaste }: { onPaste: Function }) => {\n  const onPasteCallback = useRef((e: any) => {\n    if (onPaste) onPaste(e);\n  });\n\n  useEffect(() => {\n    // @ts-ignore\n    document\n      .getElementsByTagName('body')[0]\n      .addEventListener('paste', onPasteCallback.current);\n    return () => {\n      // @ts-ignore\n      document\n        .getElementsByTagName('body')[0]\n        .removeEventListener('paste', onPasteCallback.current);\n    };\n  }, []);\n};\n","import _ from 'lodash';\n\nexport const randomString = (): string =>\n  Math.random()\n    .toString(36)\n    .substring(2, 15) +\n  Math.random()\n    .toString(36)\n    .substring(2, 15);\n\nexport const getFilterVariablesFromFormValues = ({\n  search,\n  labels,\n  type,\n}: {\n  type: string;\n  search: string;\n  labels: any;\n}) => {\n  const variables = {};\n\n  _.set(variables, 'search', search);\n\n  _.set(variables, 'type', type !== 'all' ? type : null);\n\n  _.set(\n    variables,\n    `where.labels.${labels.length ? 'some' : 'none'}.id.in`,\n    labels.map(({ id }: { id: string }) => id),\n  );\n\n  console.log(variables);\n\n  return variables;\n};\n\nexport const getFormValuesFromFilterVariables = (variables: any, user: any) => {\n  const labels = _.get(variables, 'where.labels.some.id.in', []);\n\n  return {\n    search: variables.search,\n    type: variables.type || 'all',\n    labels: labels.map((id: string) =>\n      user.labels.find((label: any) => label.id === id),\n    ),\n  };\n};\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalCloseButton,\n  ModalBody,\n  ModalHeader,\n  ModalContent,\n  ModalFooter,\n  Box,\n  Button,\n  Text,\n  Icon,\n  Image,\n  Tooltip,\n} from '@chakra-ui/core';\nimport { useMutation, useApolloClient } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { usePaste } from '../hooks/usePaste';\nimport { randomString } from '../util/helpers';\nimport { SpecialFile } from '../util/aws';\nimport { processFiles_processFiles } from './__generated__/processFiles';\nimport { useGlobalModal, ModalName } from './GlobalModal';\nimport { useHotKey } from '../hooks/useHotKey';\n\nconst UPLOAD_FILE_MUTATION = gql`\n  mutation processFiles($uploadGroupId: String) {\n    processFiles(uploadGroupId: $uploadGroupId) {\n      id\n      squareUrl\n      fullUrl\n    }\n  }\n`;\n\nconst GENERATE_SIGNED_URLS = gql`\n  mutation generateSignedUrls($signedURLArgs: [SignedURLArgs!]) {\n    generateSignedUrls(signedURLArgs: $signedURLArgs) {\n      signedUrls\n      uploadGroup {\n        id\n      }\n    }\n  }\n`;\n\nexport const CreateFiles = () => {\n  const [files, setFiles] = useState<{\n    [key: string]: SpecialFile;\n  }>({});\n\n  const [isUploading, setIsUploading] = useState(false);\n\n  const { isModalOpen, openModal, toggleModal, closeModal } = useGlobalModal(\n    ModalName.CREATE_FILES_MODAL,\n  );\n\n  useHotKey('c f', toggleModal);\n\n  const fileCount = Object.keys(files).length;\n  const fileVals = Object.values(files);\n  const fileEntries = Object.entries(files);\n\n  const [processFiles, { loading: isSubmitting }] = useMutation<\n    processFiles_processFiles\n  >(UPLOAD_FILE_MUTATION, {\n    refetchQueries: ['feed'],\n  });\n\n  const isWorking = isUploading || isSubmitting;\n\n  const [generateSignedUrls] = useMutation(GENERATE_SIGNED_URLS);\n\n  useEffect(() => {\n    (async () => {\n      if (isUploading) {\n        const s3Keys = fileVals.map(file => `temp/${file.id}-${file.name}`);\n\n        try {\n          const {\n            data: {\n              generateSignedUrls: { signedUrls, uploadGroup },\n            },\n          } = await generateSignedUrls({\n            variables: {\n              signedURLArgs: fileVals.map(({ type, name }, idx) => ({\n                name,\n                key: s3Keys[idx],\n                type: type,\n              })),\n            },\n          });\n\n          await Promise.all(\n            signedUrls.map(async (s3PutUrl: any, idx: number) => {\n              const file = fileVals[idx];\n              const key = s3Keys[idx];\n\n              await fetch(s3PutUrl, {\n                method: 'PUT',\n                body: file,\n                headers: {\n                  'Access-Control-Allow-Headers': 'Content-Type',\n                  'Content-Type': file.type,\n                },\n              });\n\n              return { tempKey: key, originalFilename: file.name };\n            }),\n          );\n\n          setIsUploading(false);\n          closeModal();\n          setFiles({});\n\n          await processFiles({ variables: { uploadGroupId: uploadGroup.id } });\n        } catch (e) {\n          setIsUploading(false);\n        }\n      }\n    })();\n  }, [isUploading]);\n\n  useEffect(() => {\n    if (isWorking) {\n      const handler = (event: any) => {\n        event.preventDefault();\n        event.returnValue = '';\n      };\n\n      window.addEventListener('beforeunload', handler);\n\n      return () => {\n        window.removeEventListener('beforeunload', handler);\n      };\n    }\n  }, [isWorking]);\n\n  const onDrop = useCallback(\n    acceptedFiles => {\n      setFiles({\n        ...files,\n        ...acceptedFiles.reduce(\n          (p: { [key: string]: SpecialFile }, c: SpecialFile) => {\n            const id = randomString();\n            c.id = id;\n\n            return {\n              ...p,\n              [id]: c,\n            };\n          },\n          {},\n        ),\n      });\n    },\n    [files],\n  );\n\n  const onPaste = async (e: any) => {\n    const { items } = e.clipboardData;\n\n    for (let i = 0; i < items.length; i++) {\n      const item = e.clipboardData.items[i];\n      const blob = item.getAsFile();\n\n      if (blob) {\n        const id = randomString();\n\n        blob.id = id;\n\n        setFiles({\n          ...files,\n          [id]: blob,\n        });\n      }\n    }\n  };\n\n  usePaste({ onPaste });\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n  return (\n    <>\n      <Tooltip\n        hasArrow\n        placement=\"bottom\"\n        label=\"or press c + f\"\n        aria-label=\"Add file(s)\"\n      >\n        <Button cursor=\"pointer\" variant=\"solid\" onClick={openModal}>\n          <Icon name=\"attachment\" />\n        </Button>\n      </Tooltip>\n      <Modal\n        closeOnEsc={false}\n        size=\"600px\"\n        isOpen={isModalOpen}\n        scrollBehavior=\"inside\"\n        onClose={() => {\n          closeModal();\n          setFiles({});\n        }}\n      >\n        <ModalOverlay />\n        <ModalContent height=\"80%\">\n          <ModalHeader>Upload files</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody {...getRootProps()}>\n            <input {...getInputProps()} />\n            {!!fileCount && (\n              <Box d=\"block\">\n                {fileEntries.map(([key, file]) => (\n                  <Box\n                    key={key}\n                    width=\"100%\"\n                    d=\"flex\"\n                    mb={15}\n                    justifyContent=\"space-between\"\n                  >\n                    <Box d=\"flex\" alignItems=\"center\" width=\"50%\">\n                      <Image\n                        key={file.path}\n                        src={\n                          'https://react.semantic-ui.com/images/wireframe/image.png' ||\n                          URL.createObjectURL(file)\n                        }\n                        objectFit=\"cover\"\n                        size=\"40px\"\n                        mr=\"15px\"\n                        rounded=\"lg\"\n                      />\n                      <Text>{file.name}</Text>\n                    </Box>\n                    <Box d=\"flex\" verticalAlign=\"middle\">\n                      {!isWorking && (\n                        <Button\n                          onClick={e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n\n                            const { [file.id]: temp, ...rest } = files;\n\n                            setFiles(rest);\n                          }}\n                        >\n                          Remove\n                        </Button>\n                      )}\n                    </Box>\n                  </Box>\n                ))}\n              </Box>\n            )}\n            {!fileCount && (\n              <Box>\n                <Text>Click, drag, or paste here</Text>\n              </Box>\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              isLoading={isWorking}\n              isDisabled={!fileCount}\n              onClick={async () => {\n                setIsUploading(true);\n              }}\n              color={!fileCount ? 'yellow' : 'green'}\n            >\n              <Box alignItems=\"center\">\n                <Icon name=\"add\" />{' '}\n                {!fileCount ? 'Waiting for images...' : 'Add'}\n              </Box>\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","import React, { useCallback, useState, useRef } from 'react';\nimport useForm from 'react-hook-form';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport * as yup from 'yup';\nimport { usePaste } from '../hooks/usePaste';\n\nimport {\n  Modal,\n  ModalOverlay,\n  ModalCloseButton,\n  ModalBody,\n  ModalHeader,\n  ModalContent,\n  ModalFooter,\n  Box,\n  Button,\n  Text,\n  Icon,\n  Tooltip,\n} from '@chakra-ui/core';\nimport { useGlobalModal, ModalName } from './GlobalModal';\nimport { useHotKey } from '../hooks/useHotKey';\n\nconst CreateLinkSchema = yup.object().shape({\n  href: yup\n    .string()\n    .url('Invalid URL')\n    .required('Required'),\n});\n\nconst CREATE_LINK_MUTATION = gql`\n  mutation createLink($href: String!) {\n    createLink(href: $href) {\n      id\n      href\n    }\n  }\n`;\n\nexport const CreateLink = () => {\n  const {\n    getValues,\n    setValue,\n    handleSubmit,\n    watch,\n    register,\n    errors,\n  } = useForm({\n    validationSchema: CreateLinkSchema,\n    mode: 'onBlur',\n  });\n\n  watch('href');\n\n  const { href } = getValues();\n\n  const { isModalOpen, openModal, toggleModal, closeModal } = useGlobalModal(\n    ModalName.CREATE_LINK_MODAL,\n  );\n\n  useHotKey('c l', toggleModal);\n\n  const [createLink, { loading }] = useMutation(CREATE_LINK_MUTATION, {\n    variables: { href },\n    refetchQueries: ['feed'],\n    onCompleted: () => cleanup(),\n  });\n\n  const onPaste = (e: any) => {\n    const pastedText = (e.originalEvent || e).clipboardData.getData(\n      'text/plain',\n    );\n\n    if (pastedText) {\n      setValue('href', pastedText);\n    }\n  };\n\n  usePaste({ onPaste });\n\n  const cleanup = () => {\n    closeModal();\n    setValue('href', '');\n  };\n\n  return (\n    <>\n      <Tooltip\n        hasArrow\n        placement=\"bottom\"\n        label=\"or press c + l\"\n        aria-label=\"Add link\"\n      >\n        <Button cursor=\"pointer\" variant=\"solid\" onClick={openModal}>\n          <Icon name=\"link\" />\n        </Button>\n      </Tooltip>\n\n      <Modal\n        onClose={cleanup}\n        scrollBehavior=\"inside\"\n        closeOnEsc={false}\n        isOpen={isModalOpen}\n      >\n        <ModalOverlay />\n\n        <ModalContent height=\"250px\">\n          <ModalHeader>Paste link</ModalHeader>\n          <ModalCloseButton />\n\n          <ModalBody>\n            <form\n              onSubmit={handleSubmit(async () => {\n                await createLink();\n              })}\n            >\n              <Box display=\"none\">\n                <input name=\"href\" defaultValue=\"\" ref={register} />\n                {errors.href && <Text color=\"red\">{errors.href.message}</Text>}\n              </Box>\n\n              {href && (\n                <Box width=\"100%\">\n                  <a href={href} target=\"_blank\">\n                    {href}\n                  </a>\n                </Box>\n              )}\n            </form>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              isLoading={loading}\n              isDisabled={!href}\n              onClick={async () => {\n                if (!loading) {\n                  await createLink();\n                }\n              }}\n              color={!href ? 'yellow' : 'green'}\n            >\n              <Box alignItems=\"center\">\n                <Icon name=\"add\" /> {!href ? 'Waiting for link...' : 'Add'}\n              </Box>\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","import React from 'react';\nimport { useAuth } from '../hooks/useAuth';\nimport { Button } from '@chakra-ui/core';\n\nexport const SignOut = () => {\n  const auth = useAuth();\n\n  return (\n    <Button\n      cursor=\"pointer\"\n      onClick={() => {\n        if (auth.signOut) auth.signOut();\n      }}\n    >\n      Sign out\n    </Button>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useQuery, useApolloClient } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport _ from 'lodash';\nimport { Box, Icon, Text } from '@chakra-ui/core';\nimport { usePrevious } from '../hooks/usePrevious';\n\nconst GET_UPLOAD_GROUPS = gql`\n  query getUploadGroups {\n    uploadGroups {\n      id\n      isComplete\n\n      files {\n        id\n        name\n        extension\n        isUploaded\n      }\n    }\n  }\n`;\n\nexport const UploadProgress = () => {\n  return null;\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const { data } = useQuery(GET_UPLOAD_GROUPS, {\n    pollInterval: 1000 * 1,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const client = useApolloClient();\n\n  const uploadGroups = _.get(data, 'uploadGroups', []);\n\n  const prevUploadGroups = usePrevious(uploadGroups);\n\n  useEffect(() => {\n    window.onbeforeunload = () => {\n      if (uploadGroups.length) {\n        return 'Data may be lost if you leave the page, are you sure?';\n      }\n    };\n  });\n\n  useEffect(() => {\n    if (!prevUploadGroups && uploadGroups.length) {\n      setIsMenuOpen(true);\n    } else if (\n      prevUploadGroups &&\n      prevUploadGroups.length &&\n      !uploadGroups.length\n    ) {\n      setTimeout(\n        () => async () => await client.reFetchObservableQueries(),\n        1000,\n      );\n    }\n  }, [uploadGroups.length]);\n\n  if (!uploadGroups.length && !isMenuOpen) return null;\n\n  const files = uploadGroups.reduce(\n    (p: any[], c: any) => [...p, ...c.files],\n    [],\n  );\n\n  const completedFiles = files.filter((file: any) => file.isUploaded);\n\n  return (\n    <Box\n      position=\"fixed\"\n      zIndex={1000}\n      backgroundColor=\"white\"\n      margin={20}\n      width={400}\n      height={200}\n      bottom={0}\n      padding={0}\n      left={0}\n      overflowY=\"hidden\"\n    >\n      <Box\n        backgroundColor=\"#E0E1EC\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        height={50}\n        margin={0}\n      >\n        <Text style={{ margin: 0 }}>\n          Completed {completedFiles.length} of {files.length}\n        </Text>\n        {completedFiles.length === files.length && (\n          <Icon onClick={() => setIsMenuOpen(false)} name=\"close\" />\n        )}\n      </Box>\n      <Box\n        margin={0}\n        paddingLeft={10}\n        paddingRight={10}\n        paddingBottom={60}\n        overflow=\"auto\"\n        height=\"100%\"\n      >\n        {_.orderBy(files, ({ isUploaded }) => !isUploaded).map((file: any) => (\n          <Box style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <span>\n              {file.name}\n              {file.extension}\n            </span>\n            {file.isUploaded ? (\n              <Icon color=\"green\" name=\"check\" />\n            ) : (\n              <Icon name=\"spinner\" />\n            )}\n          </Box>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport useForm from 'react-hook-form';\n\nimport {\n  Modal,\n  ModalOverlay,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  Button,\n  Input,\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  Tooltip,\n  Box,\n  Select,\n} from '@chakra-ui/core';\nimport { Labels } from './Labels';\nimport {\n  getFilterVariablesFromFormValues,\n  getFormValuesFromFilterVariables,\n} from '../util/helpers';\nimport { useAuth } from '../hooks/useAuth';\nimport { useGlobalModal, ModalName } from './GlobalModal';\nimport { useHotKey } from '../hooks/useHotKey';\n\nconst INITIAL_VALUES = {\n  search: '',\n  labels: [],\n  type: 'all',\n};\n\nexport const Filter = ({\n  filter,\n  variables,\n}: {\n  filter: any;\n  variables: any;\n}) => {\n  const [state, setState] = useState(INITIAL_VALUES);\n\n  const { user } = useAuth();\n\n  const { isModalOpen, openModal, closeModal, toggleModal } = useGlobalModal(\n    ModalName.FILTER_FEED_MODAL,\n  );\n\n  useHotKey('command command', toggleModal, { isGlobal: true });\n\n  const formValues = getFormValuesFromFilterVariables(variables, user);\n\n  const { search, labels, type } = state;\n\n  useEffect(() => {\n    if (isModalOpen) {\n      setState(formValues);\n    }\n  }, [isModalOpen]);\n\n  return (\n    <>\n      <Tooltip\n        hasArrow\n        placement=\"bottom\"\n        label=\"or press ⌘ + ⌘\"\n        aria-label=\"Filter feed\"\n      >\n        <Button\n          cursor=\"pointer\"\n          leftIcon=\"search\"\n          variant=\"outline\"\n          onClick={openModal}\n        >\n          Filter\n        </Button>\n      </Tooltip>\n\n      <Modal\n        isCentered\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        closeOnEsc\n        closeOnOverlayClick\n      >\n        <ModalOverlay />\n        <ModalContent rounded=\"lg\">\n          <ModalBody>\n            <Box p={5}>\n              <FormControl mb={5}>\n                <FormLabel>Search</FormLabel>\n                <Input\n                  name=\"search\"\n                  defaultValue=\"\"\n                  value={state.search}\n                  onChange={(e: any) => {\n                    setState({\n                      ...state,\n                      search: e.target.value,\n                    });\n                  }}\n                />\n                <FormHelperText id=\"email-helper-text\">\n                  Note content, file name, URL domain, etc.\n                </FormHelperText>\n              </FormControl>\n              <FormControl mb={5}>\n                <FormLabel>Type</FormLabel>\n                <Select\n                  placeholder=\"Select type\"\n                  value={state.type}\n                  onChange={(e: any) => {\n                    setState({\n                      ...state,\n                      type: e.target.value,\n                    });\n                  }}\n                >\n                  {[\n                    ['all', 'All'],\n                    ['link', 'Links'],\n                    ['file', 'Files'],\n                    ['note', 'Notes'],\n                  ].map(([value, text]) => (\n                    <option value={value}>{text}</option>\n                  ))}\n                </Select>\n                <FormHelperText id=\"email-helper-text\">\n                  File, link, note\n                </FormHelperText>\n              </FormControl>\n              <FormControl>\n                <FormLabel>Labels</FormLabel>\n                <Labels\n                  selectedLabels={formValues.labels}\n                  onSelectedLabelChange={(selectedLabels: any) => {\n                    setState({\n                      ...state,\n                      labels: selectedLabels,\n                    });\n                  }}\n                />\n              </FormControl>\n            </Box>\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              variant=\"outline\"\n              color=\"green\"\n              cursor=\"pointer\"\n              mr={3}\n              onClick={async () => {\n                await filter(getFilterVariablesFromFormValues(INITIAL_VALUES));\n                closeModal();\n              }}\n            >\n              Reset\n            </Button>\n            <Button\n              color=\"green\"\n              cursor=\"pointer\"\n              onClick={async () => {\n                await filter(\n                  getFilterVariablesFromFormValues({ labels, search, type }),\n                );\n                closeModal();\n              }}\n            >\n              Apply\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport { QueryResult } from 'react-apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport styled from 'styled-components';\nimport gql from 'graphql-tag';\n\nimport { Box, usePrevious, Spinner } from '@chakra-ui/core';\nimport { Waypoint } from 'react-waypoint';\n\nimport { Item, ITEM_WIDTH } from './Item';\nimport { SelectContainer } from './SelectContainer';\nimport { usePagination } from '../hooks/useVariables';\nimport { CreateFiles } from './CreateFiles';\nimport { CreateLink } from './CreateLink';\nimport { SignOut } from './SignOut';\nimport { UploadProgress } from './UploadProgress';\nimport { Filter } from './Filter';\nimport { NoteModal } from './NoteModal';\nimport { feed } from './__generated__/feed';\nimport { ITEM_FULL_FRAGMENT } from '../graphql/item';\n\nexport const FEED_QUERY = gql`\n  query feed(\n    $first: Int\n    $skip: Int\n    $search: String\n    $type: ItemType\n    $where: ItemWhereInput\n  ) {\n    items(\n      first: $first\n      skip: $skip\n      where: $where\n      search: $search\n      type: $type\n      orderBy: { createdAt: desc }\n    ) @connection(key: \"feed_items\") {\n      ...ItemFull\n    }\n  }\n\n  ${ITEM_FULL_FRAGMENT}\n`;\n\nexport const FEED_PAGE_LENGTH = 30;\n\nconst GridContainer = styled.div``;\n\nconst GridItem = styled.div`\n  justify-self: center;\n\n  @media (max-width: 400px) {\n    width: 100%;\n    /* max-width: inherit; */\n  }\n`;\n\nexport const Feed = ({ rowLength = 4 }: { rowLength?: number }) => {\n  const [isLastPage, setIsLastPage] = useState(false);\n  const [pageNum, setPage] = useState(1);\n\n  const { paginationVariables } = usePagination({\n    pageLength: FEED_PAGE_LENGTH,\n  });\n\n  const query = useQuery<feed>(FEED_QUERY, {\n    variables: paginationVariables,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const { loading, data, networkStatus, refetch, fetchMore, variables } = query;\n\n  const prevQuery: QueryResult<feed, Record<string, any>> = usePrevious(query);\n\n  // Spaghetti Pagination\n  useEffect(() => {\n    if (data && prevQuery.data) {\n      const isLast =\n        _.last(data.items)?.id === _.last(prevQuery.data.items)?.id;\n\n      if (isLast) setIsLastPage(true);\n      else if (pageNum === 0) setIsLastPage(false);\n\n      if (data.items.length > prevQuery.data.items.length) {\n        setPage(pageNum + 1);\n      } else if (\n        data.items.length < prevQuery.data.items.length &&\n        pageNum !== 0\n      ) {\n        setPage(0);\n      }\n    }\n  }, [data]);\n\n  const initialLoad = loading && !data;\n\n  const filter = (filterVariables: any) =>\n    refetch({\n      ...paginationVariables,\n      ...filterVariables,\n    });\n\n  return (\n    <>\n      <UploadProgress />\n      <SelectContainer items={data?.items || []}>\n        <Box d=\"flex\" justifyContent=\"center\">\n          <Box width=\"90%\" padding={50}>\n            <Box\n              height={80}\n              d=\"flex\"\n              minWidth=\"100%\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Box\n                d=\"flex\"\n                width=\"150px\"\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n              >\n                <CreateFiles />\n                <CreateLink />\n                <NoteModal />\n              </Box>\n              <Filter filter={filter} variables={variables} />\n              {/* <Text fontSize=\"4xl\" margin={0}>\n                Cataloged\n              </Text> */}\n              <SignOut />\n            </Box>\n            <br />\n            {initialLoad ? (\n              <Box\n                d=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                height=\"100%\"\n                width=\"100%\"\n              >\n                <Spinner size=\"xl\" />\n              </Box>\n            ) : (\n              <Box\n                d=\"grid\"\n                top={-80}\n                justifyContent=\"space-between\"\n                flexWrap=\"wrap\"\n                gridColumnGap={5}\n                gridRowGap={5}\n                gridTemplateColumns={`${ITEM_WIDTH}px ${ITEM_WIDTH}px ${ITEM_WIDTH}px ${ITEM_WIDTH}px`}\n              >\n                {(data?.items || [])\n                  // @ts-ignore\n                  .reduce((p, c) => {\n                    // @ts-ignore\n                    if (c.type === 'note' && !c.note.text) return p;\n\n                    return [\n                      ...p,\n                      <GridItem key={c.id}>\n                        <Item item={c} />\n                      </GridItem>,\n                    ];\n                  }, [])}\n                {/* <Grid.Row>\n              <Loader active={!!(loading && data)} />\n            </Grid.Row> */}\n                {networkStatus === 7 && !loading && !isLastPage && (\n                  <Waypoint\n                    bottomOffset={-400}\n                    onEnter={() => {\n                      fetchMore({\n                        variables: {\n                          ...variables,\n                          skip: FEED_PAGE_LENGTH * pageNum,\n                        },\n                        updateQuery: (prev, { fetchMoreResult }) => {\n                          if (!fetchMoreResult) return prev;\n                          return {\n                            ...prev,\n                            items: [\n                              ...(prev.items || []),\n                              ...(fetchMoreResult.items || []),\n                            ],\n                          };\n                        },\n                      });\n                    }}\n                  />\n                )}\n              </Box>\n            )}\n          </Box>\n        </Box>\n      </SelectContainer>\n    </>\n  );\n};\n","import { useState } from 'react';\n\nexport const usePagination = ({ pageLength } = { pageLength: 20 }) => {\n  const [pageNum, setPageNum] = useState(0);\n\n  return {\n    paginationVariables: { skip: pageNum * pageLength, first: pageLength },\n    setPageNum,\n    nextPage: () => setPageNum(pageNum + 1),\n    prevPage: () => setPageNum(pageNum - 1),\n  };\n};\n\n// export const useFilers = () => {\n//   const [] = useState();\n// };\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Feed } from '../components/Feed';\n\nexport const DashboardContainer = styled.div`\n  height: 100vh;\n`;\n\nexport const Dashboard = () => {\n  return (\n    <DashboardContainer>\n      <Feed />\n    </DashboardContainer>\n  );\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport gql from 'graphql-tag';\n\nimport { Box } from '@chakra-ui/core';\n\nimport { Labels } from '../components/Labels';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst GET_MOST_RECENT_ITEM = gql`\n  query mostRecentItem($type: String) {\n    mostRecentItem(type: $type) {\n      id\n      type\n\n      labels {\n        id\n        name\n      }\n\n      link {\n        id\n        href\n        notes\n\n        image\n        favicon\n        title\n        description\n      }\n\n      file {\n        id\n        name\n        extension\n        isUploaded\n        fullUrl\n        squareUrl\n      }\n    }\n  }\n`;\n\nconst useMostRecentItem = () => {\n  const { loading, data } = useQuery(GET_MOST_RECENT_ITEM, {\n    variables: { type: 'link' },\n    notifyOnNetworkStatusChange: true,\n  });\n\n  return { loading, data, item: !loading && data ? data.mostRecentItem : null };\n};\n\nexport const Playground = () => {\n  const { item } = useMostRecentItem();\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n      <Box\n        d=\"flex\"\n        margin={20}\n        padding={20}\n        size={400}\n        width={600}\n        // borderStyle=\"solid\"\n        // borderColor=\"lightgray\"\n        // borderWidth={2}\n        rounded=\"lg\"\n        justifyContent=\"center\"\n      >\n        <Labels />\n      </Box>\n    </Box>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Location, History } from 'history';\nimport queryString from 'query-string';\nimport { googleSignIn } from './__generated__/googleSignIn';\nimport { useAuth } from '../hooks/useAuth';\nimport { Redirect } from 'react-router';\n\nconst GOOGLE_SIGN_IN_MUTATION = gql`\n  mutation googleSignIn($code: String!) {\n    googleSignIn(code: $code) {\n      token\n    }\n  }\n`;\n\nexport const GoogleCallback = ({\n  location,\n  devMode = true || process.env.NODE_ENV === 'production',\n}: {\n  location: Location;\n  history: History;\n  devMode: boolean;\n}) => {\n  const { setToken, user } = useAuth();\n  const values = queryString.parse(location.search);\n\n  const [googleSignIn] = useMutation<googleSignIn>(GOOGLE_SIGN_IN_MUTATION, {\n    variables: { code: values.code },\n    onCompleted: data => {\n      if (data && !!data.googleSignIn.token && setToken) {\n        setToken(data.googleSignIn.token);\n      }\n    },\n    onError: error => {\n      console.log('error!', error);\n    },\n  });\n\n  useEffect(() => {\n    if (devMode) {\n      googleSignIn();\n    }\n  }, []);\n\n  return !user ? null : <Redirect to=\"/\" />;\n};\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { getGoogleUrl } from './__generated__/getGoogleUrl';\nimport { Box, Spinner } from '@chakra-ui/core';\n\nconst GET_GOOGLE_URL = gql`\n  query getGoogleUrl {\n    googleURL\n  }\n`;\n\nexport const ForceSignIn = () => {\n  const { data } = useQuery<getGoogleUrl>(GET_GOOGLE_URL);\n\n  useEffect(() => {\n    if (data) {\n      window.location.replace(data.googleURL);\n    }\n  }, [data]);\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      width=\"100vw\"\n      height=\"100vh\"\n    >\n      <Spinner size=\"xl\" />\n    </Box>\n  );\n};\n","import { theme as t } from '@chakra-ui/core';\n\nexport const theme = {\n  ...t,\n  colors: {\n    ...t.colors,\n    lightgrey: '#f6f8fa',\n  },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloClient } from 'apollo-client';\nimport { createUploadLink } from 'apollo-upload-client';\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { ThemeProvider } from '@chakra-ui/core';\n\nimport * as serviceWorker from './serviceWorker';\nimport { GRAPHQL_ENDPOINT } from './config';\nimport { Router } from './Router';\nimport { Auth } from './components/Auth';\nimport { theme } from './ui/theme';\nimport { GlobalModalProvider } from './components/GlobalModal';\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('token');\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `JWT ${token}` : '',\n    },\n  };\n});\n\nconst cache = new InMemoryCache({\n  dataIdFromObject: o => o.id,\n});\n\nconst link = authLink.concat(createUploadLink({ uri: GRAPHQL_ENDPOINT }));\n\nconst client = new ApolloClient({\n  link,\n  cache,\n});\n\nconst appNode = (\n  <ApolloProvider client={client}>\n    <Auth>\n      <GlobalModalProvider>\n        <ThemeProvider theme={theme}>\n          <Router />\n        </ThemeProvider>\n      </GlobalModalProvider>\n    </Auth>\n  </ApolloProvider>\n);\n\nReactDOM.render(appNode, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport { Dashboard } from './routes/Dashboard';\nimport { Note } from './components/Note';\nimport { Playground } from './routes/Playground';\n\nimport { GoogleCallback } from './routes/GoogleCallback';\nimport { ForceSignIn } from './routes/ForceSignIn';\nimport { useAuth } from './hooks/useAuth';\n\nexport const Router = () => {\n  const auth = useAuth();\n\n  const Root = auth.user ? Dashboard : ForceSignIn;\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Root} />\n        <Route path=\"/note/:id\" exact component={Note} />\n        <Route path=\"/google/redirect\" exact component={GoogleCallback} />\n        <Route path=\"/playground\" exact component={Playground} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n"],"sourceRoot":""}